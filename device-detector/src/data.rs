# [derive (Debug)] pub struct Element { pub regex : & 'static str , pub name : & 'static str , pub version : Option < & 'static str > , pub category : Option < & 'static str > , pub url : Option < & 'static str > , pub producer : Option < Producer > , } # [derive (Debug)] pub struct Producer { pub name : & 'static str , pub url : & 'static str , } # [derive (Debug)] pub struct Brand { pub regex : & 'static str , pub device : Option < & 'static str > , pub model : Option < & 'static str > , pub models : Option < & 'static [Model] > , } # [derive (Debug)] pub struct Model { pub regex : & 'static str , pub model : & 'static str , }
pub static BOTS : [Element ; 339usize] = [Element { regex : "360Spider(-Image|-Video)?" , name : "360Spider" , version : None , category : Some ("Search bot") , url : Some ("https://www.so.com/help/help_3_2.html") , producer : Some (Producer { name : "Online Media Group, Inc." , url : "" , }) , } , Element { regex : "Aboundex" , name : "Aboundexbot" , version : None , category : Some ("Search bot") , url : Some ("http://www.aboundex.com/crawler/") , producer : Some (Producer { name : "Aboundex.com" , url : "http://www.aboundex.com" , }) , } , Element { regex : "AcoonBot" , name : "Acoon" , version : None , category : Some ("Search bot") , url : Some ("http://www.acoon.de/robot.asp") , producer : Some (Producer { name : "Acoon GmbH" , url : "http://www.acoon.de" , }) , } , Element { regex : "AddThis\\.com" , name : "AddThis.com" , version : None , category : Some ("Social Media Agent") , url : Some ("") , producer : Some (Producer { name : "Clearspring Technologies, Inc." , url : "http://www.clearspring.com" , }) , } , Element { regex : "AhrefsBot" , name : "aHrefs Bot" , version : None , category : Some ("Crawler") , url : Some ("https://ahrefs.com/robot") , producer : Some (Producer { name : "Ahrefs Pte Ltd" , url : "https://ahrefs.com/robot" , }) , } , Element { regex : "ia_archiver|alexabot|verifybot" , name : "Alexa Crawler" , version : None , category : Some ("Search bot") , url : Some ("https://support.alexa.com/hc/en-us/sections/200100794-Crawlers") , producer : Some (Producer { name : "Alexa Internet" , url : "https://www.alexa.com" , }) , } , Element { regex : "alexa site audit" , name : "Alexa Site Audit" , version : None , category : Some ("Site Monitor") , url : Some ("https://support.alexa.com/hc/en-us/articles/200450194") , producer : Some (Producer { name : "Alexa Internet" , url : "https://www.alexa.com" , }) , } , Element { regex : "Amazon[ -]Route ?53[ -]Health[ -]Check[ -]Service" , name : "Amazon Route53 Health Check" , version : None , category : Some ("Service Agent") , url : None , producer : Some (Producer { name : "Amazon Web Services" , url : "https://aws.amazon.com/" , }) , } , Element { regex : "AmorankSpider" , name : "Amorank Spider" , version : None , category : Some ("Crawler") , url : Some ("http://amorank.com/webcrawler.html") , producer : Some (Producer { name : "Amorank" , url : "http://www.amorank.com" , }) , } , Element { regex : "ApacheBench" , name : "ApacheBench" , version : None , category : Some ("Benchmark") , url : Some ("https://httpd.apache.org/docs/2.4/programs/ab.html") , producer : Some (Producer { name : "The Apache Software Foundation" , url : "https://www.apache.org/foundation/" , }) , } , Element { regex : "Applebot" , name : "Applebot" , version : None , category : Some ("Crawler") , url : Some ("https://support.apple.com/en-us/HT204683") , producer : Some (Producer { name : "Apple Inc" , url : "https://www.apple.com" , }) , } , Element { regex : "AppSignalBot" , name : "AppSignalBot" , version : None , category : Some ("Site Monitor") , url : Some ("https://docs.appsignal.com/uptime-monitoring/") , producer : Some (Producer { name : "AppSignal" , url : "https://appsignal.com/" , }) , } , Element { regex : "Arachni" , name : "Arachni" , version : None , category : Some ("Security Checker") , url : Some ("https://www.arachni-scanner.com/") , producer : Some (Producer { name : "Sarosys LLC" , url : "https://www.sarosys.com/" , }) , } , Element { regex : "AspiegelBot" , name : "AspiegelBot" , version : None , category : Some ("Crawler") , url : Some ("https://aspiegel.com/") , producer : Some (Producer { name : "Huawei" , url : "https://www.huawei.com/" , }) , } , Element { regex : "Castro 2, Episode Duration Lookup" , name : "Castro 2" , version : None , category : Some ("Service Agent") , url : Some ("http://supertop.co/castro/") , producer : Some (Producer { name : "Supertop" , url : "http://supertop.co" , }) , } , Element { regex : "Curious George" , name : "Analytics SEO Crawler" , version : None , category : Some ("Crawler") , url : Some ("http://www.analyticsseo.com/crawler") , producer : Some (Producer { name : "Analytics SEO" , url : "http://www.analyticsseo.com" , }) , } , Element { regex : "archive\\.org_bot|special_archiver" , name : "archive.org bot" , version : None , category : Some ("Crawler") , url : Some ("https://archive.org/details/archive.org_bot") , producer : Some (Producer { name : "The Internet Archive" , url : "https://archive.org" , }) , } , Element { regex : "Ask Jeeves/Teoma" , name : "Ask Jeeves" , version : None , category : Some ("Search bot") , url : Some ("") , producer : Some (Producer { name : "Ask Jeeves Inc." , url : "http://www.ask.com" , }) , } , Element { regex : "Backlink-Check\\.de" , name : "Backlink-Check.de" , version : None , category : Some ("Crawler") , url : Some ("http://www.backlink-check.de/bot.html") , producer : Some (Producer { name : "Mediagreen Medienservice" , url : "http://www.backlink-check.de" , }) , } , Element { regex : "BacklinkCrawler" , name : "BacklinkCrawler" , version : None , category : Some ("Crawler") , url : Some ("http://www.backlinktest.com/crawler.html") , producer : Some (Producer { name : "2.0Promotion GbR" , url : "http://www.backlinktest.com" , }) , } , Element { regex : "baiduspider(-image)?|baidu Transcoder|baidu.*spider" , name : "Baidu Spider" , version : None , category : Some ("Search bot") , url : Some ("http://www.baidu.com/search/spider.htm") , producer : Some (Producer { name : "Baidu" , url : "http://www.baidu.com" , }) , } , Element { regex : "BazQux" , name : "BazQux Reader" , version : None , category : Some ("Feed Fetcher") , url : Some ("https://bazqux.com/fetcher") , producer : Some (Producer { name : "" , url : "" , }) , } , Element { regex : "MSNBot|msrbot|bingbot|BingPreview|msnbot-(UDiscovery|NewsBlogs)|adidxbot" , name : "BingBot" , version : None , category : Some ("Search bot") , url : Some ("http://search.msn.com/msnbot.htmn") , producer : Some (Producer { name : "Microsoft Corporation" , url : "http://www.microsoft.com" , }) , } , Element { regex : "Blekkobot" , name : "Blekkobot" , version : None , category : Some ("Search bot") , url : Some ("http://blekko.com/about/blekkobot") , producer : Some (Producer { name : "Blekko" , url : "http://blekko.com" , }) , } , Element { regex : "BLEXBot(Test)?" , name : "BLEXBot Crawler" , version : None , category : Some ("Crawler") , url : Some ("http://webmeup-crawler.com") , producer : Some (Producer { name : "WebMeUp" , url : "http://webmeup.com" , }) , } , Element { regex : "Bloglovin" , name : "Bloglovin" , version : None , category : Some ("Feed Fetcher") , url : Some ("http://www.bloglovin.com") , producer : Some (Producer { name : "" , url : "" , }) , } , Element { regex : "Blogtrottr" , name : "Blogtrottr" , version : None , category : Some ("Feed Fetcher") , url : Some ("") , producer : Some (Producer { name : "Blogtrottr Ltd" , url : "https://blogtrottr.com/" , }) , } , Element { regex : "BoardReader Blog Indexer" , name : "BoardReader Blog Indexer" , version : None , category : Some ("Crawler") , url : None , producer : Some (Producer { name : "BoardReader" , url : "https://boardreader.com/" , }) , } , Element { regex : "BountiiBot" , name : "Bountii Bot" , version : None , category : Some ("Search bot") , url : Some ("http://bountii.com/contact.php") , producer : Some (Producer { name : "Bountii Inc." , url : "http://bountii.com" , }) , } , Element { regex : "Browsershots" , name : "Browsershots" , version : None , category : Some ("Service Agent") , url : Some ("http://browsershots.org/faq") , producer : Some (Producer { name : "Browsershots.org" , url : "http://browsershots.org" , }) , } , Element { regex : "BUbiNG" , name : "BUbiNG" , version : None , category : Some ("Crawler") , url : Some ("http://law.di.unimi.it/BUbiNG.html") , producer : Some (Producer { name : "The Laboratory for Web Algorithmics (LAW)" , url : "http://law.di.unimi.it/software.php#buging" , }) , } , Element { regex : "(?<!HTC)[ _]Butterfly/" , name : "Butterfly Robot" , version : None , category : Some ("Search bot") , url : Some ("http://labs.topsy.com/butterfly") , producer : Some (Producer { name : "Topsy Labs" , url : "http://labs.topsy.com" , }) , } , Element { regex : "CareerBot" , name : "CareerBot" , version : None , category : Some ("Crawler") , url : Some ("http://www.career-x.de/bot.html") , producer : Some (Producer { name : "career-x GmbH" , url : "http://www.career-x.de" , }) , } , Element { regex : "CCBot" , name : "ccBot crawler" , version : None , category : Some ("Crawler") , url : Some ("http://commoncrawl.org/faq/") , producer : Some (Producer { name : "reddit inc." , url : "http://www.reddit.com" , }) , } , Element { regex : "Cliqzbot" , name : "Cliqzbot" , version : None , category : Some ("Crawler") , url : Some ("http://cliqz.com/company/cliqzbot") , producer : Some (Producer { name : "10betterpages GmbH" , url : "http://cliqz.com" , }) , } , Element { regex : "Cloudflare-AMP" , name : "CloudFlare AMP Fetcher" , version : None , category : Some ("Crawler") , url : Some ("https://amp.cloudflare.com/doc/fetcher.html") , producer : Some (Producer { name : "CloudFlare" , url : "http://www.cloudflare.com" , }) , } , Element { regex : "CloudflareDiagnostics" , name : "Cloudflare Diagnostics" , version : None , category : Some ("Site Monitor") , url : Some ("https://www.cloudflare.com/") , producer : Some (Producer { name : "Cloudflare" , url : "https://www.cloudflare.com" , }) , } , Element { regex : "CloudFlare-AlwaysOnline" , name : "CloudFlare Always Online" , version : None , category : Some ("Site Monitor") , url : Some ("http://www.cloudflare.com/always-online") , producer : Some (Producer { name : "CloudFlare" , url : "http://www.cloudflare.com" , }) , } , Element { regex : "coccoc.com" , name : "Cốc Cốc Bot" , version : None , category : Some ("Search bot") , url : Some ("https://help.coccoc.com/en/search-engine/coccoc-robots") , producer : Some (Producer { name : "Cốc Cốc" , url : "https://coccoc.com/" , }) , } , Element { regex : "collectd" , name : "Collectd" , version : None , category : Some ("Site Monitor") , url : Some ("https://collectd.org/") , producer : Some (Producer { name : "Collectd" , url : "https://collectd.org/" , }) , } , Element { regex : "CommaFeed" , name : "CommaFeed" , version : None , category : Some ("Feed Fetcher") , url : Some ("http://www.commafeed.com") , producer : Some (Producer { name : "" , url : "" , }) , } , Element { regex : "CSS Certificate Spider" , name : "CSS Certificate Spider" , version : None , category : Some ("Crawler") , url : Some ("http://www.css-security.com/certificatespider/") , producer : Some (Producer { name : "Certified Security Solutions" , url : "https://www.css-security.com/company/about-us/" , }) , } , Element { regex : "Datadog Agent" , name : "Datadog Agent" , version : None , category : Some ("Site Monitor") , url : Some ("https://github.com/DataDog/dd-agent") , producer : Some (Producer { name : "Datadog" , url : "https://www.datadoghq.com/" , }) , } , Element { regex : "Datanyze" , name : "Datanyze" , version : None , category : Some ("Crawler") , url : Some ("") , producer : Some (Producer { name : "Datanyze" , url : "https://www.datanyze.com" , }) , } , Element { regex : "Dataprovider" , name : "Dataprovider" , version : None , category : Some ("Crawler") , url : Some ("") , producer : Some (Producer { name : "Dataprovider B.V." , url : "https://www.dataprovider.com/" , }) , } , Element { regex : "Daum(oa)?[ /][0-9]" , name : "Daum" , version : None , category : Some ("Search bot") , url : Some ("http://tab.search.daum.net/aboutWebSearch_en.html") , producer : Some (Producer { name : "Daum Communications Corp." , url : "http://www.kakaocorp.com/main" , }) , } , Element { regex : "Dazoobot" , name : "Dazoobot" , version : None , category : Some ("Search bot") , url : Some ("") , producer : Some (Producer { name : "DAZOO.FR" , url : "http://dazoo.fr" , }) , } , Element { regex : "discobot(-news)?" , name : "Discobot" , version : None , category : Some ("Search bot") , url : Some ("http://discoveryengine.com/discobot.html") , producer : Some (Producer { name : "Discovery Engine" , url : "http://discoveryengine.com" , }) , } , Element { regex : "Domain Re-Animator Bot|support@domainreanimator.com" , name : "Domain Re-Animator Bot" , version : None , category : Some ("Crawler") , url : Some ("") , producer : Some (Producer { name : "Domain Re-Animator, LLC" , url : "http://domainreanimator.com" , }) , } , Element { regex : "DotBot" , name : "DotBot" , version : None , category : Some ("Crawler") , url : Some ("http://www.opensiteexplorer.org/dotbot") , producer : Some (Producer { name : "SEOmoz, Inc." , url : "http://moz.com/" , }) , } , Element { regex : "DuckDuck(?:Go-Favicons-)?Bot" , name : "DuckDuckGo Bot" , version : None , category : Some ("Search bot") , url : Some ("https://duckduckgo.com/duckduckbot") , producer : Some (Producer { name : "DuckDuckGo" , url : "https://duckduckgo.com/" , }) , } , Element { regex : "EasouSpider" , name : "Easou Spider" , version : None , category : Some ("Search bot") , url : Some ("http://www.easou.com/search/spider.html") , producer : Some (Producer { name : "easou ICP" , url : "http://www.easou.com" , }) , } , Element { regex : "eCairn-Grabber" , name : "eCairn-Grabber" , version : None , category : Some ("Crawler") , url : None , producer : Some (Producer { name : "eCairn" , url : "https://ecairn.com" , }) , } , Element { regex : "EMail Exractor" , name : "EMail Exractor" , version : None , category : Some ("Crawler") , url : Some ("") , producer : Some (Producer { name : "" , url : "" , }) , } , Element { regex : "evc-batch" , name : "evc-batch" , version : None , category : Some ("Crawler") , url : Some ("") , producer : Some (Producer { name : "eVenture Capital Partners II, LLC" , url : "http://www.eventures.vc/" , }) , } , Element { regex : "Exabot(-Thumbnails|-Images)?|ExaleadCloudview" , name : "ExaBot" , version : None , category : Some ("Crawler") , url : Some ("http://www.exabot.com/go/robot") , producer : Some (Producer { name : "Dassault Systèmes" , url : "http://www.3ds.com" , }) , } , Element { regex : "ExactSeek Crawler" , name : "ExactSeek Crawler" , version : None , category : Some ("Search bot") , url : Some ("http://www.exactseek.com") , producer : Some (Producer { name : "Jayde Online, Inc." , url : "http://www.jaydeonlineinc.com" , }) , } , Element { regex : "Ezooms" , name : "Ezooms" , version : None , category : Some ("Crawler") , url : Some ("") , producer : Some (Producer { name : "SEOmoz, Inc." , url : "http://moz.com/" , }) , } , Element { regex : "facebookexternalhit|facebookplatform|facebookexternalua" , name : "Facebook External Hit" , version : None , category : Some ("Social Media Agent") , url : Some ("https://www.facebook.com/externalhit_uatext.php") , producer : Some (Producer { name : "Facebook" , url : "http://www.facebook.com" , }) , } , Element { regex : "Feedbin" , name : "Feedbin" , version : None , category : Some ("Feed Fetcher") , url : Some ("http://feedbin.com/") , producer : Some (Producer { name : "" , url : "" , }) , } , Element { regex : "FeedBurner" , name : "FeedBurner" , version : None , category : Some ("Feed Fetcher") , url : Some ("http://www.feedburner.com") , producer : Some (Producer { name : "" , url : "" , }) , } , Element { regex : "Feed Wrangler" , name : "Feed Wrangler" , version : None , category : Some ("Feed Fetcher") , url : Some ("https://feedwrangler.net/") , producer : Some (Producer { name : "David Smith & Developing Perspective, LLC" , url : "https://david-smith.org" , }) , } , Element { regex : "(Meta)?Feedly(Bot|App)?" , name : "Feedly" , version : None , category : Some ("Feed Fetcher") , url : Some ("http://www.feedly.com") , producer : Some (Producer { name : "" , url : "" , }) , } , Element { regex : "Feedspot" , name : "Feedspot" , version : None , category : Some ("Feed Fetcher") , url : Some ("http://www.feedspot.com") , producer : Some (Producer { name : "" , url : "" , }) , } , Element { regex : "Fever/[0-9]" , name : "Fever" , version : None , category : Some ("Feed Fetcher") , url : Some ("http://feedafever.com/") , producer : Some (Producer { name : "" , url : "" , }) , } , Element { regex : "FlipboardProxy|FlipboardRSS" , name : "Flipboard" , version : None , category : Some ("Feed Fetcher") , url : Some ("http://flipboard.com/browserproxy") , producer : Some (Producer { name : "Flipboard" , url : "http://flipboard.com/" , }) , } , Element { regex : "Findxbot" , name : "Findxbot" , version : None , category : Some ("Crawler") , url : Some ("http://www.findxbot.com") , producer : None , } , Element { regex : "FreshRSS" , name : "FreshRSS" , version : None , category : Some ("Feed Fetcher") , url : Some ("https://freshrss.org/") , producer : None , } , Element { regex : "Genieo" , name : "Genieo Web filter" , version : None , category : Some ("") , url : Some ("http://www.genieo.com/webfilter.html") , producer : Some (Producer { name : "Genieo" , url : "http://www.genieo.com" , }) , } , Element { regex : "GigablastOpenSource" , name : "Gigablast" , version : None , category : Some ("Search bot") , url : Some ("https://github.com/gigablast/open-source-search-engine") , producer : Some (Producer { name : "Matt Wells" , url : "http://www.gigablast.com/faq.html" , }) , } , Element { regex : "Gluten Free Crawler" , name : "Gluten Free Crawler" , version : None , category : Some ("Crawler") , url : Some ("http://glutenfreepleasure.com/") , producer : Some (Producer { name : "" , url : "" , }) , } , Element { regex : "ichiro/mobile goo" , name : "Goo" , version : None , category : Some ("Search bot") , url : Some ("http://search.goo.ne.jp/option/use/sub4/sub4-1") , producer : Some (Producer { name : "NTT Resonant" , url : "http://goo.ne.jp" , }) , } , Element { regex : "Google Favicon" , name : "Google Favicon" , version : None , category : Some ("Crawler") , url : None , producer : None , } , Element { regex : "Google Search Console" , name : "Google Search Console" , version : None , category : Some ("Crawler") , url : Some ("https://search.google.com/search-console/about") , producer : Some (Producer { name : "Google Inc." , url : "http://www.google.com" , }) , } , Element { regex : "Google Page Speed Insights" , name : "Google PageSpeed Insights" , version : None , category : Some ("Site Monitor") , url : Some ("http://developers.google.com/speed/pagespeed/insights/") , producer : Some (Producer { name : "Google Inc." , url : "http://www.google.com" , }) , } , Element { regex : "google_partner_monitoring" , name : "Google Partner Monitoring" , version : None , category : Some ("Site Monitor") , url : Some ("") , producer : Some (Producer { name : "Google Inc." , url : "http://www.google.com" , }) , } , Element { regex : "Google-Cloud-Scheduler" , name : "Google Cloud Scheduler" , version : None , category : Some ("Crawler") , url : Some ("https://cloud.google.com/scheduler") , producer : Some (Producer { name : "Google Inc." , url : "https://www.google.com" , }) , } , Element { regex : "Google-Structured-Data-Testing-Tool" , name : "Google Structured Data Testing Tool" , version : None , category : Some ("Validator") , url : Some ("https://search.google.com/structured-data/testing-tool") , producer : Some (Producer { name : "Google Inc." , url : "http://www.google.com" , }) , } , Element { regex : "GoogleStackdriverMonitoring" , name : "Google Stackdriver Monitoring" , version : None , category : Some ("Site Monitor") , url : Some ("https://cloud.google.com/monitoring") , producer : Some (Producer { name : "Google Inc." , url : "https://www.google.com" , }) , } , Element { regex : "via ggpht\\.com GoogleImageProxy" , name : "Gmail Image Proxy" , version : None , category : Some ("Crawler") , url : Some ("") , producer : Some (Producer { name : "Google Inc." , url : "http://www.google.com" , }) , } , Element { regex : "SeznamEmailProxy" , name : "Seznam Email Proxy" , version : None , category : Some ("Crawler") , url : Some ("") , producer : Some (Producer { name : "Seznam.cz, a.s." , url : "http://www.seznam.cz/" , }) , } , Element { regex : "Seznam-Zbozi-robot" , name : "Seznam Zbozi.cz" , version : None , category : Some ("Crawler") , url : Some ("") , producer : Some (Producer { name : "Seznam.cz, a.s." , url : "https://www.zbozi.cz/" , }) , } , Element { regex : "Heurekabot-Feed" , name : "Heureka Feed" , version : None , category : Some ("Crawler") , url : Some ("https://sluzby.heureka.cz/napoveda/heurekabot/") , producer : Some (Producer { name : "Heureka.cz, a.s." , url : "https://www.heureka.cz/" , }) , } , Element { regex : "ShopAlike" , name : "ShopAlike" , version : None , category : Some ("Crawler") , url : Some ("") , producer : Some (Producer { name : "Visual Meta" , url : "https://www.shopalike.cz/" , }) , } , Element { regex : "AdsBot-Google(-Mobile)?|Adwords-(DisplayAds|Express|Instant)|Google Web Preview|Google[ -]Publisher[ -]Plugin|Google-(Ads-Qualify|Adwords|AMPHTML|Assess|HotelAdsVerifier|Read-Aloud|Shopping-Quality|Site-Verification|speakr|Test|Youtube-Links)|(APIs|DuplexWeb|Feedfetcher|Mediapartners)-Google|Googlebot(-Mobile|-Image|-Video|-News)?|GoogleProducer|Google.*/\\+/web/snippet" , name : "Googlebot" , version : None , category : Some ("Search bot") , url : Some ("http://www.google.com/bot.html") , producer : Some (Producer { name : "Google Inc." , url : "http://www.google.com" , }) , } , Element { regex : "heritrix" , name : "Heritrix" , version : None , category : Some ("Crawler") , url : Some ("https://webarchive.jira.com/wiki/display/Heritrix/Heritrix") , producer : Some (Producer { name : "The Internet Archive" , url : "https://archive.org" , }) , } , Element { regex : "HubSpot " , name : "HubSpot" , version : None , category : Some ("Crawler") , url : None , producer : Some (Producer { name : "HubSpot Inc." , url : "https://www.hubspot.com" , }) , } , Element { regex : "HTTPMon" , name : "HTTPMon" , version : None , category : Some ("Site Monitor") , url : Some ("http://www.httpmon.com") , producer : Some (Producer { name : "towards GmbH" , url : "http://www.towards.ch/" , }) , } , Element { regex : "ICC-Crawler" , name : "ICC-Crawler" , version : None , category : Some ("Crawler") , url : Some ("http://www.nict.go.jp/en/univ-com/plan/crawl.html") , producer : Some (Producer { name : "" , url : "" , }) , } , Element { regex : "inoreader.com" , name : "inoreader" , version : None , category : Some ("Feed Reader") , url : Some ("https://www.inoreader.com") , producer : None , } , Element { regex : "iisbot" , name : "IIS Site Analysis" , version : None , category : Some ("Crawler") , url : Some ("http://www.iis.net/iisbot.html") , producer : Some (Producer { name : "Microsoft Corporation" , url : "http://www.microsoft.com" , }) , } , Element { regex : "ips-agent" , name : "IPS Agent" , version : None , category : Some ("Crawler") , url : None , producer : Some (Producer { name : "VeriSign, Inc" , url : "http://www.verisign.com/" , }) , } , Element { regex : "IP-Guide\\.com" , name : "IP-Guide Crawler" , version : None , category : Some ("Crawler") , url : Some ("") , producer : Some (Producer { name : "" , url : "https://ip-guide.com" , }) , } , Element { regex : "kouio" , name : "Kouio" , version : None , category : Some ("Feed Fetcher") , url : Some ("http://kouio.com/") , producer : Some (Producer { name : "" , url : "" , }) , } , Element { regex : "larbin" , name : "Larbin web crawler" , version : None , category : Some ("Crawler") , url : Some ("http://larbin.sourceforge.net") , producer : Some (Producer { name : "" , url : "" , }) , } , Element { regex : "([A-z0-9]*)-Lighthouse" , name : "Lighthouse" , version : None , category : Some ("Site Monitor") , url : Some ("https://developers.google.com/web/tools/lighthouse") , producer : Some (Producer { name : "Lighthouse" , url : "https://developers.google.com/web/tools/lighthouse" , }) , } , Element { regex : "linkdexbot(-mobile)?|linkdex\\.com" , name : "Linkdex Bot" , version : None , category : Some ("Search bot") , url : Some ("http://www.linkdex.com/bots") , producer : Some (Producer { name : "Mojeek Ltd." , url : "http://www.mojeek.com" , }) , } , Element { regex : "LinkedInBot" , name : "LinkedIn Bot" , version : None , category : Some ("Social Media Agent") , url : Some ("http://www.linkedin.com") , producer : Some (Producer { name : "LinkedIn" , url : "http://www.linkedin.com" , }) , } , Element { regex : "ltx71" , name : "LTX71" , version : None , category : None , url : Some ("http://ltx71.com/") , producer : Some (Producer { name : "" , url : "" , }) , } , Element { regex : "Mail\\.RU(_Bot)?" , name : "Mail.Ru Bot" , version : None , category : Some ("Search bot") , url : Some ("http://help.mail.ru/webmaster/indexing/robots/types_robots") , producer : Some (Producer { name : "Mail.Ru Group" , url : "http://corp.mail.ru" , }) , } , Element { regex : "magpie-crawler" , name : "Magpie-Crawler" , version : None , category : Some ("Social Media Agent") , url : Some ("http://www.brandwatch.com/magpie-crawler/") , producer : Some (Producer { name : "Brandwatch" , url : "http://www.brandwatch.com" , }) , } , Element { regex : "MagpieRSS" , name : "MagpieRSS" , version : None , category : Some ("Feed Parser") , url : Some ("http://magpierss.sourceforge.net/") , producer : Some (Producer { name : "" , url : "" , }) , } , Element { regex : "masscan" , name : "masscan" , version : None , category : Some ("Crawler") , url : Some ("https://github.com/robertdavidgraham/masscan") , producer : Some (Producer { name : "Robert Graham" , url : "https://github.com/robertdavidgraham" , }) , } , Element { regex : "Mastodon/" , name : "Mastodon Bot" , version : None , category : Some ("Social Media Agent") , url : None , producer : None , } , Element { regex : "meanpathbot" , name : "Meanpath Bot" , version : None , category : Some ("Search bot") , url : Some ("http://www.meanpath.com/meanpathbot.html") , producer : Some (Producer { name : "Meanpath" , url : "http://www.meanpath.com" , }) , } , Element { regex : "MetaJobBot" , name : "MetaJobBot" , version : None , category : Some ("Crawler") , url : Some ("http://www.metajob.at/the/crawler") , producer : Some (Producer { name : "MetaJob" , url : "http://www.metajob.at" , }) , } , Element { regex : "MetaInspector" , name : "MetaInspector" , version : None , category : Some ("Crawler") , url : Some ("https://github.com/jaimeiniesta/metainspector") , producer : None , } , Element { regex : "MixrankBot" , name : "Mixrank Bot" , version : None , category : Some ("Crawler") , url : Some ("http://mixrank.com") , producer : Some (Producer { name : "Online Media Group, Inc." , url : "" , }) , } , Element { regex : "MJ12bot" , name : "MJ12 Bot" , version : None , category : Some ("Search bot") , url : Some ("http://majestic12.co.uk/bot.php") , producer : Some (Producer { name : "Majestic-12" , url : "http://majestic12.co.uk" , }) , } , Element { regex : "Mnogosearch" , name : "Mnogosearch" , version : None , category : Some ("Search bot") , url : Some ("http://www.mnogosearch.org/") , producer : Some (Producer { name : "Lavtech.Com Corp." , url : "" , }) , } , Element { regex : "MojeekBot" , name : "MojeekBot" , version : None , category : Some ("Search bot") , url : Some ("http://www.mojeek.com/bot.html") , producer : Some (Producer { name : "Mojeek Ltd." , url : "http://www.mojeek.com" , }) , } , Element { regex : "munin" , name : "Munin" , version : None , category : Some ("Site Monitor") , url : Some ("http://munin-monitoring.org/") , producer : Some (Producer { name : "Munin" , url : "http://munin-monitoring.org/" , }) , } , Element { regex : "NalezenCzBot" , name : "NalezenCzBot" , version : None , category : Some ("Crawler") , url : Some ("http://www.nalezen.cz/about-crawler") , producer : Some (Producer { name : "Jaroslav Kuboš" , url : "" , }) , } , Element { regex : "check_http/v" , name : "Nagios check_http" , version : None , category : Some ("Site Monitor") , url : Some ("https://nagios.org") , producer : Some (Producer { name : "Nagios Plugins Development Team" , url : "https://nagios.org" , }) , } , Element { regex : "nbertaupete95\\(at\\)gmail.com" , name : "nbertaupete95" , version : None , category : Some ("Crawler") , url : None , producer : None , } , Element { regex : "Netcraft( Web Server Survey| SSL Server Survey|SurveyAgent)" , name : "Netcraft Survey Bot" , version : None , category : Some ("Search bot") , url : Some ("") , producer : Some (Producer { name : "Netcraft" , url : "http://www.netcraft.com" , }) , } , Element { regex : "netEstate NE Crawler" , name : "netEstate" , version : None , category : Some ("Crawler") , url : Some ("http://www.website-datenbank.de/Impressum") , producer : Some (Producer { name : "netEstate GmbH" , url : "https://www.netestate.de/en/" , }) , } , Element { regex : "Netvibes" , name : "Netvibes" , version : None , category : Some ("Feed Fetcher") , url : Some ("http://www.netvibes.com/") , producer : Some (Producer { name : "" , url : "" , }) , } , Element { regex : "NewsBlur .*(Fetcher|Finder)" , name : "NewsBlur" , version : None , category : Some ("Feed Fetcher") , url : Some ("http://www.newsblur.com") , producer : Some (Producer { name : "" , url : "" , }) , } , Element { regex : "NewsGatorOnline" , name : "NewsGator" , version : None , category : Some ("Feed Fetcher") , url : Some ("http://www.newsgator.com") , producer : Some (Producer { name : "" , url : "" , }) , } , Element { regex : "nlcrawler" , name : "NLCrawler" , version : None , category : Some ("Crawler") , url : Some ("") , producer : Some (Producer { name : "Northern Light" , url : "http://northernlight.com" , }) , } , Element { regex : "Nmap Scripting Engine" , name : "Nmap" , version : None , category : Some ("Security Checker") , url : Some ("https://nmap.org/book/nse.html") , producer : Some (Producer { name : "Nmap" , url : "https://nmap.org/" , }) , } , Element { regex : "Nuzzel" , name : "Nuzzel" , version : None , category : Some ("Crawler") , url : None , producer : Some (Producer { name : "Nuzzel" , url : "https://www.nuzzel.com/" , }) , } , Element { regex : "Octopus [0-9]" , name : "Octopus" , version : None , category : None , url : None , producer : None , } , Element { regex : "omgili(?:bot)?" , name : "Omgili bot" , version : None , category : Some ("Search bot") , url : Some ("http://www.omgili.com/Crawler.html") , producer : Some (Producer { name : "Omgili" , url : "http://www.omgili.com" , }) , } , Element { regex : "OpenindexSpider" , name : "Openindex Spider" , version : None , category : Some ("Search bot") , url : Some ("http://www.openindex.io/en/webmasters/spider.html") , producer : Some (Producer { name : "Openindex B.V." , url : "http://www.openindex.io" , }) , } , Element { regex : "spbot" , name : "OpenLinkProfiler" , version : None , category : Some ("Crawler") , url : Some ("http://openlinkprofiler.org/bot") , producer : Some (Producer { name : "Axandra GmbH" , url : "http://www.axandra.com" , }) , } , Element { regex : "OpenWebSpider" , name : "OpenWebSpider" , version : None , category : Some ("Crawler") , url : Some ("http://www.openwebspider.org") , producer : Some (Producer { name : "OpenWebSpider Lab" , url : "http://lab.openwebspider.org" , }) , } , Element { regex : "OrangeBot|VoilaBot" , name : "Orange Bot" , version : None , category : Some ("Search bot") , url : Some ("http://lemoteur.orange.fr") , producer : Some (Producer { name : "Orange" , url : "http://www.orange.fr" , }) , } , Element { regex : "PaperLiBot" , name : "PaperLiBot" , version : None , category : Some ("Search bot") , url : Some ("http://support.paper.li/entries/20023257-what-is-paper-li") , producer : Some (Producer { name : "Smallrivers SA" , url : "http://www.paper.li" , }) , } , Element { regex : "phantomas/" , name : "Phantomas" , version : None , category : Some ("Site Monitor") , url : Some ("https://github.com/macbre/phantomas") , producer : None , } , Element { regex : "phpservermon" , name : "PHP Server Monitor" , version : None , category : Some ("Site Monitor") , url : Some ("https://github.com/phpservermon/phpservermon") , producer : Some (Producer { name : "PHP Server Monitor" , url : "http://www.phpservermonitor.org/" , }) , } , Element { regex : "PocketParser" , name : "PocketParser" , version : None , category : Some ("Read-it-later Service") , url : Some ("https://getpocket.com/pocketparser_ua") , producer : Some (Producer { name : "Pocket" , url : "https://getpocket.com/" , }) , } , Element { regex : "PritTorrent" , name : "PritTorrent" , version : None , category : Some ("Crawler") , url : Some ("https://github.com/astro/prittorrent") , producer : Some (Producer { name : "Bitlove" , url : "http://bitlove.org/" , }) , } , Element { regex : "PRTG Network Monitor" , name : "PRTG Network Monitor" , version : None , category : Some ("Network Monitor") , url : Some ("https://www.paessler.com/prtg") , producer : Some (Producer { name : "Paessler AG" , url : "https://www.paessler.com" , }) , } , Element { regex : "psbot(-page)?" , name : "Picsearch bot" , version : None , category : Some ("Search bot") , url : Some ("http://www.picsearch.com/bot.html") , producer : Some (Producer { name : "Picsearch" , url : "http://www.picsearch.com" , }) , } , Element { regex : "Pingdom(?:\\.com|TMS)" , name : "Pingdom Bot" , version : None , category : Some ("Site Monitor") , url : Some ("") , producer : Some (Producer { name : "Pingdom AB" , url : "https://www.pingdom.com" , }) , } , Element { regex : "Quora Link Preview" , name : "Quora Link Preview" , version : None , category : Some ("Crawler") , url : Some ("") , producer : Some (Producer { name : "Quora" , url : "http://www.quora.com" , }) , } , Element { regex : "Quora-Bot" , name : "Quora Bot" , version : None , category : Some ("Crawler") , url : Some ("") , producer : Some (Producer { name : "Quora" , url : "https://www.quora.com/" , }) , } , Element { regex : "RamblerMail" , name : "RamblerMail Image Proxy" , version : None , category : Some ("Crawler") , url : Some ("") , producer : Some (Producer { name : "Rambler&Co" , url : "https://rambler-co.ru/" , }) , } , Element { regex : "QuerySeekerSpider" , name : "QuerySeekerSpider" , version : None , category : Some ("Crawler") , url : Some ("http://queryseeker.com/bot.html") , producer : Some (Producer { name : "QueryEye Inc." , url : "http://queryeye.com" , }) , } , Element { regex : "Qwantify" , name : "Qwantify" , version : None , category : Some ("Crawler") , url : Some ("https://www.qwant.com/") , producer : Some (Producer { name : "Qwant Corporation" , url : "https://www.qwant.com/" , }) , } , Element { regex : "Rainmeter" , name : "Rainmeter" , version : None , category : Some ("Crawler") , url : Some ("https://www.rainmeter.net") , producer : None , } , Element { regex : "redditbot" , name : "Reddit Bot" , version : None , category : Some ("Social Media Agent") , url : Some ("http://www.reddit.com/feedback") , producer : Some (Producer { name : "reddit inc." , url : "http://www.reddit.com" , }) , } , Element { regex : "Riddler" , name : "Riddler" , version : None , category : Some ("Security search bot") , url : Some ("https://riddler.io/about") , producer : Some (Producer { name : "F-Secure" , url : "https://www.f-secure.com" , }) , } , Element { regex : "rogerbot" , name : "Rogerbot" , version : None , category : Some ("Crawler") , url : Some ("http://moz.com/help/pro/what-is-rogerbot-") , producer : Some (Producer { name : "SEOmoz, Inc." , url : "http://moz.com/" , }) , } , Element { regex : "ROI Hunter" , name : "ROI Hunter" , version : None , category : Some ("Crawler") , url : Some ("") , producer : Some (Producer { name : "Roihunter a.s." , url : "http://roihunter.com/" , }) , } , Element { regex : "SafeDNSBot" , name : "SafeDNSBot" , version : None , category : Some ("Crawler") , url : Some ("https://www.safedns.com/searchbot") , producer : Some (Producer { name : "SafeDNS, Inc." , url : "https://www.safedns.com/" , }) , } , Element { regex : "Scrapy" , name : "Scrapy" , version : None , category : Some ("Crawler") , url : Some ("http://scrapy.org") , producer : None , } , Element { regex : "Screaming Frog SEO Spider" , name : "Screaming Frog SEO Spider" , version : None , category : Some ("Crawler") , url : Some ("http://www.screamingfrog.co.uk/seo-spider") , producer : Some (Producer { name : "Screaming Frog Ltd" , url : "http://www.screamingfrog.co.uk" , }) , } , Element { regex : "ScreenerBot" , name : "ScreenerBot" , version : None , category : Some ("Crawler") , url : Some ("http://www.screenerbot.com") , producer : Some (Producer { name : "" , url : "" , }) , } , Element { regex : "SemrushBot" , name : "Semrush Bot" , version : None , category : Some ("Crawler") , url : Some ("http://www.semrush.com/bot.html") , producer : Some (Producer { name : "SEMrush" , url : "http://www.semrush.com" , }) , } , Element { regex : "SensikaBot" , name : "Sensika Bot" , version : None , category : Some ("") , url : Some ("") , producer : Some (Producer { name : "Sensika" , url : "http://sensika.com" , }) , } , Element { regex : "SEOENG(World)?Bot" , name : "SEOENGBot" , version : None , category : Some ("Crawler") , url : Some ("http://www.seoengine.com/seoengbot.htm") , producer : Some (Producer { name : "SEO Engine" , url : "http://www.seoengine.com" , }) , } , Element { regex : "SEOkicks-Robot" , name : "SEOkicks-Robot" , version : None , category : Some ("Crawler") , url : Some ("http://www.seokicks.de/robot.html") , producer : Some (Producer { name : "SEOkicks" , url : "https://www.seokicks.de/" , }) , } , Element { regex : "seoscanners\\.net" , name : "Seoscanners.net" , version : None , category : Some ("Crawler") , url : Some ("") , producer : None , } , Element { regex : "SkypeUriPreview" , name : "Skype URI Preview" , version : None , category : Some ("Service Agent") , url : Some ("") , producer : Some (Producer { name : "Skype Communications S.à.r.l." , url : "https://www.skype.com" , }) , } , Element { regex : "SeznamBot|SklikBot|Seznam screenshot-generator" , name : "Seznam Bot" , version : None , category : Some ("Search bot") , url : Some ("http://www.mapy.cz/cz/seznambot.html") , producer : Some (Producer { name : "Seznam.cz, a.s." , url : "http://www.seznam.cz/" , }) , } , Element { regex : "shopify-partner-homepage-scraper" , name : "Shopify Partner" , version : None , category : Some ("Crawler") , url : Some ("https://www.shopify.com/partners") , producer : Some (Producer { name : "Shopify" , url : "https://www.shopify.com/" , }) , } , Element { regex : "ShopWiki" , name : "ShopWiki" , version : None , category : Some ("Search tools") , url : Some ("http://www.shopwiki.com/wiki/Help:Bot") , producer : Some (Producer { name : "ShopWiki Corp." , url : "http://www.shopwiki.com" , }) , } , Element { regex : "SilverReader" , name : "SilverReader" , version : None , category : Some ("Feed Fetcher") , url : Some ("http://silverreader.com") , producer : Some (Producer { name : "" , url : "" , }) , } , Element { regex : "SimplePie" , name : "SimplePie" , version : None , category : Some ("Feed Parser") , url : Some ("http://www.simplepie.org") , producer : Some (Producer { name : "" , url : "" , }) , } , Element { regex : "SISTRIX Crawler" , name : "SISTRIX Crawler" , version : None , category : Some ("Crawler") , url : Some ("http://crawler.sistrix.net") , producer : Some (Producer { name : "SISTRIX GmbH" , url : "http://www.sistrix.de" , }) , } , Element { regex : "compatible; (?:SISTRIX )?Optimizer" , name : "SISTRIX Optimizer" , version : None , category : Some ("Crawler") , url : Some ("https://optimizer.sistrix.com") , producer : Some (Producer { name : "SISTRIX GmbH" , url : "http://www.sistrix.de" , }) , } , Element { regex : "SiteSucker" , name : "SiteSucker" , version : None , category : Some ("Crawler") , url : Some ("http://ricks-apps.com/osx/sitesucker/") , producer : None , } , Element { regex : "sixy.ch" , name : "Sixy.ch" , version : None , category : Some ("Site Monitor") , url : Some ("http://sixy.ch") , producer : Some (Producer { name : "Manuel Kasper" , url : "https://neon1.net/" , }) , } , Element { regex : "Slackbot|Slack-ImgProxy" , name : "Slackbot" , version : None , category : Some ("Crawler") , url : Some ("https://api.slack.com/robots") , producer : Some (Producer { name : "Slack Technologies" , url : "http://slack.com" , }) , } , Element { regex : "(Sogou (web|inst|Pic) spider)|New-Sogou-Spider" , name : "Sogou Spider" , version : None , category : Some ("Search bot") , url : Some ("http://www.sogou.com/docs/help/webmasters.htm") , producer : Some (Producer { name : "Sohu, Inc." , url : "http://www.sogou.com" , }) , } , Element { regex : "Sosospider|Sosoimagespider" , name : "Soso Spider" , version : None , category : Some ("Search bot") , url : Some ("http://help.soso.com/webspider.htm") , producer : Some (Producer { name : "Tencent Holdings" , url : "http://www.soso.com" , }) , } , Element { regex : "Sprinklr" , name : "Sprinklr" , version : None , category : Some ("Crawler") , url : Some ("") , producer : Some (Producer { name : "Sprinklr, Inc." , url : "https://www.sprinklr.com/" , }) , } , Element { regex : "sqlmap/" , name : "sqlmap" , version : None , category : Some ("Security Checker") , url : Some ("http://sqlmap.org/") , producer : Some (Producer { name : "sqlmap" , url : "http://sqlmap.org/" , }) , } , Element { regex : "SSL Labs" , name : "SSL Labs" , version : None , category : Some ("Validator") , url : Some ("https://www.ssllabs.com/about/assessment.html") , producer : Some (Producer { name : "SSL Labs" , url : "https://www.ssllabs.com/about/assessment.html" , }) , } , Element { regex : "StatusCake" , name : "StatusCake" , version : None , category : Some ("Site Monitor") , url : Some ("https://www.statuscake.com") , producer : Some (Producer { name : "StatusCake" , url : "https://www.statuscake.com" , }) , } , Element { regex : "Superfeedr bot" , name : "Superfeedr Bot" , version : None , category : Some ("Feed Fetcher") , url : Some ("") , producer : Some (Producer { name : "Superfeedr" , url : "https://superfeedr.com/" , }) , } , Element { regex : "Sparkler/[0-9]" , name : "Sparkler" , version : None , category : Some ("Crawler") , url : Some ("https://github.com/USCDataScience/sparkler") , producer : None , } , Element { regex : "Spinn3r" , name : "Spinn3r" , version : None , category : Some ("Crawler") , url : Some ("http://spinn3r.com/robot") , producer : Some (Producer { name : "Tailrank Inc" , url : "http://spinn3r.com" , }) , } , Element { regex : "SputnikBot" , name : "Sputnik Bot" , version : None , category : Some ("Crawler") , url : Some ("") , producer : None , } , Element { regex : "SputnikFaviconBot" , name : "Sputnik Favicon Bot" , version : None , category : Some ("Crawler") , url : Some ("") , producer : None , } , Element { regex : "SputnikImageBot" , name : "Sputnik Image Bot" , version : None , category : Some ("Crawler") , url : Some ("") , producer : None , } , Element { regex : "SurveyBot" , name : "Survey Bot" , version : None , category : Some ("Search bot") , url : Some ("http://www.domaintools.com/webmasters/surveybot.php") , producer : Some (Producer { name : "Domain Tools" , url : "http://www.domaintools.com" , }) , } , Element { regex : "TarmotGezgin" , name : "Tarmot Gezgin" , version : None , category : Some ("Search bot") , url : Some ("http://www.tarmot.com/gezgin/") , producer : None , } , Element { regex : "TelegramBot" , name : "TelegramBot" , version : None , category : None , url : Some ("https://telegram.org/blog/bot-revolution") , producer : None , } , Element { regex : "TLSProbe" , name : "TLSProbe" , version : None , category : Some ("Security search bot") , url : Some ("https://scan.trustnet.venafi.com/") , producer : Some (Producer { name : "Venafi TrustNet" , url : "https://www.venafi.com" , }) , } , Element { regex : "TinEye-bot" , name : "TinEye Crawler" , version : None , category : Some ("Search bot") , url : Some ("http://www.tineye.com/crawler.html") , producer : Some (Producer { name : "Idée Inc." , url : "http://ideeinc.com" , }) , } , Element { regex : "Tiny Tiny RSS" , name : "Tiny Tiny RSS" , version : None , category : Some ("Feed Fetcher") , url : Some ("http://tt-rss.org") , producer : Some (Producer { name : "" , url : "" , }) , } , Element { regex : "theoldreader.com" , name : "theoldreader" , version : None , category : Some ("Feed Reader") , url : Some ("https://theoldreader.com") , producer : None , } , Element { regex : "trendictionbot" , name : "Trendiction Bot" , version : None , category : Some ("Crawler") , url : Some ("http://www.trendiction.de/bot") , producer : Some (Producer { name : "Talkwalker Inc." , url : "http://www.talkwalker.com" , }) , } , Element { regex : "TurnitinBot" , name : "TurnitinBot" , version : None , category : Some ("Crawler") , url : Some ("http://www.turnitin.com/robot/crawlerinfo.html") , producer : Some (Producer { name : "iParadigms, LLC." , url : "http://www.turnitin.com" , }) , } , Element { regex : "TweetedTimes Bot" , name : "TweetedTimes Bot" , version : None , category : Some ("Crawler") , url : Some ("http://tweetedtimes.com") , producer : Some (Producer { name : "TweetedTimes" , url : "http://tweetedtimes.com/" , }) , } , Element { regex : "TweetmemeBot" , name : "Tweetmeme Bot" , version : None , category : Some ("Crawler") , url : Some ("http://tweetmeme.com/") , producer : Some (Producer { name : "Mediasift" , url : "" , }) , } , Element { regex : "Twingly Recon" , name : "Twingly Recon" , version : None , category : Some ("Crawler") , url : None , producer : Some (Producer { name : "Twingly" , url : "https://www.twingly.com" , }) , } , Element { regex : "Twitterbot" , name : "Twitterbot" , version : None , category : Some ("Social Media Agent") , url : Some ("https://dev.twitter.com/docs/cards/getting-started") , producer : Some (Producer { name : "Twitter" , url : "http://www.twitter.com" , }) , } , Element { regex : "UniversalFeedParser" , name : "UniversalFeedParser" , version : None , category : Some ("Feed Fetcher") , url : Some ("https://github.com/kurtmckee/feedparser") , producer : Some (Producer { name : "Kurt McKee" , url : "https://github.com/kurtmckee" , }) , } , Element { regex : "via secureurl\\.fwdcdn\\.com" , name : "UkrNet Mail Proxy" , version : None , category : Some ("Crawler") , url : Some ("") , producer : Some (Producer { name : "UkrNet Ltd" , url : "https://www.ukr.net/" , }) , } , Element { regex : "Uptimebot" , name : "Uptimebot" , version : None , category : Some ("Site Monitor") , url : Some ("https://uptime.com/uptimebot") , producer : Some (Producer { name : "Uptime" , url : "https://uptime.com" , }) , } , Element { regex : "UptimeRobot" , name : "Uptime Robot" , version : None , category : Some ("Site Monitor") , url : Some ("") , producer : Some (Producer { name : "Uptime Robot" , url : "http://uptimerobot.com" , }) , } , Element { regex : "URLAppendBot" , name : "URLAppendBot" , version : None , category : Some ("Crawler") , url : Some ("http://www.profound.net/urlappendbot.html") , producer : Some (Producer { name : "Profound Networks" , url : "http://www.profound.net" , }) , } , Element { regex : "Vagabondo" , name : "Vagabondo" , version : None , category : Some ("Crawler") , url : Some ("") , producer : Some (Producer { name : "WiseGuys" , url : "http://www.wise-guys.nl/" , }) , } , Element { regex : "vkShare; " , name : "VK Share Button" , version : None , category : Some ("Crawler") , url : Some ("http://vk.com/dev/Share") , producer : Some (Producer { name : "VK" , url : "http://vk.com/" , }) , } , Element { regex : "VSMCrawler" , name : "Visual Site Mapper Crawler" , version : None , category : Some ("Crawler") , url : Some ("http://www.visualsitemapper.com/crawler") , producer : Some (Producer { name : "Alentum Software Ltd." , url : "http://www.alentum.com" , }) , } , Element { regex : "Jigsaw" , name : "W3C CSS Validator" , version : None , category : Some ("Validator") , url : Some ("http://jigsaw.w3.org/css-validator") , producer : Some (Producer { name : "W3C" , url : "http://www.w3.org" , }) , } , Element { regex : "W3C_I18n-Checker" , name : "W3C I18N Checker" , version : None , category : Some ("Validator") , url : Some ("http://validator.w3.org/i18n-checker") , producer : Some (Producer { name : "W3C" , url : "http://www.w3.org" , }) , } , Element { regex : "W3C-checklink" , name : "W3C Link Checker" , version : None , category : Some ("Validator") , url : Some ("http://validator.w3.org/checklink") , producer : Some (Producer { name : "W3C" , url : "http://www.w3.org" , }) , } , Element { regex : "W3C_Validator|Validator.nu" , name : "W3C Markup Validation Service" , version : None , category : Some ("Validator") , url : Some ("http://validator.w3.org/services") , producer : Some (Producer { name : "W3C" , url : "http://www.w3.org" , }) , } , Element { regex : "W3C-mobileOK" , name : "W3C MobileOK Checker" , version : None , category : Some ("Validator") , url : Some ("http://validator.w3.org/mobile") , producer : Some (Producer { name : "W3C" , url : "http://www.w3.org" , }) , } , Element { regex : "W3C_Unicorn" , name : "W3C Unified Validator" , version : None , category : Some ("Validator") , url : Some ("http://validator.w3.org/unicorn") , producer : Some (Producer { name : "W3C" , url : "http://www.w3.org" , }) , } , Element { regex : "Wappalyzer" , name : "Wappalyzer" , version : None , category : None , url : Some ("https://github.com/AliasIO/Wappalyzer") , producer : Some (Producer { name : "AliasIO" , url : "https://github.com/AliasIO" , }) , } , Element { regex : "PTST/" , name : "WebPageTest" , version : None , category : Some ("Site Monitor") , url : Some ("https://www.webpagetest.org") , producer : None , } , Element { regex : "WeSEE(:Search)?" , name : "WeSEE:Search" , version : None , category : Some ("Search bot") , url : Some ("http://www.wesee.com/bot") , producer : Some (Producer { name : "WeSEE Ltd" , url : "http://www.wesee.com" , }) , } , Element { regex : "WebbCrawler" , name : "WebbCrawler" , version : None , category : Some ("Crawler") , url : Some ("http://badcheese.com/crawler.html") , producer : Some (Producer { name : "Steve Webb" , url : "http://badcheese.com" , }) , } , Element { regex : "websitepulse[+ ]checker" , name : "WebSitePulse" , version : None , category : Some ("Site Monitor") , url : Some ("http://badcheese.com/crawler.html") , producer : Some (Producer { name : "WebSitePulse" , url : "http://www.websitepulse.com/" , }) , } , Element { regex : "WordPress" , name : "WordPress" , version : None , category : Some ("Service Agent") , url : Some ("https://wordpress.org/") , producer : Some (Producer { name : "Wordpress.org" , url : "https://wordpress.org/" , }) , } , Element { regex : "Wotbox" , name : "Wotbox" , version : None , category : Some ("Search bot") , url : Some ("http://www.wotbox.com/bot/") , producer : Some (Producer { name : "Wotbox" , url : "http://www.wotbox.com" , }) , } , Element { regex : "XenForo" , name : "XenForo" , version : None , category : Some ("Service Agent") , url : Some ("https://xenforo.com/") , producer : Some (Producer { name : "XenForo Ltd." , url : "https://xenforo.com/" , }) , } , Element { regex : "yacybot" , name : "YaCy" , version : None , category : Some ("Search bot") , url : Some ("http://yacy.net/bot.html") , producer : Some (Producer { name : "YaCy" , url : "http://yacy.net" , }) , } , Element { regex : "Yahoo! Slurp|Yahoo!-AdCrawler" , name : "Yahoo! Slurp" , version : None , category : Some ("Search bot") , url : Some ("http://help.yahoo.com/ysearch/slurp") , producer : Some (Producer { name : "Yahoo! Inc." , url : "http://www.yahoo.com" , }) , } , Element { regex : "Yahoo Link Preview|Yahoo:LinkExpander:Slingstone" , name : "Yahoo! Link Preview" , version : None , category : Some ("Crawler") , url : Some ("https://help.yahoo.com/kb/mail/yahoo-link-preview-SLN23615.html") , producer : Some (Producer { name : "Yahoo! Inc." , url : "http://www.yahoo.com" , }) , } , Element { regex : "YahooMailProxy" , name : "Yahoo! Mail Proxy" , version : None , category : Some ("Service Agent") , url : Some ("https://help.yahoo.com/kb/yahoo-mail-proxy-SLN28749.html") , producer : Some (Producer { name : "Yahoo! Inc." , url : "http://www.yahoo.com" , }) , } , Element { regex : "YahooCacheSystem" , name : "Yahoo! Cache System" , version : None , category : Some ("Crawler") , url : Some ("") , producer : Some (Producer { name : "Yahoo! Inc." , url : "http://www.yahoo.com" , }) , } , Element { regex : "Y!J-BRW" , name : "Yahoo! Japan BRW" , version : None , category : Some ("Crawler") , url : Some ("https://www.yahoo-help.jp/app/answers/detail/p/595/a_id/42716/~/ウェブページにアクセスするシステムのユーザーエージェントについて") , producer : Some (Producer { name : "Yahoo! Japan Corp." , url : "https://www.yahoo.co.jp/" , }) , } , Element { regex : "Yandex(SpravBot|ScreenshotBot|MobileBot|AccessibilityBot|ForDomain|Vertis|Market|Catalog|Calendar|Sitelinks|AdNet|Pagechecker|Webmaster|Media|Video|Bot|Images|Antivirus|Direct|Blogs|Favicons|ImageResizer|Verticals|News(links)?|Metrika|\\.Gazeta Bot)|YaDirectFetcher|YandexTurbo|YandexTracker|YandexSearchShop|YandexRCA|YandexPartner|YandexOntoDBAPI|YandexOntoDB|YandexMobileScreenShotBot" , name : "Yandex Bot" , version : None , category : Some ("Search bot") , url : Some ("http://www.yandex.com/bots") , producer : Some (Producer { name : "Yandex LLC" , url : "http://company.yandex.com" , }) , } , Element { regex : "Yeti|NaverJapan" , name : "Yeti/Naverbot" , version : None , category : Some ("Search bot") , url : Some ("http://help.naver.com/robots/") , producer : Some (Producer { name : "Naver" , url : "http://www.naver.com" , }) , } , Element { regex : "YoudaoBot" , name : "Youdao Bot" , version : None , category : Some ("Search bot") , url : Some ("http://www.youdao.com/help/webmaster/spider") , producer : Some (Producer { name : "NetEase, Inc." , url : "http://corp.163.com" , }) , } , Element { regex : "YOURLS v[0-9]" , name : "Yourls" , version : None , category : Some ("Crawler") , url : Some ("http://yourls.org") , producer : None , } , Element { regex : "YRSpider|YYSpider" , name : "Yunyun Bot" , version : None , category : Some ("Search bot") , url : Some ("http://www.yunyun.com/SiteInfo.php?r=about") , producer : Some (Producer { name : "YunYun" , url : "http://www.yunyun.com" , }) , } , Element { regex : "zgrab" , name : "zgrab" , version : None , category : Some ("Security Checker") , url : Some ("https://github.com/zmap/zgrab") , producer : None , } , Element { regex : "Zookabot" , name : "Zookabot" , version : None , category : Some ("Crawler") , url : Some ("http://zookabot.com") , producer : Some (Producer { name : "Hwacha ApS" , url : "http://hwacha.dk" , }) , } , Element { regex : "ZumBot" , name : "ZumBot" , version : None , category : Some ("Search bot") , url : Some ("http://help.zum.com/inquiry") , producer : Some (Producer { name : "ZUM internet" , url : "http://www.zuminternet.com/" , }) , } , Element { regex : "YottaaMonitor" , name : "Yottaa Site Monitor" , version : None , category : Some ("Site Monitor") , url : Some ("http://www.yottaa.com/products/site-monitor") , producer : Some (Producer { name : "Yottaa" , url : "http://www.yottaa.com/" , }) , } , Element { regex : "Yahoo Ad monitoring.*yahoo-ad-monitoring-SLN24857.*" , name : "Yahoo Gemini" , version : None , category : Some ("Crawler") , url : Some ("https://help.yahoo.com/kb/yahoo-ad-monitoring-SLN24857.html") , producer : Some (Producer { name : "Yahoo! Inc." , url : "http://www.yahoo.com" , }) , } , Element { regex : ".*Java.*outbrain" , name : "Outbrain" , version : None , category : Some ("Crawler") , url : Some ("") , producer : Some (Producer { name : "Outbrain" , url : "http://www.outbrain.com/" , }) , } , Element { regex : "HubPages.*crawlingpolicy" , name : "HubPages" , version : None , category : Some ("Crawler") , url : Some ("http://hubpages.com/help/crawlingpolicy") , producer : Some (Producer { name : "HubPages" , url : "http://hubpages.com/" , }) , } , Element { regex : "Pinterest(bot)?/\\d\\.\\d.*www\\.pinterest\\.com.*" , name : "Pinterest" , version : None , category : Some ("Crawler") , url : Some ("http://www.pinterest.com/bot.html") , producer : Some (Producer { name : "Pinterest" , url : "http://www.pinterest.com/" , }) , } , Element { regex : "Site24x7" , name : "Site24x7 Website Monitoring" , version : None , category : Some ("Site Monitor") , url : Some ("https://www.site24x7.com/site24x7-faq.html") , producer : Some (Producer { name : "Site24x7" , url : "https://www.site24x7.com" , }) , } , Element { regex : "s~snapchat-proxy" , name : "Snapchat Proxy" , version : None , category : Some ("Crawler") , url : Some ("https://www.snapchat.com") , producer : Some (Producer { name : "Snapchat Inc." , url : "https://www.snapchat.com" , }) , } , Element { regex : "Let's Encrypt validation server" , name : "Let's Encrypt Validation" , version : None , category : Some ("Service Agent") , url : Some ("https://letsencrypt.org/how-it-works/") , producer : Some (Producer { name : "Let's Encrypt" , url : "https://letsencrypt.org" , }) , } , Element { regex : "GrapeshotCrawler" , name : "Grapeshot" , version : None , category : Some ("Crawler") , url : Some ("https://www.grapeshot.com/crawler") , producer : Some (Producer { name : "Grapeshot" , url : "https://www.grapeshot.com" , }) , } , Element { regex : "www\\.monitor\\.us" , name : "Monitor.Us" , version : None , category : Some ("Site Monitor") , url : Some ("http://www.monitor.us") , producer : Some (Producer { name : "Monitor.Us" , url : "http://www.monitor.us" , }) , } , Element { regex : "Catchpoint( bot)?" , name : "Catchpoint" , version : None , category : Some ("Site Monitor") , url : Some ("") , producer : Some (Producer { name : "Catchpoint Systems" , url : "http://www.catchpoint.com/" , }) , } , Element { regex : "bitlybot" , name : "BitlyBot" , version : None , category : Some ("Crawler") , url : Some ("https://bitly.com") , producer : Some (Producer { name : "Bitly, Inc." , url : "https://bitly.com" , }) , } , Element { regex : "Zao/" , name : "Zao" , version : None , category : Some ("Crawler") , url : None , producer : None , } , Element { regex : "lycos" , name : "Lycos" , version : None , category : None , url : None , producer : None , } , Element { regex : "Slurp" , name : "Inktomi Slurp" , version : None , category : None , url : None , producer : None , } , Element { regex : "Speedy Spider" , name : "Speedy" , version : None , category : None , url : None , producer : None , } , Element { regex : "ScoutJet" , name : "ScoutJet" , version : None , category : None , url : None , producer : None , } , Element { regex : "nrsbot|netresearch" , name : "NetResearchServer" , version : None , category : None , url : None , producer : None , } , Element { regex : "scooter" , name : "Scooter" , version : None , category : None , url : None , producer : None , } , Element { regex : "gigabot" , name : "Gigabot" , version : None , category : None , url : None , producer : None , } , Element { regex : "charlotte" , name : "Charlotte" , version : None , category : None , url : None , producer : None , } , Element { regex : "Pompos" , name : "Pompos" , version : None , category : None , url : None , producer : None , } , Element { regex : "ichiro" , name : "ichiro" , version : None , category : None , url : None , producer : None , } , Element { regex : "PagePeeker" , name : "PagePeeker" , version : None , category : None , url : None , producer : None , } , Element { regex : "WebThumbnail" , name : "WebThumbnail" , version : None , category : None , url : None , producer : None , } , Element { regex : "Willow Internet Crawler" , name : "Willow Internet Crawler" , version : None , category : None , url : None , producer : None , } , Element { regex : "EmailWolf" , name : "EmailWolf" , version : None , category : None , url : None , producer : None , } , Element { regex : "NetLyzer FastProbe" , name : "NetLyzer FastProbe" , version : None , category : None , url : None , producer : None , } , Element { regex : "AdMantX.*admantx\\.com" , name : "ADMantX" , version : None , category : None , url : None , producer : None , } , Element { regex : "Server Density Service Monitoring.*" , name : "Server Density" , version : None , category : None , url : None , producer : None , } , Element { regex : "RSSRadio \\(Push Notification Scanner;support@dorada\\.co\\.uk\\)" , name : "RSSRadio Bot" , version : None , category : None , url : None , producer : None , } , Element { regex : "(A6-Indexer|nuhk|TsolCrawler|Yammybot|Openbot|Gulper Web Bot|grub-client|Download Demon|SearchExpress|Microsoft URL Control|borg|altavista|dataminr.com|tweetedtimes.com|TrendsmapResolver|teoma|blitzbot|oegp|furlbot|http%20client|polybot|htdig|mogimogi|larbin|scrubby|searchsight|seekbot|semanticdiscovery|snappy|vortex(?! Build)|zeal|fast-webcrawler|converacrawler|dataparksearch|findlinks|BrowserMob|HttpMonitor|ThumbShotsBot|URL2PNG|ZooShot|GomezA|Google SketchUp|Read%20Later|RackspaceBot|robots|SeopultContentAnalyzer|7Siters|centuryb.o.t9|InterNaetBoten|EasyBib AutoCite|Bidtellect|tomnomnom/meg)" , name : "Generic Bot" , version : None , category : None , url : None , producer : None , } , Element { regex : "^sentry" , name : "Sentry Bot" , version : None , category : None , url : None , producer : Some (Producer { name : "Sentry" , url : "https://sentry.io" , }) , } , Element { regex : "^Spotify" , name : "Spotify" , version : None , category : None , url : None , producer : Some (Producer { name : "Spotify" , url : "https://www.spotify.com" , }) , } , Element { regex : "The Knowledge AI" , name : "The Knowledge AI" , version : None , category : Some ("Crawler") , url : None , producer : None , } , Element { regex : "Embedly" , name : "Embedly" , version : None , category : Some ("Crawler") , url : Some ("https://support.embed.ly/hc/en-us") , producer : Some (Producer { name : "A Medium, Corp." , url : "https://medium.com/" , }) , } , Element { regex : "BrandVerity" , name : "BrandVerity" , version : None , category : Some ("Crawler") , url : Some ("https://www.brandverity.com/why-is-brandverity-visiting-me") , producer : Some (Producer { name : "BrandVerity, Inc." , url : "https://www.brandverity.com/" , }) , } , Element { regex : "Kaspersky Lab CFR link resolver" , name : "Kaspersky" , version : None , category : Some ("Security Checker") , url : Some ("https://www.kaspersky.com/") , producer : Some (Producer { name : "AO Kaspersky Lab" , url : "https://www.kaspersky.com/" , }) , } , Element { regex : "eZ Publish Link Validator" , name : "eZ Publish Link Validator" , version : None , category : Some ("Crawler") , url : Some ("https://ez.no/") , producer : Some (Producer { name : "eZ Systems AS" , url : "https://ez.no/" , }) , } , Element { regex : "woorankreview" , name : "WooRank" , version : None , category : Some ("Search bot") , url : Some ("https://www.woorank.com/") , producer : Some (Producer { name : "WooRank sprl" , url : "https://www.woorank.com/" , }) , } , Element { regex : "(Match|LinkCheck) by Siteimprove.com" , name : "Siteimprove" , version : None , category : Some ("Search bot") , url : Some ("https://siteimprove.com/") , producer : Some (Producer { name : "Siteimprove GmbH" , url : "https://siteimprove.com/" , }) , } , Element { regex : "CATExplorador" , name : "CATExplorador" , version : None , category : Some ("Search bot") , url : Some ("https://fundacio.cat/ca/domini/") , producer : Some (Producer { name : "Fundació puntCAT" , url : "https://fundacio.cat/ca/domini/" , }) , } , Element { regex : "Buck" , name : "Buck" , version : None , category : Some ("Search bot") , url : Some ("https://hypefactors.com/") , producer : Some (Producer { name : "Hypefactors A/S" , url : "https://hypefactors.com/" , }) , } , Element { regex : "tracemyfile" , name : "TraceMyFile" , version : None , category : Some ("Search bot") , url : Some ("https://www.tracemyfile.com/") , producer : Some (Producer { name : "Idee Inc." , url : "http://ideeinc.com/" , }) , } , Element { regex : "zelist.ro feed parser" , name : "Ze List" , version : None , category : Some ("Feed Fetcher") , url : Some ("https://www.zelist.ro/") , producer : Some (Producer { name : "Treeworks SRL" , url : "https://www.tree.ro/" , }) , } , Element { regex : "weborama-fetcher" , name : "Weborama" , version : None , category : Some ("Search bot") , url : Some ("https://weborama.com/") , producer : Some (Producer { name : "Weborama SA" , url : "https://weborama.com/" , }) , } , Element { regex : "BoardReader Favicon Fetcher" , name : "BoardReader" , version : None , category : Some ("Search bot") , url : Some ("https://boardreader.com/") , producer : Some (Producer { name : "Effyis Inc" , url : "https://boardreader.com/" , }) , } , Element { regex : "IDG/IT" , name : "IDG/IT" , version : None , category : Some ("Search bot") , url : Some ("https://spaziodati.eu/") , producer : Some (Producer { name : "SpazioDati S.r.l." , url : "https://spaziodati.eu/" , }) , } , Element { regex : "Bytespider" , name : "Bytespider" , version : None , category : Some ("Search bot") , url : Some ("https://bytedance.com/") , producer : Some (Producer { name : "ByteDance Ltd." , url : "https://bytedance.com/" , }) , } , Element { regex : "WikiDo" , name : "WikiDo" , version : None , category : Some ("Search bot") , url : Some ("https://www.wikido.com/") , producer : Some (Producer { name : "Fotolitografie Fiorentine di Becchi Antonio s.n.c." , url : "https://www.wikido.com/" , }) , } , Element { regex : "AwarioSmartBot" , name : "Awario" , version : None , category : Some ("Search bot") , url : Some ("https://awario.com/bots.html") , producer : Some (Producer { name : "Awario" , url : "https://awario.com/" , }) , } , Element { regex : "AwarioRssBot" , name : "Awario" , version : None , category : Some ("Feed Fetcher") , url : Some ("https://awario.com/bots.html") , producer : Some (Producer { name : "Awario" , url : "https://awario.com/" , }) , } , Element { regex : "oBot" , name : "oBot" , version : None , category : Some ("Search bot") , url : Some ("https://www.xforce-security.com/crawler/") , producer : Some (Producer { name : "IBM Germany Research & Development GmbH" , url : "https://exchange.xforce.ibmcloud.com/" , }) , } , Element { regex : "SMTBot" , name : "SMTBot" , version : None , category : Some ("Search bot") , url : Some ("https://www.similartech.com/smtbot") , producer : Some (Producer { name : "SimilarTech Ltd." , url : "https://www.similartech.com/" , }) , } , Element { regex : "LCC" , name : "LCC" , version : None , category : Some ("Search bot") , url : Some ("https://corpora.uni-leipzig.de/crawler_faq.html") , producer : Some (Producer { name : "Universität Leipzig" , url : "https://www.uni-leipzig.de/" , }) , } , Element { regex : "Startpagina-Linkchecker" , name : "Startpagina Linkchecker" , version : None , category : Some ("Search bot") , url : Some ("https://www.startpagina.nl/linkchecker") , producer : Some (Producer { name : "Startpagina B.V." , url : "https://www.startpagina.nl/" , }) , } , Element { regex : "GTmetrix" , name : "GTmetrix" , version : None , category : Some ("Crawler") , url : Some ("https://gtmetrix.com/") , producer : Some (Producer { name : "Carbon60 Operating Co. Ltd." , url : "https://www.carbon60.com/" , }) , } , Element { regex : "Nutch" , name : "Nutch-based Bot" , version : None , category : Some ("Crawler") , url : Some ("https://nutch.apache.org") , producer : Some (Producer { name : "The Apache Software Foundation" , url : "https://www.apache.org/foundation/" , }) , } , Element { regex : "Seobility" , name : "Seobility" , version : None , category : Some ("Crawler") , url : Some ("https://www.seobility.net/en/faq/?category=crawling#!aboutourbot") , producer : None , } , Element { regex : "Vercelbot" , name : "Vercel Bot" , version : None , category : Some ("Service bot") , url : Some ("https://vercel.com") , producer : None , } , Element { regex : "Grammarly" , name : "Grammarly" , version : None , category : Some ("Service bot") , url : Some ("https://www.grammarly.com") , producer : None , } , Element { regex : "Robozilla" , name : "Robozilla" , version : None , category : Some ("Crawler") , url : None , producer : None , } , Element { regex : "Domains Project" , name : "Domains Project" , version : None , category : Some ("Crawler") , url : Some ("https://domainsproject.org") , producer : None , } , Element { regex : "PetalBot" , name : "Petal Bot" , version : None , category : Some ("Crawler") , url : Some ("https://aspiegel.com/petalbot") , producer : None , } , Element { regex : "SerendeputyBot" , name : "Serendeputy Bot" , version : None , category : Some ("Crawler") , url : Some ("https://serendeputy.com/about/serendeputy-bot") , producer : None , } , Element { regex : "ias-va.*admantx.*service-fetcher" , name : "ADmantX Service Fetcher" , version : None , category : Some ("Service bot") , url : Some ("https://www.admantx.com/service-fetcher.html") , producer : None , } , Element { regex : "SemanticScholarBot" , name : "Semantic Scholar Bot" , version : None , category : Some ("Crawler") , url : Some ("https://www.semanticscholar.org/crawler") , producer : None , } , Element { regex : "VelenPublicWebCrawler" , name : "Velen Public Web Crawler" , version : None , category : Some ("Crawler") , url : Some ("https://hunter.io/robot") , producer : None , } , Element { regex : "Barkrowler" , name : "Barkrowler" , version : None , category : Some ("Crawler") , url : Some ("http://www.exensa.com/crawl") , producer : None , } , Element { regex : "BDCbot" , name : "BDCbot" , version : None , category : Some ("Crawler") , url : Some ("https://bigweb.bigdatacorp.com.br/pages/faq.aspx") , producer : Some (Producer { name : "BIG Data Solucoes Em Tecnologia de Informatica LTDA" , url : "https://bigdatacorp.com.br/" , }) , } , Element { regex : "adbeat" , name : "Adbeat" , version : None , category : Some ("Crawler") , url : Some ("https://www.adbeat.com/operation_policy") , producer : Some (Producer { name : "PPC Labs LLC" , url : "https://www.adbeat.com/" , }) , } , Element { regex : "BW/(?:(\\d+[\\.\\d]+))" , name : "BuiltWith" , version : None , category : Some ("Crawler") , url : Some ("https://builtwith.com/biup") , producer : Some (Producer { name : "BuiltWith Pty Ltd" , url : "https://builtwith.com/" , }) , } , Element { regex : "https://whatis.contentkingapp.com" , name : "ContentKing" , version : None , category : Some ("Site Monitor") , url : Some ("https://whatis.contentkingapp.com/") , producer : Some (Producer { name : "ContentKing BV" , url : "https://www.contentkingapp.com/" , }) , } , Element { regex : "MicroAdBot" , name : "MicroAdBot" , version : None , category : Some ("Crawler") , url : Some ("https://www.microad.co.jp/") , producer : Some (Producer { name : "MicroAd, Inc." , url : "https://www.microad.co.jp/" , }) , } , Element { regex : "PingAdmin.Ru" , name : "PingAdmin.Ru" , version : None , category : Some ("Site Monitor") , url : Some ("https://ping-admin.ru/") , producer : None , } , Element { regex : "notifyninja.+monitoring" , name : "Notify Ninja" , version : None , category : Some ("Site Monitor") , url : Some ("http://notifyninja.com") , producer : None , } , Element { regex : "WebDataStats" , name : "WebDataStats" , version : None , category : Some ("Crawler") , url : Some ("https://webdatastats.com/policy.html") , producer : Some (Producer { name : "WebTehRazrabotka LLC" , url : "https://webdatastats.com/" , }) , } , Element { regex : "parse.ly scraper" , name : "parse.ly" , version : None , category : Some ("Crawler") , url : Some ("https://www.parse.ly/help/integration/crawler") , producer : Some (Producer { name : "Parsely, Inc." , url : "https://www.parse.ly/" , }) , } , Element { regex : "Nimbostratus-Bot" , name : "Nimbostratus Bot" , version : None , category : Some ("Site Monitor") , url : Some ("http://cloudsystemnetworks.com") , producer : None , } , Element { regex : "HeartRails_Capture/\\d" , name : "Heart Rails Capture" , version : None , category : Some ("Service Agent") , url : Some ("http://capture.heartrails.com") , producer : None , } , Element { regex : "Project-Resonance" , name : "Project Resonance" , version : None , category : Some ("Crawler") , url : Some ("http://project-resonance.com") , producer : None , } , Element { regex : "DataXu/\\d" , name : "DataXu" , version : None , category : Some ("Service Agent") , url : Some ("https://advertising.roku.com/dataxu") , producer : Some (Producer { name : "Roku, Inc." , url : "https://roku.com" , }) , } , Element { regex : "Cocolyzebot" , name : "Cocolyzebot" , version : None , category : Some ("Crawler") , url : Some ("https://cocolyze.com/en/cocolyzebot") , producer : Some (Producer { name : "VSI INNOVATION SAS" , url : "https://vsi-innovation.com/" , }) , } , Element { regex : "veryhip" , name : "VeryHip" , version : None , category : Some ("Crawler") , url : Some ("https://veryhip.com/") , producer : Some (Producer { name : "VeryHip" , url : "https://veryhip.com/" , }) , } , Element { regex : "LinkpadBot" , name : "LinkpadBot" , version : None , category : Some ("Crawler") , url : Some ("https://www.linkpad.org/") , producer : Some (Producer { name : "Solomono LLC" , url : "https://www.linkpad.org/" , }) , } , Element { regex : "MuscatFerret" , name : "MuscatFerret" , version : None , category : Some ("Crawler") , url : Some ("http://www.webtop.com/") , producer : None , } , Element { regex : "PageThing.com" , name : "PageThing" , version : None , category : Some ("Crawler") , url : Some ("https://www.pagething.com/") , producer : Some (Producer { name : "SPECIALNOISE LTD" , url : "https://www.specialnoise.com/" , }) , } , Element { regex : "ArchiveBox" , name : "ArchiveBox" , version : None , category : Some ("Crawler") , url : Some ("https://archivebox.io/") , producer : Some (Producer { name : "" , url : "" , }) , } , Element { regex : "Choosito" , name : "Choosito" , version : None , category : Some ("Crawler") , url : Some ("https://www.choosito.com/") , producer : Some (Producer { name : "Choosito! Inc." , url : "https://www.choosito.com/" , }) , } , Element { regex : "datagnionbot" , name : "datagnionbot" , version : None , category : Some ("Crawler") , url : Some ("https://www.datagnion.com/bot.html") , producer : Some (Producer { name : "DATAGNION GMBH" , url : "https://www.datagnion.com/" , }) , } , Element { regex : "WhatCMS" , name : "WhatCMS" , version : None , category : Some ("Crawler") , url : Some ("https://whatcms.org/") , producer : Some (Producer { name : "" , url : "" , }) , } , Element { regex : "httpx" , name : "httpx" , version : None , category : Some ("Crawler") , url : Some ("https://github.com/projectdiscovery/httpx") , producer : Some (Producer { name : "" , url : "" , }) , } , Element { regex : "scaninfo@expanseinc.com" , name : "Expanse" , version : None , category : Some ("Security Checker") , url : Some ("https://expanse.co/") , producer : Some (Producer { name : "Expanse Inc." , url : "https://expanse.co/" , }) , } , Element { regex : "HuaweiWebCatBot" , name : "HuaweiWebCatBot" , version : None , category : Some ("Crawler") , url : Some ("https://isecurity.huawei.com") , producer : Some (Producer { name : "Huawei Technologies Co., Ltd." , url : "https://huawei.com" , }) , } , Element { regex : "Hatena-Favicon" , name : "Hatena Favicon" , version : None , category : Some ("Crawler") , url : Some ("https://www.hatena.ne.jp/faq/") , producer : Some (Producer { name : "Hatena Co., Ltd." , url : "https://www.hatena.ne.jp" , }) , } , Element { regex : "RyowlEngine/(\\d+)" , name : "Ryowl" , version : None , category : Some ("Crawler") , url : Some ("https://ryowl.org") , producer : None , } , Element { regex : "OdklBot/(\\d+)" , name : "Odnoklassniki Bot" , version : None , category : Some ("Crawler") , url : Some ("https://odnoklassniki.ru") , producer : None , } , Element { regex : "Mediatoolkitbot" , name : "Mediatoolkit Bot" , version : None , category : Some ("Crawler") , url : Some ("https://mediatoolkit.com") , producer : None , } , Element { regex : "ZoominfoBot" , name : "ZoominfoBot" , version : None , category : Some ("Crawler") , url : Some ("https://www.zoominfo.com") , producer : None , } , Element { regex : "WeViKaBot/([\\d+\\.])" , name : "WeViKaBot" , version : None , category : Some ("Crawler") , url : Some ("http://www.wevika.de") , producer : None , } , Element { regex : "SEOkicks" , name : "SEOkicks" , version : None , category : Some ("Crawler") , url : Some ("https://www.seokicks.de/robot.html") , producer : None , } , Element { regex : "Plukkie/([\\d+\\.])" , name : "Plukkie" , version : None , category : Some ("Crawler") , url : Some ("http://www.botje.com/plukkie.htm") , producer : None , } , Element { regex : "proximic;" , name : "Comscore" , version : None , category : Some ("Crawler") , url : Some ("https://www.comscore.com/Web-Crawler") , producer : None , } , Element { regex : "SurdotlyBot/([\\d+\\.])" , name : "SurdotlyBot" , version : None , category : Some ("Crawler") , url : Some ("http://sur.ly/bot.html") , producer : None , } , Element { regex : "Gowikibot/([\\d+\\.])" , name : "Gowikibot" , version : None , category : Some ("Crawler") , url : Some ("http:/www.gowikibot.com") , producer : None , } , Element { regex : "SabsimBot/([\\d+\\.])" , name : "SabsimBot" , version : None , category : Some ("Crawler") , url : Some ("https://sabsim.com") , producer : None , } , Element { regex : "LumtelBot/([\\d+\\.])" , name : "LumtelBot" , version : None , category : Some ("Crawler") , url : Some ("https://umtel.com") , producer : None , } , Element { regex : "PiplBot" , name : "PiplBot" , version : None , category : Some ("Crawler") , url : Some ("http://www.pipl.com/bot") , producer : None , } , Element { regex : "woobot/([\\d+\\.])" , name : "WooRank" , version : None , category : Some ("Crawler") , url : Some ("https://www.woorank.com/bot") , producer : None , } , Element { regex : "Cookiebot/([\\d+\\.])" , name : "Cookiebot" , version : None , category : Some ("Crawler") , url : Some ("https://support.cookiebot.com/hc/en-us/articles/360014264140-Scanner-User-Agent") , producer : Some (Producer { name : "Cybot A/S" , url : "https://www.cybot.com/" , }) , } , Element { regex : "[a-z0-9\\-_]*((?<!cu|power[ _]|m[ _])bot(?![ _]TAB|[ _]?5[0-9])|crawler|crawl|checker|archiver|transcoder|spider)([^a-z]|$)" , name : "Generic Bot" , version : None , category : None , url : None , producer : None , } ,] ;
pub static OSS : [Element ; 255usize] = [Element { regex : "Grid OS (\\d+[\\.\\d]+)" , name : "GridOS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "CaixaMagica" , name : "Caixa Mágica" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Mageia; Linux" , name : "Mageia" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "(?:WH|WhaleTV/)(\\d+[\\.\\d]+)" , name : "Whale OS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Tizen[ /]?(\\d+[\\.\\d]+)?" , name : "Tizen" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Sailfish|Jolla" , name : "Sailfish OS" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "(?:Ali)?YunOS[ /]?(\\d+[\\.\\d]+)?" , name : "YunOS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Windows Phone;FBSV/(\\d+[\\.\\d]+)" , name : "Windows Phone" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Windows Phone (?:OS)?|wds)[ /]?(\\d+[\\.\\d]+)" , name : "Windows Phone" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "XBLWP7|Windows Phone" , name : "Windows Phone" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Windows CE(?: (\\d+[\\.\\d]+))?" , name : "Windows CE" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:IEMobile|Windows ?Mobile)(?: (\\d+[\\.\\d]+))?" , name : "Windows Mobile" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Windows NT 6.2; ARM;" , name : "Windows RT" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Windows NT 6.3; ARM;" , name : "Windows RT" , version : Some ("8.1") , category : None , url : None , producer : None , } , Element { regex : "Windows IoT 10.0" , name : "Windows IoT" , version : Some ("10") , category : None , url : None , producer : None , } , Element { regex : "KAIOS(?:/(\\d+[\\.\\d]+))?" , name : "KaiOS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "RazoDroiD(?: v(\\d+[\\.\\d]*))?" , name : "RazoDroiD" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "MildWild(?: CM-(\\d+[\\.\\d]*))?" , name : "MildWild" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "CyanogenMod(?:[\\-/](?:CM)?(\\d+[\\.\\d]*))?" , name : "CyanogenMod" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:.*_)?MocorDroid(?:(\\d+[\\.\\d]*))?" , name : "MocorDroid" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Fire OS(?:/(\\d+[\\.\\d]*))?" , name : "Fire OS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "AFTSO001" , name : "Fire OS" , version : Some ("7") , category : None , url : None , producer : None , } , Element { regex : "FydeOS" , name : "FydeOS" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "(?:Podbean|Podimo)(?:.+)?/Android" , name : "Android" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Pinterest for Android/.+; (\\d(?:[\\d\\.]+)?)\\)$" , name : "Android" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Android; (\\d+[\\.\\d]*); Mobile;" , name : "Android" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "[ ]([\\d\\.]+)\\) AppleWebKit.*ROBLOX Android App" , name : "Android" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:(?:Orca-)?Android|Adr)[ /]?(?:[a-z]+ )?(\\d+[\\.\\d]*)" , name : "Android" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Allview_TX1_Quasar|Cosmote_My_mini_Tab) (\\d+[\\.\\d]*)" , name : "Android" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Android ?(?:jelly bean|Kit Kat|S.O. Ginger Bread|The FireCyano|:) (\\d+[\\.\\d]*)" , name : "Android" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Orca-Android|FB4A).*FBSV/(\\d+[\\.\\d]*);" , name : "Android" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : " Adr |Android|Silk-Accelerated=[a-z]{4,5}" , name : "Android" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "(?:TwitterAndroid).*[ /](?:[a-z]+ )?(\\d+[\\.\\d]*)" , name : "Android" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "BeyondPod|AntennaPod|Podkicker|DoggCatcher|Player FM|okhttp|Podcatcher Deluxe|.+K_?Android_?TV_|Sonos/.+\\(ACR_" , name : "Android" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Linux; Andr0id[; ](\\d+[\\.\\d]*)" , name : "Android" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Linux; diordnA[; ](\\d+[\\.\\d]*)" , name : "Android" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "AmigaOS[ ]?(\\d+[\\.\\d]+)" , name : "AmigaOS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "AmigaOS|AmigaVoyager|Amiga-AWeb" , name : "AmigaOS" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "ThreadX(?:/(\\d+[\\.\\d]*))?" , name : "ThreadX" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Nucleus(?:(?: |/v?)(\\d+[\\.\\d]*))?" , name : "MTK / Nucleus" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "MTK(?:(?: |/v?)(\\d+[\\.\\d]*))?" , name : "MTK / Nucleus" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "MRE/(\\d+)\\.(\\d+).*;MAUI" , name : "MRE" , version : Some ("$1.$2") , category : None , url : None , producer : None , } , Element { regex : "dvkbuntu" , name : "DVKBuntu" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Helio/(\\d+[\\.\\d]+)" , name : "Lumin OS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "HasCodingOs (\\d+[\\.\\d]+)" , name : "HasCodingOS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "PCLinuxOS/(\\d+[\\.\\d]+)" , name : "PCLinuxOS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(Ordissimo|webissimo3)" , name : "Ordissimo" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "(?:Win|Sistema )Fenix" , name : "Fenix" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "TOS; Linux" , name : "TmaxOS" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Maemo" , name : "Maemo" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Arch ?Linux(?:[ /\\-](\\d+[\\.\\d]+))?" , name : "Arch Linux" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "VectorLinux(?: package)?(?:[ /\\-](\\d+[\\.\\d]+))?" , name : "VectorLinux" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Linux; .*((?:Debian|Knoppix|Mint|Ubuntu|Kubuntu|Xubuntu|Lubuntu|Fedora|Red Hat|Mandriva|Gentoo|Sabayon|Slackware|SUSE|CentOS|BackTrack))[ /](\\d+[\\.\\d]+)" , name : "$1" , version : Some ("$2") , category : None , url : None , producer : None , } , Element { regex : "Deepin[ /](\\d+[\\.\\d]+)" , name : "Deepin" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(Debian|Knoppix|Mint(?! Browser)|Ubuntu|Kubuntu|Xubuntu|Lubuntu|Fedora|Red Hat|Mandriva|Gentoo|Sabayon|Slackware|SUSE|CentOS|BackTrack|Freebox)(?:(?: Enterprise)? Linux)?(?:[ /\\-](\\d+[\\.\\d]+))?" , name : "$1" , version : Some ("$2") , category : None , url : None , producer : None , } , Element { regex : "OS ROSA; Linux" , name : "Rosa" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "WEBOS(\\d+[\\.\\d]+)" , name : "webOS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Web0S; Linux/SmartTV.+Chrome/68" , name : "webOS" , version : Some ("5") , category : None , url : None , producer : None , } , Element { regex : "Web0S; Linux/SmartTV.+Chrome/53" , name : "webOS" , version : Some ("4") , category : None , url : None , producer : None , } , Element { regex : "Web0S; Linux/SmartTV.+Chrome/38" , name : "webOS" , version : Some ("3") , category : None , url : None , producer : None , } , Element { regex : "Web0S; Linux/SmartTV.+Safari/538" , name : "webOS" , version : Some ("2") , category : None , url : None , producer : None , } , Element { regex : "Web0S; Linux/SmartTV.+Safari/537" , name : "webOS" , version : Some ("1") , category : None , url : None , producer : None , } , Element { regex : "(?:Web0S; .*WEBOS|webOS|web0S|Palm webOS|hpwOS)(?:[/]?(\\d+[\\.\\d]+))?" , name : "webOS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:PalmOS|Palm OS)(?:[/ ](\\d+[\\.\\d]+))?|Palm" , name : "palmOS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Xiino(?:.*v\\. (\\d+[\\.\\d]+))?" , name : "palmOS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "MorphOS(?:[ /](\\d+[\\.\\d]+))?" , name : "MorphOS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "FBW.+FBSV/(\\d+[\\.\\d]*);" , name : "Windows" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "mingw32" , name : "Windows" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Windows/(\\d+\\.\\d+)" , name : "Windows" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "CYGWIN_NT-10.0|Windows NT 10.0|Windows 10" , name : "Windows" , version : Some ("10") , category : None , url : None , producer : None , } , Element { regex : "CYGWIN_NT-6.4|Windows NT 6.4|Windows 10|win10" , name : "Windows" , version : Some ("10") , category : None , url : None , producer : None , } , Element { regex : "CYGWIN_NT-6.3|Windows NT 6.3|Windows 8.1" , name : "Windows" , version : Some ("8.1") , category : None , url : None , producer : None , } , Element { regex : "CYGWIN_NT-6.2|Windows NT 6.2|Windows 8" , name : "Windows" , version : Some ("8") , category : None , url : None , producer : None , } , Element { regex : "CYGWIN_NT-6.1|Windows NT 6.1|Windows 7|win7" , name : "Windows" , version : Some ("7") , category : None , url : None , producer : None , } , Element { regex : "CYGWIN_NT-6.0|Windows NT 6.0|Windows Vista" , name : "Windows" , version : Some ("Vista") , category : None , url : None , producer : None , } , Element { regex : "CYGWIN_NT-5.2|Windows NT 5.2|Windows Server 2003 / XP x64" , name : "Windows" , version : Some ("Server 2003") , category : None , url : None , producer : None , } , Element { regex : "CYGWIN_NT-5.1|Windows NT 5.1|Windows XP" , name : "Windows" , version : Some ("XP") , category : None , url : None , producer : None , } , Element { regex : "CYGWIN_NT-5.0|Windows NT 5.0|Windows 2000" , name : "Windows" , version : Some ("2000") , category : None , url : None , producer : None , } , Element { regex : "CYGWIN_NT-4.0|Windows NT 4.0|WinNT|Windows NT" , name : "Windows" , version : Some ("NT") , category : None , url : None , producer : None , } , Element { regex : "CYGWIN_ME-4.90|Win 9x 4.90|Windows ME" , name : "Windows" , version : Some ("ME") , category : None , url : None , producer : None , } , Element { regex : "CYGWIN_98-4.10|Win98|Windows 98" , name : "Windows" , version : Some ("98") , category : None , url : None , producer : None , } , Element { regex : "CYGWIN_95-4.0|Win32|Win95|Windows 95|Windows_95" , name : "Windows" , version : Some ("95") , category : None , url : None , producer : None , } , Element { regex : "Windows 3.1" , name : "Windows" , version : Some ("3.1") , category : None , url : None , producer : None , } , Element { regex : "Windows" , name : "Windows" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Haiku" , name : "Haiku OS" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "(?:Watch1,[12]/|Watch OS,|watchOS[ /])(\\d+[\\.\\d]*)" , name : "watchOS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "iPad/([89]|1[012]).(\\d+[\\.\\d]*)" , name : "iOS" , version : Some ("$1.$2") , category : None , url : None , producer : None , } , Element { regex : "Pinterest for iOS/.+; (\\d(?:[\\d\\.]+)?)\\)$" , name : "iOS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/20.4.0(?!.*x86_64)" , name : "iOS" , version : Some ("14.5") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/20.3.0(?!.*x86_64)" , name : "iOS" , version : Some ("14.4") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/20.2.0(?!.*x86_64)" , name : "iOS" , version : Some ("14.3") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/20.1.0(?!.*x86_64)" , name : "iOS" , version : Some ("14.2") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/20.0.0(?!.*x86_64)" , name : "iOS" , version : Some ("14.0") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/19.6.0(?!.*x86_64)" , name : "iOS" , version : Some ("13.6") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/19.5.0(?!.*x86_64)" , name : "iOS" , version : Some ("13.5") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/19.4.0(?!.*x86_64)" , name : "iOS" , version : Some ("13.4") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/19.3.0(?!.*x86_64)" , name : "iOS" , version : Some ("13.3.1") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/19.2.0(?!.*x86_64)" , name : "iOS" , version : Some ("13.3") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/19.0.0(?!.*x86_64)" , name : "iOS" , version : Some ("13.0") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/18.7.0(?!.*x86_64)" , name : "iOS" , version : Some ("12.4") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/18.6.0(?!.*x86_64)" , name : "iOS" , version : Some ("12.3") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/18.5.0(?!.*x86_64)" , name : "iOS" , version : Some ("12.2") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/18.2.0(?!.*x86_64)" , name : "iOS" , version : Some ("12.1") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/18.0.0(?!.*x86_64)" , name : "iOS" , version : Some ("12.0") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/17.7.0(?!.*x86_64)" , name : "iOS" , version : Some ("11.4.1") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/17.6.0(?!.*x86_64)" , name : "iOS" , version : Some ("11.4") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/889(?!.*x86_64)" , name : "iOS" , version : Some ("11.1") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/887(?!.*x86_64)" , name : "iOS" , version : Some ("11.0") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/811(?!.*x86_64)" , name : "iOS" , version : Some ("10.3") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/808\\.3" , name : "iOS" , version : Some ("10.3") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/808\\.2" , name : "iOS" , version : Some ("10.2") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/808\\.1" , name : "iOS" , version : Some ("10.1") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/808\\.0" , name : "iOS" , version : Some ("10.0") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/808" , name : "iOS" , version : Some ("10") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/758\\.4\\.3" , name : "iOS" , version : Some ("9.3.2") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/758\\.3\\.15" , name : "iOS" , version : Some ("9.3") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/758\\.2\\.[78]" , name : "iOS" , version : Some ("9.2") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/758\\.1\\.6" , name : "iOS" , version : Some ("9.1") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/758\\.0\\.2" , name : "iOS" , version : Some ("9.0") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/711\\.5\\.6" , name : "iOS" , version : Some ("8.4.1") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/711\\.4\\.6" , name : "iOS" , version : Some ("8.4") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/711\\.3\\.18" , name : "iOS" , version : Some ("8.3") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/711\\.2\\.23" , name : "iOS" , version : Some ("8.2") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/711\\.1\\.1[26]" , name : "iOS" , version : Some ("8.1") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/711\\.0\\.6" , name : "iOS" , version : Some ("8.0") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/672\\.1" , name : "iOS" , version : Some ("7.1") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/672\\.0" , name : "iOS" , version : Some ("7.0") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/609\\.1" , name : "iOS" , version : Some ("6.1") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/60[29]" , name : "iOS" , version : Some ("6.0") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/548\\.1" , name : "iOS" , version : Some ("5.1") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/548\\.0" , name : "iOS" , version : Some ("5.0") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/485\\.13" , name : "iOS" , version : Some ("4.3") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/485\\.12" , name : "iOS" , version : Some ("4.2") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/485\\.10" , name : "iOS" , version : Some ("4.1") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/485\\.2" , name : "iOS" , version : Some ("4.0") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/467\\.12" , name : "iOS" , version : Some ("3.2") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/459" , name : "iOS" , version : Some ("3.1") , category : None , url : None , producer : None , } , Element { regex : "iPhone/(\\d+[\\.\\d]*) hw/" , name : "iOS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "iOS(\\d+\\.\\d+\\.\\d+)" , name : "iOS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "iOS(\\d+)\\.(\\d+)0" , name : "iOS" , version : Some ("$1.$2") , category : None , url : None , producer : None , } , Element { regex : "iPhone OS ([0-9]{1})([0-9]{1})([0-9]{1})" , name : "iOS" , version : Some ("$1.$2.$3") , category : None , url : None , producer : None , } , Element { regex : "(?:CPU OS|iPh(?:one)?[ _]OS|iOS)[ _/](\\d+(?:[_\\.]\\d+)*)" , name : "iOS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:FBIOS|Messenger(?:Lite)?ForiOS).*FBSV/ ?(\\d+[\\.\\d]*);" , name : "iOS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Apple-)?(?:iPhone|iPad|iPod)(?:.*Mac OS X.*Version/(\\d+\\.\\d+)|; Opera)?" , name : "iOS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Podcasts/(?:[\\d\\.]+)|Instacast(?:HD)?/(?:\\d\\.[\\d\\.abc]+)|Pocket Casts, iOS|\\(iOS\\)|iOS; Opera|Overcast|Castro|Podcat|iCatcher|RSSRadio/|MobileSafari/)(?!.*x86_64)" , name : "iOS" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "iTunes-(iPod|iPad|iPhone)/(?:[\\d\\.]+)" , name : "iOS" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "iOS/Version ([\\d\\.]+)" , name : "iOS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Sonos/.+\\(ICRU_" , name : "iOS" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/20.2.0.*(x86_64)|(x86_64-apple-)?darwin20.2.0" , name : "Mac" , version : Some ("11.1") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/20.[01].0.*(x86_64)|(x86_64-apple-)?darwin20.[01].0" , name : "Mac" , version : Some ("11.0") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/19.6.0.*(x86_64)|(x86_64-apple-)?darwin19.6.0" , name : "Mac" , version : Some ("10.15.6") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/19.5.0.*(x86_64)|(x86_64-apple-)?darwin19.5.0" , name : "Mac" , version : Some ("10.15.5") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/19.4.0.*(x86_64)|(x86_64-apple-)?darwin19.4.0" , name : "Mac" , version : Some ("10.15.4") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/19.3.0.*(x86_64)|(x86_64-apple-)?darwin19.3.0" , name : "Mac" , version : Some ("10.15.3") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/19.2.0.*(x86_64)|(x86_64-apple-)?darwin19.2.0" , name : "Mac" , version : Some ("10.15.2") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/(?:108[258]|109[18]|1103).*(x86_64)" , name : "Mac" , version : Some ("10.15") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/18.2.0.*(x86_64)|(x86_64-apple-)?darwin18.2.0" , name : "Mac" , version : Some ("10.14.1") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/(?:96[29]|97[14568]).*(x86_64)" , name : "Mac" , version : Some ("10.14") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/17.7.0.*(x86_64)|(x86_64-apple-)?darwin17.7.0" , name : "Mac" , version : Some ("10.13.6") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/17.6.0.*(x86_64)|(x86_64-apple-)?darwin17.6.0" , name : "Mac" , version : Some ("10.13.5") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/17.5.0.*(x86_64)|(x86_64-apple-)?darwin17.5.0" , name : "Mac" , version : Some ("10.13.4") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/17.4.0.*(x86_64)|(x86_64-apple-)?darwin17.4.0" , name : "Mac" , version : Some ("10.13.3") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/17.3.0.*(x86_64)|(x86_64-apple-)?darwin17.3.0" , name : "Mac" , version : Some ("10.13.2") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/17.2.0.*(x86_64)|(x86_64-apple-)?darwin17.2.0" , name : "Mac" , version : Some ("10.13.1") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/(?:887|889|893|897|901|902).*(x86_64)" , name : "Mac" , version : Some ("10.13") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/16.7.0.*(x86_64)|(x86_64-apple-)?darwin16.7.0" , name : "Mac" , version : Some ("10.12.6") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/16.6.0.*(x86_64)|(x86_64-apple-)?darwin16.6.0" , name : "Mac" , version : Some ("10.12.5") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/16.5.0.*(x86_64)|(x86_64-apple-)?darwin16.5.0" , name : "Mac" , version : Some ("10.12.4") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/16.3.0.*(x86_64)|(x86_64-apple-)?darwin16.3.0" , name : "Mac" , version : Some ("10.12.3") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/16.2.0.*(x86_64)|(x86_64-apple-)?darwin16.2.0" , name : "Mac" , version : Some ("10.12.2") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/16.1.0.*(x86_64)|(x86_64-apple-)?darwin16.1.0" , name : "Mac" , version : Some ("10.12.1") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/811.*(x86_64)" , name : "Mac" , version : Some ("10.12") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/807" , name : "Mac" , version : Some ("10.12") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/15.6.0.*(x86_64)|(x86_64-apple-)?darwin15.6.0" , name : "Mac" , version : Some ("10.11.6") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/15.5.0.*(x86_64)|(x86_64-apple-)?darwin15.5.0" , name : "Mac" , version : Some ("10.11.5") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/15.4.0.*(x86_64)|(x86_64-apple-)?darwin15.4.0" , name : "Mac" , version : Some ("10.11.4") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/15.3.0.*(x86_64)|(x86_64-apple-)?darwin15.3.0" , name : "Mac" , version : Some ("10.11.3") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/15.2.0.*(x86_64)|(x86_64-apple-)?darwin15.2.0" , name : "Mac" , version : Some ("10.11.2") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/760" , name : "Mac" , version : Some ("10.11") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/14.5.0.*(x86_64)|(x86_64-apple-)?darwin14.5.0" , name : "Mac" , version : Some ("10.10.5") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/14.4.0.*(x86_64)|(x86_64-apple-)?darwin14.4.0" , name : "Mac" , version : Some ("10.10.4") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/14.3.0.*(x86_64)|(x86_64-apple-)?darwin14.3.0" , name : "Mac" , version : Some ("10.10.3") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/14.1.0.*(x86_64)|(x86_64-apple-)?darwin14.1.0" , name : "Mac" , version : Some ("10.10.2") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/720" , name : "Mac" , version : Some ("10.10") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/13.4.0.*(x86_64)|(x86_64-apple-)?darwin13.4.0" , name : "Mac" , version : Some ("10.9.5") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/13.3.0.*(x86_64)|(x86_64-apple-)?darwin13.3.0" , name : "Mac" , version : Some ("10.9.4") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/13.2.0.*(x86_64)|(x86_64-apple-)?darwin13.2.0" , name : "Mac" , version : Some ("10.9.3") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/13.1.0.*(x86_64)|(x86_64-apple-)?darwin13.1.0" , name : "Mac" , version : Some ("10.9.2") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/673" , name : "Mac" , version : Some ("10.9") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/12.5.0.*(x86_64)|(x86_64-apple-)?darwin12.5.0" , name : "Mac" , version : Some ("10.8.5") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/12.4.0.*(x86_64)|(x86_64-apple-)?darwin12.4.0" , name : "Mac" , version : Some ("10.8.4") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/12.3.0.*(x86_64)|(x86_64-apple-)?darwin12.3.0" , name : "Mac" , version : Some ("10.8.3") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/12.2.0.*(x86_64)|(x86_64-apple-)?darwin12.2.0" , name : "Mac" , version : Some ("10.8.2") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/12.1.0.*(x86_64)|(x86_64-apple-)?darwin12.1.0" , name : "Mac" , version : Some ("10.8.1") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/596" , name : "Mac" , version : Some ("10.8") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/11.5.0.*(x86_64)|(x86_64-apple-)?darwin11.5.0" , name : "Mac" , version : Some ("10.7.5") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/11.4.0.*(x86_64)|(x86_64-apple-)?darwin11.4.0" , name : "Mac" , version : Some ("10.7.4") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/11.3.0.*(x86_64)|(x86_64-apple-)?darwin11.3.0" , name : "Mac" , version : Some ("10.7.3") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/11.2.0.*(x86_64)|(x86_64-apple-)?darwin11.2.0" , name : "Mac" , version : Some ("10.7.2") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/.+ Darwin/11.1.0.*(x86_64)|(x86_64-apple-)?darwin11.1.0" , name : "Mac" , version : Some ("10.7.1") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/520" , name : "Mac" , version : Some ("10.7") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/454" , name : "Mac" , version : Some ("10.6") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/(?:438|422|339|330|221|220|217)" , name : "Mac" , version : Some ("10.5") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/12[89]" , name : "Mac" , version : Some ("10.4") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/1\\.2" , name : "Mac" , version : Some ("10.3") , category : None , url : None , producer : None , } , Element { regex : "CFNetwork/1\\.1" , name : "Mac" , version : Some ("10.2") , category : None , url : None , producer : None , } , Element { regex : "Mac[ +]OS[ +]?X(?:[ /](?:Version )?(\\d+(?:[_\\.]\\d+)+))?" , name : "Mac" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Mac (?:OS/)?(\\d+(?:[_\\.]\\d+)+)" , name : "Mac" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "macOS/(\\d+[\\.\\d]+)" , name : "Mac" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Darwin|Macintosh|Mac_PowerPC|PPC|Mac PowerPC|iMac|MacBook|macOS|Sonos/.+\\(MDCR_" , name : "Mac" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "SeewoOS x86_64 (\\d+[\\.\\d]+)" , name : "SeewoOS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "CrOS [a-z0-9_]+ .* Chrome/(\\d+[\\.\\d]+)" , name : "Chrome OS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:BB10;.+Version|Black[Bb]erry[0-9a-z]+|Black[Bb]erry.+Version)/(\\d+[\\.\\d]+)" , name : "BlackBerry OS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "RIM Tablet OS (\\d+[\\.\\d]+)" , name : "BlackBerry Tablet OS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "RIM Tablet OS|QNX|Play[Bb]ook" , name : "BlackBerry Tablet OS" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "BlackBerry" , name : "BlackBerry OS" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "bPod" , name : "BlackBerry OS" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "BeOS" , name : "BeOS" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Symbian/3.+NokiaBrowser/7\\.3" , name : "Symbian^3" , version : Some ("Anna") , category : None , url : None , producer : None , } , Element { regex : "Symbian/3.+NokiaBrowser/7\\.4" , name : "Symbian^3" , version : Some ("Belle") , category : None , url : None , producer : None , } , Element { regex : "Symbian/3" , name : "Symbian^3" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "(?:Series ?60|SymbOS|S60)(?:[ /]?(\\d+[\\.\\d]+|V\\d+))?" , name : "Symbian OS Series 60" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Series40" , name : "Symbian OS Series 40" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "SymbianOS/(\\d+[\\.\\d]+)" , name : "Symbian OS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "MeeGo|WeTab" , name : "MeeGo" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Symbian(?: OS)?|SymbOS" , name : "Symbian OS" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Nokia" , name : "Symbian" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "(?:Mobile|Tablet);.+Firefox/\\d+\\.\\d+" , name : "Firefox OS" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "RISC OS(?:-NC)?(?:[ /](\\d+[\\.\\d]+))?" , name : "RISC OS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Inferno(?:[ /](\\d+[\\.\\d]+))?" , name : "Inferno" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "bada(?:[ /](\\d+[\\.\\d]+))?" , name : "Bada" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Brew(?!-Applet)(?: MP)?|BMP)(?:[ /](\\d+[\\.\\d]+))?" , name : "Brew" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "GoogleTV(?:[ /](\\d+[\\.\\d]+))?" , name : "Google TV" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "AppleTV(?:/?(\\d+[\\.\\d]+))?" , name : "Apple TV" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "WebTV/(\\d+[\\.\\d]+)" , name : "WebTV" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "RemixOS 5.1.1" , name : "Remix OS" , version : Some ("1") , category : None , url : None , producer : None , } , Element { regex : "RemixOS 6.0" , name : "Remix OS" , version : Some ("2") , category : None , url : None , producer : None , } , Element { regex : "RemixOS" , name : "Remix OS" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "(?:SunOS|Solaris)(?:[/ ](\\d+[\\.\\d]+))?" , name : "Solaris" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "AIX(?:[/ ]?(\\d+[\\.\\d]+))?" , name : "AIX" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "HP-UX(?:[/ ]?(\\d+[\\.\\d]+))?" , name : "HP-UX" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "FreeBSD(?:[/ ]?(\\d+[\\.\\d]+))?" , name : "FreeBSD" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "NetBSD(?:[/ ]?(\\d+[\\.\\d]+))?" , name : "NetBSD" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "OpenBSD(?:[/ ]?(\\d+[\\.\\d]+))?" , name : "OpenBSD" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "DragonFly(?:[/ ]?(\\d+[\\.\\d]+))?" , name : "DragonFly" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Syllable(?:[/ ]?(\\d+[\\.\\d]+))?" , name : "Syllable" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "IRIX(?:;64)?(?:[/ ]?(\\d+[\\.\\d]+))" , name : "IRIX" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "OSF1(?:[/ ]?v?(\\d+[\\.\\d]+))?" , name : "OSF1" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Nintendo (Wii|Switch)" , name : "Nintendo" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "PlayStation ?([34])" , name : "PlayStation" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Xbox|KIN\\.(?:One|Two)" , name : "Xbox" , version : Some ("360") , category : None , url : None , producer : None , } , Element { regex : "Nitro|Nintendo ([3]?DS[i]?)" , name : "Nintendo Mobile" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "PlayStation ((?:Portable|Vita))" , name : "PlayStation Portable" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "OS/2" , name : "OS/2" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Linux(?:OS)?[^a-z]" , name : "GNU/Linux" , version : Some ("") , category : None , url : None , producer : None , } ,] ;
pub static BROWSER_ENGINE : [Element ; 13usize] = [Element { regex : "NetFront" , name : "NetFront" , version : None , category : None , url : None , producer : None , } , Element { regex : "Edge" , name : "Edge" , version : None , category : None , url : None , producer : None , } , Element { regex : "Trident" , name : "Trident" , version : None , category : None , url : None , producer : None , } , Element { regex : "(?<!SmartHu)Blink" , name : "Blink" , version : None , category : None , url : None , producer : None , } , Element { regex : "(?:Apple)?WebKit" , name : "WebKit" , version : None , category : None , url : None , producer : None , } , Element { regex : "Presto" , name : "Presto" , version : None , category : None , url : None , producer : None , } , Element { regex : "Goanna" , name : "Goanna" , version : None , category : None , url : None , producer : None , } , Element { regex : "(?<!like )Gecko" , name : "Gecko" , version : None , category : None , url : None , producer : None , } , Element { regex : "KHTML" , name : "KHTML" , version : None , category : None , url : None , producer : None , } , Element { regex : "NetSurf" , name : "NetSurf" , version : None , category : None , url : None , producer : None , } , Element { regex : "Servo" , name : "Servo" , version : None , category : None , url : None , producer : None , } , Element { regex : "Goanna" , name : "Goanna" , version : None , category : None , url : None , producer : None , } , Element { regex : "Ekioh(?:Flow)?" , name : "EkiohFlow" , version : None , category : None , url : None , producer : None , } ,] ;
pub static BROWSERS : [Element ; 375usize] = [Element { regex : "Mandarin Browser/(\\d+[\\.\\d]+)" , name : "Mandarin" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Torrent/(\\d+[\\.\\d]+)" , name : "Maelstrom" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Helio/(\\d+[\\.\\d]+)" , name : "Helio" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "7654Browser/(\\d+[\\.\\d]+)" , name : "7654 Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Qazweb/(\\d+[\\.\\d]+)" , name : "Qazweb" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Degdegan/(\\d+[\\.\\d]+)" , name : "deg-degan" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "JavaFX/(\\d+[\\.\\d]+)" , name : "JavaFX" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Chedot/(\\d+[\\.\\d]+)" , name : "Chedot" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Chrome/(\\d+[\\.\\d]+) \\(Chromium GOST\\)" , name : "Chromium GOST" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:DeledaoPersonal|DeledaoFamily)/(\\d+[\\.\\d]+)" , name : "Deledao" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "HasBrowser/(\\d+[\\.\\d]+)" , name : "HasBrowser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Byffox/(\\d+[\\.\\d]+)" , name : "Byffox" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Chrome/(\\d+[\\.\\d]+).+AgentWeb.+UCBrowser" , name : "CoolBrowser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "DotBrowser/(\\d+[\\.\\d]+)" , name : "Dot Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "CravingExplorer/(\\d+[\\.\\d]+)" , name : "Craving Explorer" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "DeskBrowse/(\\d+[\\.\\d]+)" , name : "DeskBrowse" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Lolifox/(\\d+[\\.\\d]+)" , name : "Lolifox" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "qutebrowser/(\\d+[\\.\\d]+).+Chrome" , name : "Qutebrowser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "qutebrowser(?:/(\\d+[\\.\\d]+))?" , name : "Qutebrowser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "flast/(\\d+[\\.\\d]+)" , name : "Flast" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "PolyBrowser/(\\d+[\\.\\d]+)" , name : "PolyBrowser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Chrome.+BriskBard/(\\d+[\\.\\d]+)" , name : "BriskBard" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "BriskBard(?:/(\\d+[\\.\\d]+))?" , name : "BriskBard" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "GinxDroidBrowser/(\\d+[\\.\\d]+)" , name : "GinxDroid Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "AviraScout/(\\d+[\\.\\d]+)" , name : "Avira Scout" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "VenusBrowser/(\\d+[\\.\\d]+)" , name : "Venus Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Chrome.+Otter(?:[ /](\\d+[\\.\\d]+))?" , name : "Otter Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Otter(?:[ /](\\d+[\\.\\d]+))?" , name : "Otter Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Chrome.+Smooz/(\\d+[\\.\\d]+)" , name : "Smooz" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Smooz/(\\d+[\\.\\d]+)" , name : "Smooz" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Cornowser/(\\d+[\\.\\d]+)" , name : "Cornowser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Orca/(\\d+[\\.\\d]+)" , name : "Orca" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Flow/(?:(\\d+[\\.\\d]+))" , name : "Flow" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Ekioh/(?:(\\d+[\\.\\d]+))" , name : "Flow" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "xStand/(\\d+[\\.\\d]+)" , name : "xStand" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Biyubi/(\\d+[\\.\\d]+)" , name : "Biyubi" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Perfect%20Browser(?:-iPad)?|Perfect(?:BrowserPro)?)/(\\d+[\\.\\d]+)" , name : "Perfect Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Browser/Phantom/V(\\d+[\\.\\d]+)" , name : "Phantom Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "AwoX(?:/(\\d+[\\.\\d]+))? Browser" , name : "AwoX" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Zetakey/(\\d+[\\.\\d]+)" , name : "Zetakey" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "PlayFreeBrowser/(?:(\\d+[\\.\\d]+))?" , name : "PlayFree Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:chimlac_browser|chimlac)/(?:(\\d+[\\.\\d]+))" , name : "Chim Lac" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Odin/(?:(\\d+[\\.\\d]+))" , name : "Odin" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Tbrowser/(\\d+[\\.\\d]+)" , name : "T-Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "SFive(?:_Android)?/.+ Chrome/(\\d+[\\.\\d]+)" , name : "SFive" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "SFive_IOS/(\\d+[\\.\\d]+)" , name : "SFive" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Navigateur web/(?:(\\d+[\\.\\d]+))?" , name : "Navigateur Web" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Sraf(?:[/ ](\\d+[\\.\\d]+))?" , name : "Seraphic Sraf" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "SeewoBrowser/(?:(\\d+[\\.\\d]+))?" , name : "Seewo Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Kode(?:iOS)?/(?:(\\d+[\\.\\d]+))?|TansoDL)" , name : "Kode Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "UR/(?:(\\d+[\\.\\d]+))" , name : "UR Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "OceanHero/([\\.\\d]+)" , name : "OceanHero" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Chrome/.+ SLBrowser/(?:(\\d+[\\.\\d]+))?" , name : "Smart Lenovo Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "SLBrowser/(?:(\\d+[\\.\\d]+))?" , name : "Smart Lenovo Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Browzar" , name : "Browzar" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Stargon/(?:(\\d+[\\.\\d]+))?" , name : "Stargon" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "NFSBrowser/(?:(\\d+[\\.\\d]+))?" , name : "NFS Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Borealis/(\\d+[\\.\\d]+)" , name : "Borealis Navigator" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "YoloBrowser/(?:(\\d+[\\.\\d]+))?" , name : "Yolo Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "PHX/(?:(\\d+[\\.\\d]+))?" , name : "Phoenix Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "PrivacyWall/(?:(\\d+[\\.\\d]+))?" , name : "PrivacyWall" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Ghostery:?(\\d+[\\.\\d]+)?" , name : "Ghostery Privacy Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Firefox/.*(?:Turkcell-)?YaaniBrowser(?:/(\\d+[\\.\\d]+))?" , name : "Yaani Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Turkcell-)?YaaniBrowser(?:/(\\d+[\\.\\d]+))?" , name : "Yaani Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "SEB/(?:(\\d+[\\.\\d]+))?" , name : "Safe Exam Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Colibri/(?:(\\d+[\\.\\d]+))?" , name : "Colibri" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Xvast/(?:(\\d+[\\.\\d]+))?" , name : "Xvast" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "TungstenBrowser/(?:(\\d+[\\.\\d]+))?" , name : "Tungsten" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Lulumi-browser/(?:(\\d+[\\.\\d]+))?" , name : "Lulumi" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "ybrowser/(?:(\\d+[\\.\\d]+))?" , name : "Yahoo! Japan Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "iLunascapeLite/(?:(\\d+[\\.\\d]+))?" , name : "Lunascape Lite" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Polypane/(?:(\\d+[\\.\\d]+))?" , name : "Polypane" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "OhHaiBrowser/(?:(\\d+[\\.\\d]+))?" , name : "OhHai Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Sizzy/(?:(\\d+[\\.\\d]+))?" , name : "Sizzy" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "GlassBrowser/(?:(\\d+[\\.\\d]+))?" , name : "Glass Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "ToGate/(?:(\\d+[\\.\\d]+))?" , name : "ToGate" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "AirWatch Browser v(?:(\\d+[\\.\\d]+))?" , name : "VMware AirWatch" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "ADG/(?:(\\d+[\\.\\d]+))?" , name : "AOL Desktop" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Elements Browser/(?:(\\d+[\\.\\d]+))?" , name : "Elements Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Light/(\\d+[\\.\\d]+)" , name : "Light" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Valve Steam GameOverlay/(?:(\\d+[\\.\\d]+))?" , name : "Steam In-Game Overlay" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "115Browser/(?:(\\d+[\\.\\d]+))?" , name : "115 Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Atom/(?:(\\d+[\\.\\d]+))?" , name : "Atom" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Mobile VR.+Firefox" , name : "Firefox Reality" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "AVG(?:/(\\d+[\\.\\d]+))?" , name : "AVG Secure Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Start/(?:(\\d+[\\.\\d]+))?" , name : "START Internet Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Lovense(?:/(\\d+[\\.\\d]+))?" , name : "Lovense Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "com.airfind.deltabrowser(?:/(\\d+[\\.\\d]+))?" , name : "Delta Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Ordissimo|webissimo3)(?:/(\\d+[\\.\\d]+))?" , name : "Ordissimo" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "CCleaner(?:/(\\d+[\\.\\d]+))?" , name : "CCleaner" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "AlohaLite(?:/(\\d+[\\.\\d]+))?" , name : "Aloha Browser Lite" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "TaoBrowser(?:/(\\d+[\\.\\d]+))?" , name : "Tao Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Falkon(?:/(\\d+[\\.\\d]+))?" , name : "Falkon" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "mCent(?:/(\\d+[\\.\\d]+))?" , name : "mCent" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "SalamWeb(?:/(\\d+[\\.\\d]+))?" , name : "SalamWeb" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "BlackHawk(?:/(\\d+[\\.\\d]+))?" , name : "BlackHawk" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Minimo(?:/(\\d+[\\.\\d]+))?" , name : "Minimo" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "WIB(?:/(\\d+[\\.\\d]+))?" , name : "Wear Internet Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Origyn Web Browser" , name : "Origyn Web Browser" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Kinza(?:/(\\d+[\\.\\d]+))?" , name : "Kinza" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Beamrise(?:/(\\d+[\\.\\d]+))?" , name : "Beamrise" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Faux(?:/(\\d+[\\.\\d]+))?" , name : "Faux Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "splash Version(?:/(\\d+[\\.\\d]+))?" , name : "Splash" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "MZBrowser(?:/(\\d+[\\.\\d]+))?" , name : "Meizu Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "COSBrowser(?:/(\\d+[\\.\\d]+))?" , name : "COS Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Crusta(?:/(\\d+[\\.\\d]+))?" , name : "Crusta" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Hawk/TurboBrowser(?:/v?(\\d+[\\.\\d]+))?" , name : "Hawk Turbo Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "FreeU(?:/(\\d+[\\.\\d]+))?" , name : "FreeU" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "NoxBrowser(?:/(\\d+[\\.\\d]+))?" , name : "Nox Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Basilisk(?:/(\\d+[\\.\\d]+))?" , name : "Basilisk" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "SputnikBrowser(?:/(\\d+[\\.\\d]+))?" , name : "Sputnik Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "TNSBrowser(?:/(\\d+[\\.\\d]+))?" , name : "K.Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "OculusBrowser(?:/(\\d+[\\.\\d]+))?" , name : "Oculus Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Jio(?:Browser|Pages)(?:/(\\d+[\\.\\d]+))?" , name : "Jio Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Chrome/.+ Hola(?:/(\\d+[\\.\\d]+))?" , name : "hola! Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Slimjet/(?:(\\d+[\\.\\d]+))" , name : "Slimjet" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "7Star/(?:(\\d+[\\.\\d]+))" , name : "7Star" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "MxNitro/(?:(\\d+[\\.\\d]+))" , name : "MxNitro" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "HuaweiBrowser(?:/(\\d+[\\.\\d]+))?" , name : "Huawei Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "VivoBrowser(?:/(\\d+[\\.\\d]+))?" , name : "vivo Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "RealmeBrowser(?:/(\\d+[\\.\\d]+))?" , name : "Realme Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Beaker ?Browser(?:[/ ](\\d+[\\.\\d]+))?" , name : "Beaker Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "QwantiOS/(\\d+[\\.\\d]+)" , name : "Qwant Mobile" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "QwantMobile(?:/(\\d+[\\.\\d]+))?" , name : "Qwant Mobile" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Qwant/(\\d+[\\.\\d]+)" , name : "Qwant Mobile" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "TenFourFox(?:/(\\d+[\\.\\d]+))?" , name : "TenFourFox" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "AOLShield(?:/(\\d+[\\.\\d]+))?" , name : "AOL Shield" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Edge[ /](\\d+[\\.\\d]+)" , name : "Microsoft Edge" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "EdgiOS[ /](\\d+[\\.\\d]+)" , name : "Microsoft Edge" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "EdgA[ /](\\d+[\\.\\d]+)" , name : "Microsoft Edge" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Edg[ /](\\d+[\\.\\d]+)" , name : "Microsoft Edge" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "QIHU 360[ES]E" , name : "360 Browser" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "360 Aphone Browser(?: \\((\\d+[\\.\\d]+)(?:beta)?\\))?" , name : "360 Phone Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "SailfishBrowser(?:/(\\d+[\\.\\d]+))?" , name : "Sailfish Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "IceCat(?:/(\\d+[\\.\\d]+))?" , name : "IceCat" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Mobicip" , name : "Mobicip" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Camino(?:/(\\d+[\\.\\d]+))?" , name : "Camino" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Waterfox(?:/(\\d+[\\.\\d]+))?" , name : "Waterfox" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Chrome/.+ AlohaBrowser(?:/(\\d+[\\.\\d]+))?" , name : "Aloha Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "AlohaBrowser(?:/(\\d+[\\.\\d]+))?" , name : "Aloha Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Avast|ASW|Safer)(?:/(\\d+[\\.\\d]+))?" , name : "Avast Secure Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Epic(?:/(\\d+[\\.\\d]+))" , name : "Epic" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Fennec(?:/(\\d+[\\.\\d]+))?" , name : "Fennec" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Firefox.*Tablet browser (\\d+[\\.\\d]+)" , name : "MicroB" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Maemo Browser(?: (\\d+[\\.\\d]+))?" , name : "MicroB" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Deepnet Explorer (\\d+[\\.\\d]+)?" , name : "Deepnet Explorer" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Avant ?Browser" , name : "Avant Browser" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "OppoBrowser(?:/(\\d+[\\.\\d]+))?" , name : "Oppo Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Chrome/(\\d+[\\.\\d]+).*MRCHROME" , name : "Amigo" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "AtomicBrowser(?:/(\\d+[\\.\\d]+))?" , name : "Atomic Web Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Bunjalloo(?:/(\\d+[\\.\\d]+))?" , name : "Bunjalloo" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Brave(?:/(\\d+[\\.\\d]+))?" , name : "Brave" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Iridium(?:/(\\d+[\\.\\d]+))?" , name : "Iridium" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Iceweasel(?:/(\\d+[\\.\\d]+))?" , name : "Iceweasel" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "WebPositive" , name : "WebPositive" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : ".*Goanna.*PaleMoon(?:/(\\d+[\\.\\d]+))?" , name : "Pale Moon" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "PaleMoon(?:/(\\d+[\\.\\d]+))?" , name : "Pale Moon" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "CometBird(?:/(\\d+[\\.\\d]+))?" , name : "CometBird" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "IceDragon(?:/(\\d+[\\.\\d]+))?" , name : "IceDragon" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Flock(?:/(\\d+[\\.\\d]+))?" , name : "Flock" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "JigBrowserPlus/(?:(\\d+[\\.\\d]+))?" , name : "Jig Browser Plus" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "jig browser(?: web;|9i?)?(?:[/ ](\\d+[\\.\\d]+))?" , name : "Jig Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Kapiko(?:/(\\d+[\\.\\d]+))?" , name : "Kapiko" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Kylo(?:/(\\d+[\\.\\d]+))?" , name : "Kylo" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Origin/(?:(\\d+[\\.\\d]+))?" , name : "Origin In-Game Overlay" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Cunaguaro(?:/(\\d+[\\.\\d]+))?" , name : "Cunaguaro" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:TO-Browser/TOB|DT-Browser/DTB)(\\d+[\\.\\d]+)" , name : "t-online.de Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Kazehakase(?:/(\\d+[\\.\\d]+))?" , name : "Kazehakase" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "ArcticFox(?:/(\\d+[\\.\\d]+))?" , name : "Arctic Fox" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Mypal(?:/(\\d+[\\.\\d]+))?" , name : "Mypal" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Centaury(?:/(\\d+[\\.\\d]+))?" , name : "Centaury" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Focus|Klar)(?:/(\\d+[\\.\\d]+))?" , name : "Firefox Focus" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Cyberfox(?:/(\\d+[\\.\\d]+))?" , name : "Cyberfox" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Firefox/(\\d+[\\.\\d]+).*\\(Swiftfox\\)" , name : "Swiftfox" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Mobile|Tablet).*Servo.*Firefox(?:/(\\d+[\\.\\d]+))?" , name : "Firefox Mobile" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Mobile|Tablet).*Firefox(?:/(\\d+[\\.\\d]+))?" , name : "Firefox Mobile" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "FxiOS/(\\d+[\\.\\d]+)" , name : "Firefox Mobile iOS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : ".*Servo.*Firefox(?:/(\\d+[\\.\\d]+))?" , name : "Firefox" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?!.*Opera[ /])Firefox(?:/(\\d+[\\.\\d]+))?" , name : "Firefox" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:BonEcho|GranParadiso|Lorentz|Minefield|Namoroka|Shiretoko)/(\\d+[\\.\\d]+)" , name : "Firefox" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "ANTFresco(?:[/ ](\\d+[\\.\\d]+))?" , name : "ANT Fresco" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "ANTGalio(?:/(\\d+[\\.\\d]+))?" , name : "ANTGalio" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Espial|Escape)(?:[/ ](\\d+[\\.\\d]+))?" , name : "Espial TV Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "RockMelt(?:/(\\d+[\\.\\d]+))?" , name : "RockMelt" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Fireweb Navigator(?:/(\\d+[\\.\\d]+))?" , name : "Fireweb Navigator" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Fireweb(?:/(\\d+[\\.\\d]+))?" , name : "Fireweb" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Navigator|Netscape6?)(?:/(\\d+[\\.\\d]+))?" , name : "Netscape" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Polarity)(?:[/ ](\\d+[\\.\\d]+))?" , name : "Polarity" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:QupZilla)(?:[/ ](\\d+[\\.\\d]+))?" , name : "QupZilla" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Dooble)(?:[/ ](\\d+[\\.\\d]+))?" , name : "Dooble" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Whale/(\\d+[\\.\\d]+)" , name : "Whale Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Obigo[ ]?(?:InternetBrowser|Browser)?(?:[ /]([a-z0-9]*))?" , name : "Obigo" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Obigo|Teleca" , name : "Obigo" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "UCBrowserHD/(\\d[\\d\\.]+)" , name : "UC Browser HD" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "UCMini(?:[ /]?(\\d+[\\.\\d]+))?" , name : "UC Browser Mini" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "UC[ ]?Browser.* \\(UCMini\\)" , name : "UC Browser Mini" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "UCTurbo(?:[ /]?(\\d+[\\.\\d]+))?" , name : "UC Browser Turbo" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "UC[ ]?Browser.* \\(UCTurbo\\)" , name : "UC Browser Turbo" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "OPRGX(?:/(\\d+[\\.\\d]+))?" , name : "Opera GX" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Opera Tablet.*Version|Opera/.+Opera Mobi.+Version|Mobile.+OPR)/(\\d+[\\.\\d]+)" , name : "Opera Mobile" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "MMS/(\\d+[\\.\\d]+)" , name : "Opera Neon" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "OMI/(\\d+[\\.\\d]+)" , name : "Opera Devices" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Opera%20Touch/(\\d+[\\.\\d]+)? CFNetwork/.+Darwin/.+(?!.*x86_64)" , name : "Opera Touch" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "OPT/(\\d+[\\.\\d]+)" , name : "Opera Touch" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Opera/(\\d+[\\.\\d]+).+Opera Mobi" , name : "Opera Mobile" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Opera ?Mini/(?:att/)?(\\d+[\\.\\d]+)" , name : "Opera Mini" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Opera ?Mini.+Version/(\\d+[\\.\\d]+)" , name : "Opera Mini" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "OPiOS/(\\d+[\\.\\d]+)" , name : "Opera Mini iOS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Opera%20Mini/(\\d+[\\.\\d]+) CFNetwork" , name : "Opera Mini iOS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Opera.+Edition Next.+Version/(\\d+[\\.\\d]+)" , name : "Opera Next" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Opera|OPR)[/ ](?:9.80.*Version/)?(\\d+[\\.\\d]+).+Edition Next" , name : "Opera Next" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Opera[/ ]?|OPR[/ ])(?:9.80.*Version/)?(\\d+[\\.\\d]+)" , name : "Opera" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "rekonq(?:/(\\d+[\\.\\d]+))?" , name : "Rekonq" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "CoolNovo(?:/(\\d+[\\.\\d]+))?" , name : "CoolNovo" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Comodo[ _])?Dragon(?!fruit)(?:/(\\d+[\\.\\d]+))?" , name : "Comodo Dragon" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "ChromePlus(?:/(\\d+[\\.\\d]+))?" , name : "ChromePlus" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Conkeror(?:/(\\d+[\\.\\d]+))?" , name : "Conkeror" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Konqueror(?:/(\\d+[\\.\\d]+))?" , name : "Konqueror" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:baidubrowser|bdbrowser(?:(?:hd)?_i18n)?|FlyFlow|BaiduHD)(?:[/ ](\\d+[\\.\\d]*))?" , name : "Baidu Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:(?:BD)?Spark(?:Safe)?|BIDUBrowser)[/ ](\\d+[\\.\\d]*)" , name : "Baidu Spark" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "YaBrowser(?:/(\\d+[\\.\\d]*)) \\(lite\\)?" , name : "Yandex Browser Lite" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "YaBrowser(?:/(\\d+[\\.\\d]*))(?: \\((alpha|beta)\\))?" , name : "Yandex Browser" , version : Some ("$1 $2") , category : None , url : None , producer : None , } , Element { regex : "Ya(?:ndex)?SearchBrowser(?:/(\\d+[\\.\\d]*))" , name : "Yandex Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Vivaldi(?:/(\\d+[\\.\\d]+))?" , name : "Vivaldi" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "TweakStyle(?:/(\\d+[\\.\\d]+))?" , name : "TweakStyle" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Chrome.+Midori Browser/(\\d+[\\.\\d]+)" , name : "Midori" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Midori(?:/(\\d+[\\.\\d]+))?" , name : "Midori" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Mercury(?:/(\\d+[\\.\\d]+))?" , name : "Mercury" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Chrome.+Maxthon(?:.+\\(portable\\))?/(\\d+[\\.\\d]+)" , name : "Maxthon" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Maxthon(?:%20Browser)?|MxBrowser(?:-inhouse|-iPhone)?)[ /](\\d+[\\.\\d]+)" , name : "Maxthon" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Maxthon|MyIE2)" , name : "Maxthon" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Puffin(?:/(\\d+[\\.\\d]+))?" , name : "Puffin" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "MobileIron(?:/(\\d+[\\.\\d]+))?" , name : "Iron Mobile" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Chrome(?:/(\\d+[\\.\\d]+))?.*Iron" , name : "Iron" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Iron(?:/(\\d+[\\.\\d]+))?" , name : "Iron" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Epiphany(?:/(\\d+[\\.\\d]+))?" , name : "GNOME Web" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "LieBaoFast(?:[ /](\\d+[\\.\\d]+))?" , name : "LieBaoFast" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "LBBrowser(?:[ /](\\d+[\\.\\d]+))?" , name : "Cheetah Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "SE (\\d+[\\.\\d]+)" , name : "Sogou Explorer" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "QQBrowserLite/([\\d\\.]+)" , name : "QQ Browser Lite" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "M?QQBrowser/Mini([\\.\\d]+)?" , name : "QQ Browser Mini" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "M?QQBrowser(?:/([\\.\\d]+))?" , name : "QQ Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:MIUIBrowser|MiuiBrowser)(?:/(\\d+[\\.\\d]+))?" , name : "MIUI Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:coc_coc_browser|coccocbrowser|CocCoc)(?:/(\\d+[\\.\\d]+))?" , name : "Coc Coc" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "DuckDuckGo/(\\d+[\\.\\d]*)" , name : "DuckDuckGo Privacy Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Samsung ?Browser(?:[/ ](\\d+[\\.\\d]+))?" , name : "Samsung Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:SFB(?:rowser)?)/(\\d+[\\.\\d]+)" , name : "Super Fast Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "com.browser.tssomas(?:/(\\d+[\\.\\d]+))?" , name : "Super Fast Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "EUI Browser(?:/(\\d+[\\.\\d]+))?" , name : "EUI Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "UBrowser(?:/(\\d+[\\.\\d]+))?" , name : "UBrowser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Streamy(?:/(\\d+[\\.\\d]+))?" , name : "Streamy" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "isivioo" , name : "Isivioo" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "UC[ ]?Browser(?:[ /]?(\\d+[\\.\\d]+))?" , name : "UC Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "UCWEB(?:[ /]?(\\d+[\\.\\d]+))?" , name : "UC Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "UC AppleWebKit" , name : "UC Browser" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Tenta/(\\d+[\\.\\d]+)" , name : "Tenta Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Rocket/(\\d+[\\.\\d]+)" , name : "Firefox Rocket" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Web Explorer/(\\d+[\\.\\d]+).*Chrome" , name : "Web Explorer" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "SznProhlizec/(\\d+[\\.\\d]+)" , name : "Seznam Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "SogouMobileBrowser/(\\d+[\\.\\d]+)" , name : "Sogou Mobile Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Mint Browser/(\\d+[\\.\\d]+)" , name : "Mint Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Ecosia (?:android|ios)@(\\d+[\\.\\d]+)" , name : "Ecosia" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "ACHEETAHI" , name : "CM Browser" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Kiwi Chrome" , name : "Kiwi" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Mb2345Browser/(\\d+[\\.\\d]+)" , name : "2345 Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "QtWebEngine/(\\d+[\\.\\d]+)" , name : "QtWebEngine" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Silk/(\\d+[\\.\\d]+) like Chrome" , name : "Mobile Silk" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Silk(?:/(\\d+[\\.\\d]+))?" , name : "Mobile Silk" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "IBrowse(?:[ /](\\d+[\\.\\d]+))?" , name : "IBrowse" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "UP.Browser(?:/(\\d+[\\.\\d]+))?" , name : "Openwave Mobile Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Openwave(?:/(\\d+[\\.\\d]+))?" , name : "Openwave Mobile Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "OneBrowser(?:[ /](\\d+[\\.\\d]+))?" , name : "ONE Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:NokiaBrowser|BrowserNG)(?:/(\\d+[\\.\\d]+))?" , name : "Nokia Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Series60/5\\.0" , name : "Nokia Browser" , version : Some ("7.0") , category : None , url : None , producer : None , } , Element { regex : "Series60/(\\d+[\\.\\d]+)" , name : "Nokia OSS Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "S40OviBrowser/(\\d+[\\.\\d]+)" , name : "Nokia Ovi Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "^Nokia|Nokia[EN]?\\d+" , name : "Nokia Browser" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Sleipnir(?:(?:%20Browser)?[ /](\\d+[\\.\\d]+))?" , name : "Sleipnir" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "NTENTBrowser(?:/(\\d+[\\.\\d]+))?" , name : "NTENT Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "TV Bro/(\\d+[\\.\\d]+)" , name : "TV Bro" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Chrome/.+ Quark(?:/(\\d+[\\.\\d]+))?" , name : "Quark" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "MonumentBrowser(?:/(\\d+[\\.\\d]+))?" , name : "Monument Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "BlueBrowser(?:/(\\d+[\\.\\d]+))?" , name : "Blue Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "JAPAN Browser(?:/(\\d+[\\.\\d]+))?" , name : "Japan Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Version/.* Chrome(?:/(\\d+[\\.\\d]+))?" , name : "Chrome Webview" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "CrMo(?:/(\\d+[\\.\\d]+))?" , name : "Chrome Mobile" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "CriOS(?:/(\\d+[\\.\\d]+))?" , name : "Chrome Mobile iOS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Chrome(?:/(\\d+[\\.\\d]+))? Mobile" , name : "Chrome Mobile" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "chromeframe(?:/(\\d+[\\.\\d]+))?" , name : "Chrome Frame" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Chromium(?:/(\\d+[\\.\\d]+))?" , name : "Chromium" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "HeadlessChrome(?:/(\\d+[\\.\\d]+))?" , name : "Headless Chrome" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Chrome(?!book)(?:/(\\d+[\\.\\d]+))?" , name : "Chrome" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Tizen|SLP) Browser(?:/(\\d+[\\.\\d]+))?" , name : "Tizen Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Tizen (?:\\d+[\\.\\d]+).+ Version/(\\d+[\\.\\d]+) (?:TV|Mobile)" , name : "Tizen Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Blazer(?:/(\\d+[\\.\\d]+))?" , name : "Palm Blazer" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Pre/(\\d+[\\.\\d]+)" , name : "Palm Pre" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:hpw|web)OS/(\\d+[\\.\\d]+)" , name : "wOSBrowser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "WebPro(?:[ /](\\d+[\\.\\d]+))?" , name : "Palm WebPro" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Palmscape(?:[ /](\\d+[\\.\\d]+))?" , name : "Palmscape" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Jasmine(?:[ /](\\d+[\\.\\d]+))?" , name : "Jasmine" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Lynx(?:/(\\d+[\\.\\d]+))?" , name : "Lynx" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "NCSA_Mosaic(?:/(\\d+[\\.\\d]+))?" , name : "NCSA Mosaic" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "ABrowse(?: (\\d+[\\.\\d]+))?" , name : "ABrowse" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "amaya(?:/(\\d+[\\.\\d]+))?" , name : "Amaya" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "AmigaVoyager(?:/(\\d+[\\.\\d]+))?" , name : "Amiga Voyager" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Amiga-Aweb(?:/(\\d+[\\.\\d]+))?" , name : "Amiga Aweb" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Arora(?:/(\\d+[\\.\\d]+))?" , name : "Arora" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Beonex(?:/(\\d+[\\.\\d]+))?" , name : "Beonex" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "bline(?:/(\\d+[\\.\\d]+))?" , name : "B-Line" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "BrowseX \\((\\d+[\\.\\d]+)" , name : "BrowseX" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Charon(?:[/ ](\\d+[\\.\\d]+))?" , name : "Charon" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Cheshire(?:/(\\d+[\\.\\d]+))?" , name : "Cheshire" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "dbrowser" , name : "dbrowser" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Dillo(?:/(\\d+[\\.\\d]+))?" , name : "Dillo" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Dolfin(?:/(\\d+[\\.\\d]+))?|dolphin" , name : "Dolphin" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Elinks(?:/(\\d+[\\.\\d]+))?" , name : "Elinks" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Element Browser(?:[ /](\\d+[\\.\\d]+))?" , name : "Element Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "eZBrowser(?:/(\\d+[\\.\\d]+))?" , name : "eZ Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Firebird(?! Build)(?:/(\\d+[\\.\\d]+))?" , name : "Firebird" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Fluid(?:/(\\d+[\\.\\d]+))?" , name : "Fluid" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Galeon(?:/(\\d+[\\.\\d]+))?" , name : "Galeon" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Google Earth(?:/(\\d+[\\.\\d]+))?" , name : "Google Earth" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "HotJava(?:/(\\d+[\\.\\d]+))?" , name : "HotJava" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "iCabMobile(?:[ /](\\d+[\\.\\d]+))?" , name : "iCab Mobile" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "iCab(?:[ /](\\d+[\\.\\d]+))?" , name : "iCab" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "i?Lunascape(?:[/ ](\\d+[\\.\\d]+))?" , name : "Lunascape" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Crazy Browser (\\d+[\\.\\d]+)" , name : "Crazy Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "IEMobile[ /](\\d+[\\.\\d]+)" , name : "IE Mobile" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "MSIE (\\d+[\\.\\d]+).*XBLWP7" , name : "IE Mobile" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "MSIE.*Trident/4.0" , name : "Internet Explorer" , version : Some ("8.0") , category : None , url : None , producer : None , } , Element { regex : "MSIE.*Trident/5.0" , name : "Internet Explorer" , version : Some ("9.0") , category : None , url : None , producer : None , } , Element { regex : "MSIE.*Trident/6.0" , name : "Internet Explorer" , version : Some ("10.0") , category : None , url : None , producer : None , } , Element { regex : "Trident/[78].0" , name : "Internet Explorer" , version : Some ("11.0") , category : None , url : None , producer : None , } , Element { regex : "MSIE (\\d+[\\.\\d]+)" , name : "Internet Explorer" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "IE[ /](\\d+[\\.\\d]+)" , name : "Internet Explorer" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Kindle/(\\d+[\\.\\d]+)" , name : "Kindle Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "K-meleon(?:/(\\d+[\\.\\d]+))?" , name : "K-meleon" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Links(?: \\((\\d+[\\.\\d]+))?" , name : "Links" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "LG Browser(?:/(\\d+[\\.\\d]+))" , name : "LG Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "LuaKit(?:/(\\d+[\\.\\d]+))?" , name : "LuaKit" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "OmniWeb(?:/[v]?(\\d+[\\.\\d]+))?" , name : "OmniWeb" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Phoenix(?:/(\\d+[\\.\\d]+))?" , name : "Phoenix" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "NetFrontLifeBrowser(?:/(\\d+[\\.\\d]+))?" , name : "NetFront Life" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "NetFront(?:/(\\d+[\\.\\d]+))?" , name : "NetFront" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "PLAYSTATION|NINTENDO 3|AppleWebKit.+ N[XF]/\\d+\\.\\d+\\.\\d+" , name : "NetFront" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "NetPositive(?:/(\\d+[\\.\\d]+))?" , name : "NetPositive" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Odyssey Web Browser(?:.*OWB/(\\d+[\\.\\d]+))?" , name : "Odyssey Web Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "OffByOne" , name : "Off By One" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "(?:Oregano|OreganMediaBrowser)(?:[ /](\\d+[\\.\\d]+))?" , name : "Oregano" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Polaris|Embider)(?:[/ ](\\d+[\\.\\d]+))?" , name : "Polaris" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "SEMC-Browser(?:[/ ](\\d+[\\.\\d]+))?" , name : "SEMC-Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Shiira(?:[/ ](\\d+[\\.\\d]+))?" , name : "Shiira" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Skyfire(?:[/ ](\\d+[\\.\\d]+))?" , name : "Skyfire" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Snowshoe(?:/(\\d+[\\.\\d]+))?" , name : "Snowshoe" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Sunrise(?:Browser)?(?:/(\\d+[\\.\\d]+))?" , name : "Sunrise" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "SuperBird(?:/(\\d+[\\.\\d]+))?" , name : "SuperBird" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Vision-Browser(?:/(\\d+[\\.\\d]+))" , name : "Vision Mobile Browser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "WeTab-Browser" , name : "WeTab Browser" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Xiino(?:/(\\d+[\\.\\d]+))?" , name : "Xiino" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "BlackBerry|PlayBook|BB10" , name : "BlackBerry Browser" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Android" , name : "Android Browser" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Coast(?:/(\\d+[\\.\\d]+))?" , name : "Coast" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Surf(?:/(\\d+[\\.\\d]+))?" , name : "surf" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:(?:iPod|iPad|iPhone).+Version|MobileSafari)/(\\d+[\\.\\d]+)" , name : "Mobile Safari" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Version/(\\d+[\\.\\d]+).*)?Mobile.*Safari/" , name : "Mobile Safari" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:iPod|iPhone|iPad)" , name : "Mobile Safari" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Version/(\\d+[\\.\\d]+).*Safari/|Safari/?\\d+" , name : "Safari" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Dorado WAP-Browser[/ ](\\d+[\\.\\d]+)" , name : "Dorado" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "NetSurf(?:/(\\d+[\\.\\d]+))?" , name : "NetSurf" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Uzbl" , name : "Uzbl" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "SimpleBrowser" , name : "SimpleBrowser" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Zvu(?:/(\\d+[\\.\\d]+))?" , name : "Zvu" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "GOGGalaxyClient/(\\d+[\\.\\d]+)?" , name : "GOG Galaxy" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "WAP Browser/MAUI|(?:\\w+)?Maui Wap Browser|MAUI[- ]Browser" , name : "MAUI WAP Browser" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "SP%20Browser/(\\d+[\\.\\d]+)" , name : "SP Browser" , version : Some ("$1") , category : None , url : None , producer : None , } ,] ;
pub static FEED_READERS : [Element ; 23usize] = [Element { regex : "Akregator(?:/(\\d+[\\.\\d]+))?" , name : "Akregator" , version : Some ("$1") , category : None , url : Some ("http://userbase.kde.org/Akregator") , producer : None , } , Element { regex : "Apple-PubSub(?:/(\\d+[\\.\\d]+))?" , name : "Apple PubSub" , version : Some ("$1") , category : None , url : Some ("https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/pubsub.1.html") , producer : None , } , Element { regex : "BashPodder" , name : "BashPodder" , version : Some ("") , category : None , url : Some ("http://lincgeek.org/bashpodder/") , producer : None , } , Element { regex : "Breaker/v([\\d\\.]+)" , name : "Breaker" , version : Some ("$1") , category : None , url : Some ("https://www.breaker.audio/") , producer : None , } , Element { regex : "Downcast/([\\d\\.]+)" , name : "Downcast" , version : Some ("$1") , category : None , url : Some ("http://downcastapp.com/") , producer : None , } , Element { regex : "FeedDemon(?:/(\\d+[\\.\\d]+))?" , name : "FeedDemon" , version : Some ("$1") , category : None , url : Some ("http://www.feeddemon.com/") , producer : None , } , Element { regex : "Feeddler(?:RSS|PRO)(?:[/ ](\\d+[\\.\\d]+))?" , name : "Feeddler RSS Reader" , version : Some ("$1") , category : None , url : Some ("http://www.chebinliu.com/projects/iphone/feeddler-rss-reader/") , producer : None , } , Element { regex : "QuiteRSS(?:[/ ](\\d+[\\.\\d]+))?" , name : "QuiteRSS" , version : Some ("$1") , category : None , url : Some ("https://quiterss.org") , producer : None , } , Element { regex : "gPodder/([\\d\\.]+)" , name : "gPodder" , version : Some ("$1") , category : None , url : Some ("http://gpodder.org/") , producer : None , } , Element { regex : "JetBrains Omea Reader(?:[/ ](\\d+[\\.\\d]+))?" , name : "JetBrains Omea Reader" , version : Some ("$1") , category : None , url : Some ("http://www.jetbrains.com/omea/reader/") , producer : None , } , Element { regex : "Liferea(?:[/ ](\\d+[\\.\\d]+))?" , name : "Liferea" , version : Some ("$1") , category : None , url : Some ("http://liferea.sf.net/") , producer : None , } , Element { regex : "(?:NetNewsWire|Evergreen.+MacOS)(?:[/ ](\\d+[\\.\\d]+))?" , name : "NetNewsWire" , version : Some ("$1") , category : None , url : Some ("http://netnewswireapp.com/") , producer : None , } , Element { regex : "NewsBlur (?:iPhone|iPad) App(?: v(\\d+[\\.\\d]+))?" , name : "NewsBlur Mobile App" , version : Some ("$1") , category : None , url : Some ("http://www.newsblur.com") , producer : None , } , Element { regex : "NewsBlur(?:/(\\d+[\\.\\d]+))" , name : "NewsBlur" , version : Some ("$1") , category : None , url : Some ("http://www.newsblur.com") , producer : None , } , Element { regex : "newsbeuter(?:[/ ](\\d+[\\.\\d]+))?" , name : "Newsbeuter" , version : Some ("$1") , category : None , url : Some ("http://www.newsbeuter.org/") , producer : None , } , Element { regex : "PritTorrent/([\\d\\.]+)" , name : "PritTorrent" , version : Some ("$1") , category : None , url : Some ("http://bitlove.org") , producer : None , } , Element { regex : "Pulp[/ ](\\d+[\\.\\d]+)" , name : "Pulp" , version : Some ("$1") , category : None , url : Some ("http://www.acrylicapps.com/pulp/") , producer : None , } , Element { regex : "ReadKit(?:[/ ](\\d+[\\.\\d]+))?" , name : "ReadKit" , version : Some ("$1") , category : None , url : Some ("http://readkitapp.com/") , producer : None , } , Element { regex : "Reeder[/ ](\\d+[\\.\\d]+)" , name : "Reeder" , version : Some ("$1") , category : None , url : Some ("http://reederapp.com/") , producer : None , } , Element { regex : "RSSBandit(?:[/ ](\\d+[\\.\\d]+))?" , name : "RSS Bandit" , version : Some ("$1") , category : None , url : Some ("http://www.rssbandit.org)") , producer : None , } , Element { regex : "RSS Junkie(?:[/ ](\\d+[\\.\\d]+))?" , name : "RSS Junkie" , version : Some ("$1") , category : None , url : Some ("https://play.google.com/store/apps/details?id=com.bitpowder.rssjunkie") , producer : None , } , Element { regex : "RSSOwl(?:[/ ](\\d+[\\.\\d]+))?" , name : "RSSOwl" , version : Some ("$1") , category : None , url : Some ("http://www.rssowl.org/") , producer : None , } , Element { regex : "Stringer" , name : "Stringer" , version : Some ("") , category : None , url : Some ("https://github.com/swanson/stringer") , producer : None , } ,] ;
pub static LIBRARIES : [Element ; 32usize] = [Element { regex : "Wget(?:/(\\d+[\\.\\d]+))?" , name : "Wget" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Guzzle(?:/(\\d+[\\.\\d]+))?" , name : "Guzzle (PHP HTTP Client)" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:lib)?curl(?:/(\\d+[\\.\\d]+))?" , name : "curl" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "python-requests(?:/(\\d+[\\.\\d]+))?" , name : "Python Requests" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Python-urllib(?:/?(\\d+[\\.\\d]+))?" , name : "Python urllib" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Java(?:/?(\\d+[\\.\\d]+))?" , name : "Java" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:perlclient|libwww-perl)(?:/?(\\d+[\\.\\d]+))?" , name : "Perl" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "okhttp/([\\d\\.]+)" , name : "OkHttp" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "HTTP_Request2(?:/(\\d+[\\.\\d]+))?" , name : "HTTP_Request2" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "HTTP_Request2(?:/(\\d+[\\.\\d]+))?" , name : "HTTP_Request2" , version : Some ("$1") , category : None , url : Some ("http://pear.php.net/package/http_request2") , producer : None , } , Element { regex : "Mechanize(?:/(\\d+[\\.\\d]+))?" , name : "Mechanize" , version : Some ("$1") , category : None , url : Some ("http://github.com/sparklemotion/mechanize/") , producer : None , } , Element { regex : "aiohttp(?:/(\\d+[\\.\\d]+))?" , name : "aiohttp" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Google-HTTP-Java-Client(?:/(\\d+[\\.\\d\\w-]+))?" , name : "Google HTTP Java Client" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "WWW-Mechanize(?:/(\\d+[\\.\\d]+))?" , name : "WWW-Mechanize" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Faraday(?: v(\\d+[\\.\\d]+))?" , name : "Faraday" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Go-http-client|Go )/?(?:(\\d+[\\.\\d]+))?(?: package http)?" , name : "Go-http-client" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "urlgrabber(?:/(\\d+[\\.\\d]+))?" , name : "urlgrabber (yum)" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "libdnf(?:/(\\d+[\\.\\d]+))?" , name : "libdnf" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "HTTPie(?:/(\\d+[\\.\\d]+))?" , name : "HTTPie" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "rest-client/(\\d+[\\.\\d]+).*ruby" , name : "REST Client for Ruby" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "RestSharp/(\\d+[\\.\\d]+)" , name : "RestSharp" , version : Some ("$1") , category : None , url : Some ("http://restsharp.org/") , producer : None , } , Element { regex : "scalaj-http/(\\d+[\\.\\d]+)" , name : "ScalaJ HTTP" , version : Some ("$1") , category : None , url : Some ("https://github.com/scalaj/scalaj-http") , producer : None , } , Element { regex : "REST::Client/(\\d+)" , name : "Perl REST::Client" , version : Some ("$1") , category : None , url : Some ("https://metacpan.org/pod/REST::Client") , producer : None , } , Element { regex : "node-fetch/(\\d+[\\.\\d]+)" , name : "Node Fetch" , version : Some ("$1") , category : None , url : Some ("https://github.com/node-fetch/node-fetch") , producer : None , } , Element { regex : "ReactorNetty/(\\d+[\\.\\d]+)" , name : "ReactorNetty" , version : Some ("$1") , category : None , url : Some ("https://github.com/reactor/reactor-netty") , producer : None , } , Element { regex : "PostmanRuntime(?:/(\\d+[\\.\\d]+))?" , name : "Postman Desktop" , version : Some ("$1") , category : None , url : Some ("https://github.com/postmanlabs/postman-runtime") , producer : None , } , Element { regex : "Jakarta Commons-HttpClient/([\\.\\d]+)" , name : "Jakarta Commons HttpClient" , version : Some ("$1") , category : None , url : Some ("https://hc.apache.org/httpclient-3.x") , producer : None , } , Element { regex : "WinHttp.WinHttpRequest.+([\\.\\d]+)" , name : "WinHttp WinHttpRequest" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Embarcadero URI Client/([\\.\\d]+)" , name : "Embarcadero URI Client" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Mikrotik/([\\.\\d]+)" , name : "Mikrotik Fetch" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "GRequests(?:/(\\d+[\\.\\d]+))?" , name : "GRequests" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "akka-http/([\\.\\d]+)" , name : "Akka HTTP" , version : Some ("$1") , category : None , url : None , producer : None , } ,] ;
pub static MEDIAPLAYERS : [Element ; 25usize] = [Element { regex : "Audacious(?:[ /]([\\d\\.]+))?" , name : "Audacious" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Banshee(?:[ /]([\\d\\.]+))?" , name : "Banshee" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Boxee(?:[ /]([\\d\\.]+))?" , name : "Boxee" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Clementine(?:[ /]([\\d\\.]+))?" , name : "Clementine" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Deezer(?:/([\\d\\.]+))?" , name : "Deezer" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "iTunes(?:-iPhone|-iPad)?(?:/([\\d\\.]+))?" , name : "iTunes" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "FlyCast(?:/([\\d\\.]+))?" , name : "FlyCast" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "foobar2000(?:/([\\d\\.]+))?" , name : "Foobar2000" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "MediaMonkey(?:[ /](\\d+[\\.\\d]+))?" , name : "MediaMonkey" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Miro(?:/(\\d+[\\.\\d]+))?" , name : "Miro" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "NexPlayer(?:/(\\d+[\\.\\d]+))?" , name : "NexPlayer" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Nightingale(?:/([\\d\\.]+))?" , name : "Nightingale" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "QuickTime(?:(?:(?:.+qtver=)|(?:(?: E-)?[\\./]))([\\d\\.]+))?" , name : "QuickTime" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Songbird(?:/([\\d\\.]+))?" , name : "Songbird" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "SubStream(?:/([\\d\\.]+))?" , name : "SubStream" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Sonos/([\\d\\.]+)?" , name : "SONOS" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Lib)?VLC(?:/([\\d\\.]+))?" , name : "VLC" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Winamp(?:MPEG)?(?:/(\\d+[\\.\\d]+))?" , name : "Winamp" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Windows-Media-Player|NSPlayer)(?:/(\\d+[\\.\\d]+))?" , name : "Windows Media Player" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "XBMC(?:/([\\d\\.]+))?" , name : "XBMC" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Kodi(?:/([\\d\\.]+))?" , name : "Kodi" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "stagefright(?:/([\\d\\.]+))?" , name : "Stagefright" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "GoogleChirp(?:/(\\d+[\\.\\d]+))?" , name : "Google Podcasts" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Music Player Daemon (?:(\\d+[\\.\\d]+))?" , name : "Music Player Daemon" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "mpv (?:(\\d+[\\.\\d]+))?" , name : "mpv" , version : Some ("$1") , category : None , url : None , producer : None , } ,] ;
pub static MOBILE_APPS : [Element ; 128usize] = [Element { regex : "AndroidDownloadManager(?:[ /]([\\d\\.]+))?" , name : "AndroidDownloadManager" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Apple)?News(?:[ /][\\d\\.]+)? Version(?:[ /]([\\d\\.]+))?" , name : "Apple News" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "bPod" , name : "bPod" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "MessengerLiteForiOS.(?:FBAV)(?:[ /]([\\d\\.]+))?" , name : "Facebook Messenger Lite" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:MessengerForiOS|MESSENGER).(?:FBAV)(?:[ /]([\\d\\.]+))?" , name : "Facebook Messenger" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:FBAV|com.facebook.katana)(?:[ /]([\\d\\.]+))?" , name : "Facebook" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:FBAN|FBSV|FBID|FBBV)/" , name : "Facebook" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "FeedR(?:/([\\d\\.]+))?" , name : "FeedR" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "com.google.android.apps.searchlite" , name : "Google Go" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "com.google.android.apps.magazines" , name : "Google Play Newsstand" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "com.google.GooglePlus" , name : "Google Plus" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "MicroMessenger/([^; ]+)" , name : "WeChat" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "WeChatShareExtensionNew/([\\d\\.]+)" , name : "WeChat Share Extension" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "DingTalk/([0-9\\.]+)" , name : "DingTalk" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : ".*__weibo__([0-9\\.]+)__" , name : "Sina Weibo" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Pinterest(?: for (?:Android|iOS))?(?:/([\\d\\.]+))?" , name : "Pinterest" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Podcatcher Deluxe" , name : "Podcatcher Deluxe" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "com.google.android.youtube(?:/([\\d\\.]+))?" , name : "YouTube" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "com.netflix.mediaclient(?:/(\\d+\\.[\\d\\.]+))?" , name : "Netflix" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "([^/]+)/(\\d+(?:\\.\\d+)+) \\((?:iPhone|iPad); iOS [0-9\\.]+; Scale/[0-9\\.]+\\)" , name : "$1" , version : Some ("$2") , category : None , url : None , producer : None , } , Element { regex : "WhatsApp(?:[ /]([\\d\\.]+))?" , name : "WhatsApp" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Line(?:[ /]([\\d\\.]+))" , name : "Line" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Instacast(?:HD)?/(\\d\\.[\\d\\.abc]+) CFNetwork/([\\d\\.]+) Darwin/([\\d\\.]+)" , name : "Instacast" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Podcasts/([\\d\\.]+)" , name : "Podcasts" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Pocket Casts(?:, (?:Android|iOS) v([\\d\\.]+))?" , name : "Pocket Casts" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Podcat/([\\d\\.]+)" , name : "Podcat" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "BeyondPod" , name : "BeyondPod" , version : None , category : None , url : None , producer : None , } , Element { regex : "AntennaPod/?([\\d\\.]+)?" , name : "AntennaPod" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Overcast/([\\d\\.]+)" , name : "Overcast" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:CastBox|fm.castbox.audiobook.radio.podcast)/?([\\d\\.]+)?" , name : "CastBox" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Player FM" , name : "Player FM" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Podkicker(?: Pro)?/([\\d\\.]+)" , name : "Podkicker" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "PodcastRepublic/([\\d\\.]+)" , name : "Podcast Republic" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Castro/(\\d+)" , name : "Castro" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Castro 2 ([\\d\\.]+)/[\\d]+ Like iTunes" , name : "Castro 2" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Castro 2" , name : "Castro 2" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "DoggCatcher" , name : "DoggCatcher" , version : None , category : None , url : None , producer : None , } , Element { regex : "PodcastAddict/v([\\d]+)" , name : "Podcast & Radio Addict" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Podcat(?:%202)?/([\\d]+) CFNetwork" , name : "Podcat" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "iCatcher[^\\d]+([\\d\\.]+)" , name : "iCatcher" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "YelpApp/([\\d\\.]+)" , name : "Yelp Mobile" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "jp.co.yahoo.android.yjtop/([\\d\\.]+)" , name : "Yahoo! Japan" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "RSSRadio/([\\d]+)?" , name : "RSSRadio" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "SogouSearch Android[\\d\\.]+ version([\\d\\.]+)?" , name : "SogouSearch App" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "NewsArticle/([\\d\\.]+)?" , name : "NewsArticle App" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "tieba/([\\d\\.]+)?" , name : "tieba" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "com\\.douban\\.group/([\\d\\.]+)?" , name : "douban App" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "BingWeb/([\\d\\.]+)?" , name : "BingWebApp" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:com.google.GoogleMobile|GSA)/([\\d\\.]+)?" , name : "Google Search App" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Flipboard/([\\d\\.]+)?" , name : "Flipboard App" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Instagram[ /]([\\d\\.]+)?" , name : "Instagram App" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "baiduboxapp/([\\d\\.]+)?" , name : "Baidu Box App" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Crosswalk(?!.*(?:Streamy|QwantMobile))/([\\d\\.]+)?" , name : "CrosswalkApp" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Twitter for iPhone[/]?([\\d\\.]+)?" , name : "Twitter" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Twitter/([\\d\\.]+)" , name : "Twitter" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "TwitterAndroid[/]?([\\d\\.]+)?" , name : "Twitter" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "TopBuzz/([\\d\\.]+)" , name : "TopBuzz" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Snapchat/([\\d\\.]+)" , name : "Snapchat" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "UnityPlayer/([\\d\\.]+)" , name : "UnityPlayer" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "UCURSOS/v([\\d\\.]+)" , name : "U-Cursos" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "HeyTapBrowser/([\\d\\.]+)" , name : "HeyTapBrowser" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "RobloxApp/([\\d\\.]+)" , name : "Roblox" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Viber/([\\d\\.]+)" , name : "Viber" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Siri/1" , name : "Siri" , version : Some ("1.0") , category : None , url : None , producer : None , } , Element { regex : "LinkedIn(?:App)?(?:/([\\d\\.]+))?" , name : "LinkedIn" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Instapaper/([\\d\\.]+)" , name : "Instapaper" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Keeper/([\\d\\.]+)" , name : "Keeper Password Manager" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Skyeng Teachers/([\\d\\.]+)" , name : "Skyeng Teachers" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Kik/([\\d\\.]+) \\(Android" , name : "Kik" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Procast/?([\\d\\.]+)?" , name : "Procast" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "DeviantArt/([\\d\\.]+)" , name : "DeviantArt" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Discord/([\\d\\.]+)" , name : "Discord" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Covenant%20Eyes/([\\d\\.]+)" , name : "Covenant Eyes" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "HP%20Smart/([\\d\\.]+)" , name : "HP Smart" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Bitsboard/([\\d\\.]+)" , name : "Bitsboard" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Betbull/([\\d\\.]+)" , name : "BetBull" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "U-Cursos/([\\d\\.]+)" , name : "U-Cursos" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "1PasswordThumbs/([\\d\\.]+)" , name : "1Password" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Microsoft Office )?(Access|Excel|OneDrive for Business|OneNote|PowerPoint|Project|Publisher|Visio|Word)[ /]([\\d\\.]+)" , name : "Microsoft Office $1" , version : Some ("$2") , category : None , url : None , producer : None , } , Element { regex : "OneDriveiOSApp/([\\d\\.]+)" , name : "Microsoft OneDrive" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Microsoft Office Mobile/([\\d\\.]+)" , name : "Microsoft Office Mobile" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "OC/([\\d\\.]+) \\(Skype for Business\\)" , name : "Skype for Business" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "TikTok[/ ](\\d+\\.(?:[\\.\\d]+))?" , name : "TikTok" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "NAVER/(\\d+[\\.\\d]+) CFNetwork" , name : "Naver" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Copied/(\\d+[\\.\\d]+) CFNetwork" , name : "Copied" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Pic%20Collage/(\\d+[\\.\\d]+) CFNetwork" , name : "Pic Collage" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Papers/(\\d+[\\.\\d]+) CFNetwork" , name : "Papers" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "RoboForm/(\\d+[\\.\\d]+) CFNetwork" , name : "RoboForm" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Slack/(\\d+[\\.\\d]+) CFNetwork" , name : "Slack" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "KAKAOTALK (\\d+\\.(?:[\\.\\d]+))?" , name : "KakaoTalk" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "ShopeeVN/([\\d\\.]+)" , name : "Shopee" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "SPORT1/([\\d\\.]+)" , name : "SPORT1" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Clovia/([\\d\\.]+)" , name : "Clovia" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "ShowMe/([\\d\\.]+)" , name : "ShowMe" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Wattpad/([\\d\\.]+)" , name : "Wattpad" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "WSJ/([\\d\\.]+)" , name : "The Wall Street Journal" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "WH%20Questions/([\\d\\.]+)" , name : "WH Questions" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "whisper/([\\d\\.]+)" , name : "Whisper" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Opal/([\\d\\.]+)" , name : "Opal Travel" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Zalo/([\\d\\.]+)" , name : "Zalo" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Yandex/([\\d\\.]+)" , name : "Yandex" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "Zoho%20Chat/([\\d\\.]+)" , name : "Zoho Chat" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Thunder/(\\d+[\\.\\d]+)" , name : "Thunder" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "CGNBrowser/(\\d+[\\.\\d]+)" , name : "CGN" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Podbean/.+App (\\d+[\\.\\d]+)" , name : "Podbean" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "AlexaMediaPlayer/(\\d+[\\.\\d]+)" , name : "Alexa Media Player" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "TuneIn Radio Pro(?:[^/]+)?/(\\d+[\\.\\d]+)" , name : "TuneIn Radio Pro" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "TuneIn Radio(?:[^/]+)?/(\\d+[\\.\\d]+)" , name : "TuneIn Radio" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Podcaster/(\\d+[\\.\\d]+)" , name : "Podcaster" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Swoot/(\\d+[\\.\\d]+)" , name : "Swoot" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "RadioPublic/android-(\\d+[\\.\\d]+)" , name : "RadioPublic" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Podimo/(\\d+[\\.\\d]+)" , name : "Podimo" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "com.evolve.podcast/(\\d+[\\.\\d]+)" , name : "Evolve Podcast" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : " Rocket.Chat\\+?/(\\d+[\\.\\d]+)" , name : "Rocket Chat" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "^Pandora Audio.+Android" , name : "Pandora" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "^NPROneAndroid" , name : "NPR One" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "^WirtschaftsWoche-iOS-(\\d+[\\.\\d]+)" , name : "Wirtschafts Woche" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "^Outlook-iOS/.+\\((\\d+[\\.\\d]+)\\)$" , name : "Microsoft Outlook" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "^TVirl/(\\d+[\\.\\d]+)" , name : "TVirl" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "2?chMate/(\\d+[\\.\\d]+)" , name : "ChMate" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "2tch/(\\d+[\\.\\d]+)" , name : "2tch" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Ciisaa/(\\d+[\\.\\d]+)" , name : "Ciisaa" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "BB2C (\\d+[\\.\\d]+)" , name : "BB2C" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "twinkle/(\\d+[\\.\\d]+)" , name : "twinkle" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "JaneStyle_iOS/(\\d+[\\.\\d]+)" , name : "JaneStyle" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "BNC/.+\\(Android (\\d+[\\.\\d]+)\\)" , name : "Binance" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "ru\\.mail\\.my/(\\d+[\\.\\d]+)" , name : "My World" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "OK(?:Android|iOS)/([\\d\\.]+)" , name : "Odnoklassniki" , version : Some ("$1") , category : None , url : None , producer : None , } ,] ;
pub static PIM : [Element ; 14usize] = [Element { regex : "Outlook-Express(?:/(\\d+[\\.\\d]+))?" , name : "Outlook Express" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Microsoft Outlook(?:[/ ](\\d+[\\.\\d]+))?" , name : "Microsoft Outlook" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:Thunderbird|Icedove|Shredder)(?:/(\\d+[\\.\\d]+))?" , name : "Thunderbird" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Airmail(?: (\\d+[\\.\\d]+))?" , name : "Airmail" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Lotus-Notes(?:/(\\d+[\\.\\d]+))?" , name : "Lotus Notes" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Barca(?:Pro)?(?:[/ ](\\d+[\\.\\d]+))?" , name : "Barca" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Postbox(?:[/ ](\\d+[\\.\\d]+))?" , name : "Postbox" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "MailBar(?:[/ ](\\d+[\\.\\d]+))?" , name : "MailBar" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "The Bat!(?: Voyager)?(?:[/ ](\\d+[\\.\\d]+))?" , name : "The Bat!" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "DAVdroid(?:/(\\d+[\\.\\d]+))?" , name : "DAVdroid" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "(?:SeaMonkey|Iceape)(?:/(\\d+[\\.\\d]+))?" , name : "SeaMonkey" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "Live5ch/(\\d+[\\.\\d]+)" , name : "Live5ch" , version : Some ("$1") , category : None , url : None , producer : None , } , Element { regex : "JaneView/" , name : "JaneView" , version : Some ("") , category : None , url : None , producer : None , } , Element { regex : "BathyScaphe/" , name : "BathyScaphe" , version : Some ("") , category : None , url : None , producer : None , } ,] ;
pub static CAMERAS : [(& str , Brand) ; 2usize] = [("Samsung" , Brand { regex : "EK-G[CN][0-9]{3}" , device : Some ("camera") , model : None , models : Some (& [Model { regex : "EK-GN120" , model : "Galaxy NX" , } , Model { regex : "EK-GC100" , model : "Galaxy Camera" , } , Model { regex : "EK-GC110" , model : "Galaxy Camera WiFi only" , } , Model { regex : "EK-GC200" , model : "Galaxy Camera 2" , } , Model { regex : "EK-GC([0-9]{3})" , model : "Galaxy Camera $1" , } ,]) , }) , ("Nikon" , Brand { regex : "Coolpix S800c" , device : Some ("camera") , model : Some ("Coolpix S800c") , models : None , }) ,] ;
pub static CAR_BROWSERS : [(& str , Brand) ; 3usize] = [("Tesla" , Brand { regex : "(?:Tesla/[0-9.]+|QtCarBrowser)" , device : Some ("car browser") , model : None , models : Some (& [Model { regex : "QtCarBrowser" , model : "Model S" , } , Model { regex : "Tesla/[0-9.]+" , model : "" , } ,]) , }) , ("MAC AUDIO" , Brand { regex : "Mac Audio Spro" , device : Some ("car browser") , model : None , models : Some (& [Model { regex : "Spro" , model : "S Pro" , } ,]) , }) , ("Topway" , Brand { regex : "sp9853i_1h10_vmm" , device : Some ("car browser") , model : None , models : Some (& [Model { regex : "sp9853i_1h10_vmm" , model : "TS9" , } ,]) , }) ,] ;
pub static CONSOLES : [(& str , Brand) ; 6usize] = [("OUYA" , Brand { regex : "OUYA" , device : Some ("console") , model : Some ("OUYA") , models : None , }) , ("Sony" , Brand { regex : "PlayStation (3|4 Pro|4|Portable|Vita)" , device : Some ("console") , model : Some ("PlayStation $1") , models : None , }) , ("Microsoft" , Brand { regex : "Xbox" , device : Some ("console") , model : None , models : Some (& [Model { regex : "Xbox Series X" , model : "Xbox Series X" , } , Model { regex : "Xbox One X" , model : "Xbox One X" , } , Model { regex : "Xbox One" , model : "Xbox One" , } , Model { regex : "XBOX_ONE_ED" , model : "Xbox One S" , } , Model { regex : "Xbox" , model : "Xbox 360" , } ,]) , }) , ("Sega" , Brand { regex : "Dreamcast" , device : Some ("console") , model : Some ("Dreamcast") , models : None , }) , ("Archos" , Brand { regex : "Archos.*GAMEPAD([2]?)" , device : Some ("console") , model : Some ("Gamepad $1") , models : None , }) , ("Nintendo" , Brand { regex : "Nintendo (([3]?DS[i]?)|Wii[U]?|Switch)" , device : Some ("console") , model : Some ("$1") , models : None , }) ,] ;
pub static MOBILES : [(& str , Brand) ; 961usize] = [("Modecom" , Brand { regex : "Modecom|Free(?:Way )?Tab|xino z[\\d]+ x[\\d]+" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "xino Z([\\d]+) X([\\d]+)" , model : "Xino Z$1 X$2" , } , Model { regex : "FreeTab[ _\\-]?([^/;]+)? Build" , model : "FreeTab $1" , } , Model { regex : "FreeTab[ _\\-]?((?!Build)[^);/ ]+)?" , model : "FreeTab $1" , } , Model { regex : "FreeWay Tab[ _\\-]?([^/;]+) Build" , model : "FreeWay Tab $1" , } , Model { regex : "FreeWay Tab[ _\\-]?((?!Build)[^);/ ]+)" , model : "FreeWay Tab $1" , } ,]) , }) , ("OnePlus" , Brand { regex : "(?:du_)?ONEPLUS|(?:A0001|A200[135]|AC200[13]|A300[03]|A3010|A5000|A600[03]|A601[03]|BE201[1235]|BE202[5689]|E100[135]|GM191[03517]|GM190[0135]|GM192[05]|HD191[013]|HD190[01357]|HD1925|IN201[013579]|IN202[0135]|KB200[01357]|LE2117|LE212[03])(?: Build|\\))" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "AC200[13](?:[);/ ]|$)" , model : "Nord 5G" , } , Model { regex : "BE2012(?:[);/ ]|$)" , model : "Clover" , } , Model { regex : "BE201[135](?:[);/ ]|$)" , model : "Nord N100" , } , Model { regex : "BE2025(?:[);/ ]|$)" , model : "Nord N10" , } , Model { regex : "BE202[69](?:[);/ ]|$)" , model : "Nord N10 5G" , } , Model { regex : "BE2028(?:[);/ ]|$)" , model : "Nord N10 Lite" , } , Model { regex : "IN202[0135](?:[);/ ]|$)" , model : "8 Pro" , } , Model { regex : "KB2000(?:[);/ ]|$)" , model : "8T" , } , Model { regex : "(?:IN201[01357]|OnePlus 8)(?:[);/ ]|$)" , model : "8" , } , Model { regex : "IN2019(?:[);/ ]|$)" , model : "8 5G UW" , } , Model { regex : "LE2117(?:[);/ ]|$)" , model : "9" , } , Model { regex : "LE212[03](?:[);/ ]|$)" , model : "9 Pro" , } , Model { regex : "(?:GM191[01357]|OnePlus 7 Pro)(?:[);/ ]|$)" , model : "7 Pro" , } , Model { regex : "GM190[0135](?:[);/ ]|$)" , model : "7" , } , Model { regex : "HD190[01357](?:[);/ ]|$)" , model : "7T" , } , Model { regex : "(?:HD191[013]|OnePlus 7T Pro)(?:[);/ ]|$)" , model : "7T Pro" , } , Model { regex : "(?:HD1925|GM192[05])(?:[);/ ]|$)" , model : "7T Pro 5G" , } , Model { regex : "KB200[1357](?:[);/ ]|$)" , model : "8T" , } , Model { regex : "A0001(?:[);/ ]|$)" , model : "One" , } , Model { regex : "A200[135]|OnePlus2" , model : "2" , } , Model { regex : "E100[135](?:[);/ ]|$)" , model : "X" , } , Model { regex : "A3010|OnePlus3T" , model : "3T" , } , Model { regex : "A300[03]|OnePlus3" , model : "3" , } , Model { regex : "A5010|OnePlus[ ]?5T" , model : "5T" , } , Model { regex : "A5000|OnePlus5" , model : "5" , } , Model { regex : "A600[03]|OnePlus6" , model : "6" , } , Model { regex : "A601[03](?:[);/ ]|$)" , model : "6T" , } , Model { regex : "(?:du_)?ONEPLUS ?([^;/]+) Build" , model : "$1" , } ,]) , }) , ("IUNI" , Brand { regex : "IUNI[ _]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "IUNI[ _](U3|i1|N1)" , model : "$1" , } ,]) , }) , ("LAIQ" , Brand { regex : "LAIQ" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(Glam|New York|Dubai)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("TechPad" , Brand { regex : "Tech ?pad|XTAB[ _-]|Dual C1081HD|S813G" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "S813G" , model : "S813G" , } , Model { regex : "TechPad10QC" , model : "10QC" , } , Model { regex : "TechPad_10xx" , model : "10XX" , } , Model { regex : "TechPad703" , model : "703" , } , Model { regex : "TechPad[_ ](10Y|9x|i700)" , model : "$1" , } , Model { regex : "TechPad[_ ]3Gx" , model : "3Gx" , } , Model { regex : "Dual C1081HD" , model : "XTAB C1081HD" , } , Model { regex : "XTAB[ _-]([^/;]+) Build" , model : "XTAB $1" , } , Model { regex : "Tech ?pad[ _-]([^/;)]+)(?: Build|[;)])" , model : "$1" , } ,]) , }) , ("VKworld" , Brand { regex : "(?:(?:VK700)-MAX|VK700 Pro|T5SE|VK700X|vk6050|vk6735|vk700)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(VK700)-MAX(?:[);/ ]|$)" , model : "$1 Max" , } , Model { regex : "(VK700) Pro(?:[);/ ]|$)" , model : "$1 Pro" , } , Model { regex : "T5SE(?:[);/ ]|$)" , model : "T5 SE" , } , Model { regex : "VK(700X|6050|6735|700)(?:[);/ ]|$)" , model : "VK$1" , } ,]) , }) , ("TurboPad" , Brand { regex : "Turbopad[-_ ]?(72[34]|80[23]|912|101[456])(?:NEW)?(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Dopod" , Brand { regex : "Dopod(?: )?([a-z0-9]+)" , device : Some ("feature phone") , model : Some ("$1") , models : None , }) , ("Readboy" , Brand { regex : "Readboy[ _-]" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "Readboy[ _-]([^;/)]+)(?: Build|[;)])" , model : "$1" , } ,]) , }) , ("Artel" , Brand { regex : "Artel[_ ]|\\w+_ARTEL_\\w+|GAP YOQ(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "GAP YOQ(?:[);/ ]|$)" , model : "Gap Yo Q" , } , Model { regex : "Artel[_ ](Quadro(?: Pro)?|Tesla|Air|Tomchi|Premium|U3_4G|Z5|Sentinel (?:X 8G|X D5|X)|T10)" , model : "$1" , } , Model { regex : "Artel[_ ]Komi3" , model : "Komi 3" , } , Model { regex : "Artel[_ ](Star|Nova|Connect|Choice|Style)" , model : "$1" , } , Model { regex : "(?:\\w+_)?ARTEL_([FVM]5|X[45])_\\w+" , model : "$1" , } ,]) , }) , ("KRONO" , Brand { regex : "NET1100|NET_(?:TITAN|VOLT)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "NET1100" , model : "NET 1100" , } , Model { regex : "NET_(TITAN|VOLT)" , model : "NET $1" , } ,]) , }) , ("Beeline" , Brand { regex : "Beeline" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Beeline[_ ]Pro[_ ]([2436])" , model : "Pro $1" , } , Model { regex : "Tab (Fast|Pro)" , model : "Tab $1" , } , Model { regex : "Tab ([0-9])" , model : "Tab $1" , } , Model { regex : "Tab" , model : "Tab" , } , Model { regex : "E([67]00)" , model : "E$1" , } , Model { regex : "(?:Beeline[_ ])?Smart[ _]?([0-9])" , model : "Smart $1" , } , Model { regex : "Smart Dual" , model : "Smart Dual" , } , Model { regex : "(?:Beeline[_ ])?Fast[_ ]2(?:[);/ ]|$)" , model : "Fast 2" , } , Model { regex : "Fast(?:[);/ ]|$)" , model : "Fast" , } ,]) , }) , ("EWIS" , Brand { regex : "OCTA T720Q(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("Octa T720Q") , models : None , }) , ("Multilaser" , Brand { regex : "(?:Multilaser[ _](?:[FEGH])(?:[_ ](?:Pro|Max|Lite))?|MS50[LGXM]|M7[_-]3G[_-]PLUS|MS5\\.V2|MS45S_A6|ML([02]1|12)-M7s[- ]?Quad-?Core| ML01-M7-SD|MS45S|MS50S|MS60[XZ]|M7SQC_Plus|MS80X|MS40[GS]|MS55M|MS70|M7-3G QUAD CORE|M7sLite|MS50L?_4G|MS60F(?:_PLUS)?)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Multilaser[ _]G[_ ]Pro(?:[);/ ]|$)" , model : "G Pro" , } , Model { regex : "Multilaser[ _]F[_ ]Pro(?:[);/ ]|$)" , model : "F Pro" , } , Model { regex : "Multilaser[ _]G[_ ]Max(?:[);/ ]|$)" , model : "G Max" , } , Model { regex : "Multilaser[ _]G(?:[);/ ]|$)" , model : "G" , } , Model { regex : "Multilaser[ _]E[_ ]Lite(?:[);/ ]|$)" , model : "E Lite" , } , Model { regex : "Multilaser[ _]([FEH])(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "MS60F_PLUS(?:[);/ ]|$)" , model : "MS60F Plus" , } , Model { regex : "(MS50[LGXSM]|MS45S_A6|MS40[GS]|MS55M|MS60F|MS70|MS60[XZ]|MS45S|MS80X|MS50L?_4G|MS5\\.V2)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "M7[_-]3G[_-]PLUS(?:[);/ ]|$)" , model : "M7 3G Plus" , } , Model { regex : "M7SQC_PLUS(?:[);/ ]|$)" , model : "M7SQC Plus" , } , Model { regex : "M7-3G QUAD CORE(?:[);/ ]|$)" , model : "M7 3G Quad Core" , } , Model { regex : "ML([02]1|12)-M7s[- ]?Quad-?Core(?:[);/ ]|$)" , model : "ML$1-M7s Quad Core" , } , Model { regex : "M7sLite(?:[);/ ]|$)" , model : "M7s Lite" , } , Model { regex : "ML01-M7-SD(?:[);/ ]|$)" , model : "ML01-M7 SD" , } ,]) , }) , ("ELARI" , Brand { regex : "KidPhone4G(?:[);/ ]|$)" , device : Some ("wearable") , model : Some ("KidPhone 4G") , models : None , }) , ("Elenberg" , Brand { regex : "(TAB(?:101|728)[ _]3G|TAB7(?:[03]8|16|40|3[30]))(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Ritzviva" , Brand { regex : "(RITZVIVA[_ ]S500C)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("S500C") , models : None , }) , ("3GNET" , Brand { regex : "(?<!NetType/)3GNET[ _]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "3GNET[ _](U8|T800|U6s)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "3GNET[ _]T ?900" , model : "T900" , } ,]) , }) , ("Asano" , Brand { regex : "32LF7130S(?:[);/ ]|$)" , device : Some ("tv") , model : Some ("32LF7130S 32.0\"") , models : None , }) , ("Obi" , Brand { regex : "Obi[ _-]|(SJ1\\.5|SJ2\\.6|S400|S452\\+|S451|S453|S501|S502|S503\\+?|S507|S520|S550|S551|falcon)[ _]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "SJ2\\.6" , model : "SJ2.6" , } , Model { regex : "SJ1\\.5" , model : "SJ1.5" , } , Model { regex : "(?:Obi_)?S400" , model : "Skipper" , } , Model { regex : "(?:Obi_)?S451|falcon" , model : "Flacon" , } , Model { regex : "(?:Obi_)?S452\\+" , model : "Python" , } , Model { regex : "(?:Obi_)?S453" , model : "Fox" , } , Model { regex : "(?:Obi_)?S501" , model : "Wolverine" , } , Model { regex : "(?:Obi_)?S502" , model : "Leopard" , } , Model { regex : "(?:Obi_)?S503\\+" , model : "Boa Plus" , } , Model { regex : "(?:Obi_)?S503" , model : "Boa" , } , Model { regex : "(?:Obi_)?S507" , model : "Pelican" , } , Model { regex : "(?:Obi_)?S520" , model : "Octopus" , } , Model { regex : "(?:Obi_)?S550" , model : "Crane" , } , Model { regex : "(?:Obi_)?S551" , model : "Hornbill" , } , Model { regex : "(?:Obi_)?S454" , model : "Alligator" , } , Model { regex : "Obi[ _-]([^;/]+) Build" , model : "$1" , } , Model { regex : "Obi[ _-]([^;/)]+)(?:[;/)]|$)" , model : "$1" , } ,]) , }) , ("Venso" , Brand { regex : "(?:CX-508|CX-551|Reiv 500|Creon F5|Isprit U50|Isprit-U50-LTE)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Isprit U50|Isprit-U50-LTE" , model : "Isprit U50" , } , Model { regex : "(CX-508|CX-551|Reiv 500|Creon F5)" , model : "$1" , } ,]) , }) , ("Zync" , Brand { regex : "ZYNC|(Cloud Z5|Z1000|Z18|Z99|Z99[_ ][23]G|Z99|Z900[_ ]Plus|Z909|Z930[+]|Z930)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "(Z18| DuZ99al Core|Z99[_ ][23]G|Z99 Dual Core|Z99|Z900[_ ]Plus|Z909|Z930[+]|Z930)" , model : "$1" , } , Model { regex : "(Z1000[^/;]+)Build" , model : "$1" , } , Model { regex : "Cloud (Z5)" , model : "Cloud $1" , } , Model { regex : "ZYNC Cloud[ _]([^;]+)Build" , model : "Cloud $1" , } , Model { regex : "ZYNC[ _]([^;]+)Build" , model : "$1" , } ,]) , }) , ("OASYS" , Brand { regex : "(TEG9300)(?:[);/ ]|$)" , device : Some ("peripheral") , model : Some ("$1") , models : None , }) , ("Starway" , Brand { regex : "Andromeda[ _]S(707|84[05]|850|8)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("Andromeda S$1") , models : None , }) , ("Ordissimo" , Brand { regex : "(LeNumero1)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Krüger&Matz" , Brand { regex : "Kruger[ _&]Matz|KrugerMatz[ _]|FLOW ?5PLUS|FLOW_5|FLOW7|FLOW6(?:S|Lite)|DRIVE[_ ]6S?|MOVE8mini|MOVE_|LIVE_6plus|LIVE 5 PLUS|LIVE4_KM043[89]|LIVE 7S|KM(?:106[67]|1065G|0701_1|0702|0805_1)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "MOVE8mini" , model : "MOVE 8 Mini" , } , Model { regex : "MOVE_6_mini" , model : "MOVE 6 Mini" , } , Model { regex : "MOVE[_ ]([78]|6S)" , model : "MOVE $1" , } , Model { regex : "DRIVE 4 mini LTE" , model : "DRIVE 4 mini LTE" , } , Model { regex : "DRIVE[ _]([456][S]?)(?:[);/ ]|$)" , model : "DRIVE $1" , } , Model { regex : "FLOW ?5PLUS(?:[);/ ]|$)" , model : "FLOW 5 Plus" , } , Model { regex : "FLOW6Lite(?:[);/ ]|$)" , model : "FLOW 6 Lite" , } , Model { regex : "FLOW[ _]?([4-7][S]?)(?:[);/ ]|$)" , model : "FLOW $1" , } , Model { regex : "LIVE4_(KM043[89])(?:[);/ ]|$)" , model : "LIVE 4 $1" , } , Model { regex : "KrugerMatz_LIVE4(?:[);/ ]|$)" , model : "LIVE 4" , } , Model { regex : "_LIVE5_(KM0450)(?:[);/ ]|$)" , model : "LIVE 5 $1" , } , Model { regex : "LIVE 5 PLUS(?:[);/ ]|$)" , model : "LIVE 5 Plus" , } , Model { regex : "LIVE_6plus(?:[);/ ]|$)" , model : "LIVE 6 Plus" , } , Model { regex : "LIVE 7S(?:[);/ ]|$)" , model : "LIVE 7S" , } , Model { regex : "KM(106[67])(?:[);/ ]|$)" , model : "EAGLE $1 10.1\"" , } , Model { regex : "KM(1065G)(?:[);/ ]|$)" , model : "EAGLE $1 10.1\"" , } , Model { regex : "KM0(701)_1(?:[);/ ]|$)" , model : "EAGLE $1 7.1\"" , } , Model { regex : "KM0(805)_1(?:[);/ ]|$)" , model : "EAGLE $1 8.0\"" , } , Model { regex : "KM0(702)(?:[);/ ]|$)" , model : "EAGLE $1 7.0\"" , } ,]) , }) , ("Verico" , Brand { regex : "(RP-UDM0[12]A|RP-UDP05A|JO-UQM10A)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("Uni Pad $1") , models : None , }) , ("Spectralink" , Brand { regex : "(Versity 9640)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Unonu" , Brand { regex : "Unonu[ _-]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Unonu[ _-]([^;/]+) Build" , model : "$1" , } , Model { regex : "Unonu[ _-]?([^;/)]+)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Zenek" , Brand { regex : "Z5007|Z551[679]|Z6001" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Z5517" , model : "Leopardo" , } , Model { regex : "Z6001" , model : "Libelula" , } , Model { regex : "Z5007" , model : "Oso" , } , Model { regex : "Z5519" , model : "Pingûino" , } , Model { regex : "Z5516" , model : "Zebra" , } ,]) , }) , ("Kenxinda" , Brand { regex : "Three[_ ]Proofings[_ ]W([5-9])(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("Three Proofings W$1") , models : None , }) , ("Eagle" , Brand { regex : "Eagle[ _](Classic Pro|Elite|Gold)(?:[);/ ]|$)" , device : Some ("tv") , model : Some ("$1") , models : None , }) , ("Wintouch" , Brand { regex : "Q93S" , device : Some ("tablet") , model : Some ("Q93S") , models : None , }) , ("Coolpad" , Brand { regex : "(?:YL-)?Coolpad|(?:Cool_9S|1824-S0|8190Q|1831-A0|8676-[AM]01|CP8298_I00|CP3648A|CP8676_I0[23]|REVVLPLUS C3701A|VCR-[AI]0|C105-E0|C106-[79]| C106|MTS-T0|cp3705A[S]?|ORL-C0|DLS-E0|8298-(?:M02|A01)|5560S)(?:[);/ ]|$)|(8295|5860S) Build" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "VCR-[AI]0" , model : "Cool Play 6" , } , Model { regex : "1831-A0(?:[);/ ]|$)" , model : "Cool Play C7" , } , Model { regex : "REVVLPLUS C3701A" , model : "REVVL Plus" , } , Model { regex : "8190Q(?:[);/ ]|$)" , model : "8190Q" , } , Model { regex : "DLS-E0(?:[);/ ]|$)" , model : "N5" , } , Model { regex : "1824-S0(?:[);/ ]|$)" , model : "N5C" , } , Model { regex : "CP3705A[S]?(?:[);/ ]|$)" , model : "Legacy" , } , Model { regex : "CP3648A(?:[);/ ]|$)" , model : "Legacy S" , } , Model { regex : "MTS-T0(?:[);/ ]|$)" , model : "N2M" , } , Model { regex : "C106-[79](?:[);/ ]|$)" , model : "Cool 1" , } , Model { regex : "C105-E0(?:[);/ ]|$)" , model : "Cool S1" , } , Model { regex : "ORL-C0(?:[);/ ]|$)" , model : "Cool 9" , } , Model { regex : "Cool_9S(?:[);/ ]|$)" , model : "Cool 9S" , } , Model { regex : "5560S(?:[);/ ]|$)" , model : "Arise" , } , Model { regex : "(5860S|8295) Build" , model : "$1" , } , Model { regex : "CP8676_I02(?:[);/ ]|$)" , model : "Note 3" , } , Model { regex : "CP8676_I03(?:[);/ ]|$)" , model : "Note 3 Plus" , } , Model { regex : "CP8298_I00(?:[);/ ]|$)" , model : "Note 3 Lite" , } , Model { regex : "(8676-[AM]01|8298-(?:M02|A01))(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "(?:YL-)?Coolpad[ _\\-]?([^/;]+) Build" , model : "$1" , } , Model { regex : "(?:YL-)?Coolpad[ _\\-]?([a-z0-9\\-]+)" , model : "$1" , } ,]) , }) , ("Jesy" , Brand { regex : "Jesy_(J7)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("IKI Mobile" , Brand { regex : "(?:GO5_55|BLESS_GO55|BLESSPLUS|KF4Go|KF5bless)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "GO5_55" , model : "Go 5.5\"" , } , Model { regex : "BLESS_GO55" , model : "Bless Go 5.5\"" , } , Model { regex : "BLESSPLUS" , model : "Bless Plus" , } , Model { regex : "(KF4Go|KF5bless)" , model : "$1" , } ,]) , }) , ("iNew" , Brand { regex : "iNew|(?:V7A|V3 Plus|V3-?E|V3C|FIRE_Tab_6)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "V3C(?:[);/ ]|$)" , model : "V3C" , } , Model { regex : "V3-?E(?:[);/ ]|$)" , model : "V3-E" , } , Model { regex : "V3 Plus(?:[);/ ]|$)" , model : "V3 Plus" , } , Model { regex : "V7A(?:[);/ ]|$)" , model : "V7A" , } , Model { regex : "FIRE_Tab_6(?:[);/ ]|$)" , model : "Fire Tab 6" , } , Model { regex : "iNew[ -_]([^;/]+) Build" , model : "$1" , } ,]) , }) , ("Kogan" , Brand { regex : "Kogan" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Kogan[ _-]([^;/]+) Build" , model : "$1" , } , Model { regex : "Kogan[ _-]([a-z0-9_-]+)" , model : "$1" , } ,]) , }) , ("Kocaso" , Brand { regex : "Kocaso|M(?:729|7[357][026][hw]?|76[01236][bw]?|83[016]|8[567]0|1050s|106[012368]w?|1070|X736(?:-kit)?|X780)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "M729(?:[);/ ]|$)" , model : "M729" , } , Model { regex : "M(7[357][026])[hw]?(?:[);/ ]|$)" , model : "M$1" , } , Model { regex : "M(76[01236])[bw]?(?:[);/ ]|$)" , model : "M$1" , } , Model { regex : "MX780(?:[);/ ]|$)" , model : "MX780" , } , Model { regex : "M(83[016])(?:[);/ ]|$)" , model : "M$1" , } , Model { regex : "M(8[567]0)(?:[);/ ]|$)" , model : "M$1" , } , Model { regex : "M851(?:[);/ ]|$)" , model : "M851" , } , Model { regex : "M1050S(?:[);/ ]|$)" , model : "M1050s" , } , Model { regex : "M(106[012368])W?(?:[);/ ]|$)" , model : "M$1" , } , Model { regex : "M1070(?:[);/ ]|$)" , model : "M1070" , } , Model { regex : "MX736(?:-kit)?(?:[);/ ]|$)" , model : "MX736" , } , Model { regex : "MX780(?:[);/ ]|$)" , model : "MX780" , } , Model { regex : "Kocaso[ _\\-]?([^;/]+) Build" , model : "$1" , } , Model { regex : "Kocaso[ _\\-]?([a-z0-9_-]+)" , model : "$1" , } ,]) , }) , ("Manta Multimedia" , Brand { regex : "MSP950(1[245]|2[01])|MSP96017|MSP94501|MSP95009|MSP96002|MSP450[79]|((?<!/)MID713|MID(?:06[SN]|08[S]?|12|13|14|15|701|702|703|704|705(?:DC)?|706[AS]?|707|708|709|711|712|714|717|781|801|802|901|1001|1002|1003|1004(?: 3G)?|1005|1009|1010|7802|9701|9702))(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "((?<!/)MID713|MID(?:06[SN]|08[S]?|12|13|14|15|701|702|703|704|705(?:DC)?|706[AS]?|707|708|709|711|712|714|717|781|801|802|901|1001|1002|1003|1004(?: 3G)?|1005|1009|1010|7802|9701|9702))(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "MSP95012" , model : "Titano 1" , } , Model { regex : "MSP95014" , model : "Titano 3" , } , Model { regex : "MSP95015" , model : "Mezo 2" , } , Model { regex : "MSP95020" , model : "Rocky 2" , } , Model { regex : "MSP95021" , model : "Rocky 3 Pro" , } , Model { regex : "MSP96017" , model : "Forto 2" , } , Model { regex : "MSP96002" , model : "Forto 1" , } , Model { regex : "MSP94501" , model : "Easy Selfie" , } , Model { regex : "(MSP450[79]|MSP95009)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Coby Kyros" , Brand { regex : "(MID(?:1024|1125|1126|1045|1048|1060|1065|4331|7012|7015A?|7016|7022|7032|7035|7036|7042|7047|7048|7052|7065|7120|8024|8042|8048|8065|8125|8127|8128|9724|9740|9742))(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("True Slim" , Brand { regex : "(SSB-508[ED])(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Syrox" , Brand { regex : "(SYX-(?:T70[04]|T10[12]))(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Vertu" , Brand { regex : "Vertu[ ]?([a-z0-9]+)|(?:ASTER P|CONSTELLATION X)(?:[);/ ]|$)" , device : Some ("feature phone") , model : None , models : Some (& [Model { regex : "ASTER P(?:[);/ ]|$)" , model : "Aster P" , } , Model { regex : "CONSTELLATION X(?:[);/ ]|$)" , model : "Constellation X" , } , Model { regex : "Vertu[ ]?([a-z0-9]+)" , model : "$1" , } ,]) , }) , ("VGO TEL" , Brand { regex : "(?:Venture V(?:[278]|12)|VentureV10|Ocean[_ ][689]|Ocean9L)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Venture ?V([278]|1[02])(?:[);/ ]|$)" , model : "Venture V$1" , } , Model { regex : "Ocean[_ ]?([689]|9L)(?:[);/ ]|$)" , model : "Ocean $1" , } ,]) , }) , ("L-Max" , Brand { regex : "(?:Sapphire 8|Sapphire[76]|Mega plus[23])(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Mega plus([23])" , model : "Mega Plus $1" , } , Model { regex : "Sapphire ?([678])" , model : "Sapphire $1" , } ,]) , }) , ("Captiva" , Brand { regex : "Captiva[ _-]([^;/)]+)(?: Build|\\))" , device : Some ("tablet") , model : Some ("Pad $1") , models : None , }) , ("Majestic" , Brand { regex : "MAJESTIC[ _-]|CRONO ?[0-9]+|TAB (?:647|411) 3G|URANO 77LTE" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "URANO 77LTE(?:[);/ ]|$)" , model : "Urano 77 LTE" , } , Model { regex : "TAB (647|411) 3G" , model : "Tab $1 3G" , } , Model { regex : "MAJESTIC[ _]Tab([^;/]+)Build" , model : "Tab$1" , } , Model { regex : "MAJESTIC[ _]Tab([^);/]+)(?:[);/]|$)" , model : "Tab$1" , } , Model { regex : "MAJESTIC[ _]([^;/]+)Build" , model : "$1" , } , Model { regex : "MAJESTIC[ _]([^);/]+)(?:(?:[);/ ]|$)|$)" , model : "$1" , } , Model { regex : "CRONO ?([0-9]+) Build" , model : "Crono $1" , } , Model { regex : "CRONO ?([0-9]+)(?:[);/]|$)" , model : "Crono $1" , } ,]) , }) , ("Evolveo" , Brand { regex : "EVOLVEO|StrongPhone" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "EVOLVEO MultiMedia Box M4" , model : "MultiMedia Box M4" , } , Model { regex : "Smart TV ([^;/]*) Build" , model : "Smart TV $1" , } , Model { regex : "EVOLVEO StrongPhone G([248])" , model : "StrongPhone G$1" , } , Model { regex : "(?:EVOLVEO[ _])?StrongPhone[ _]?Q([679])(_LTE)?" , model : "StrongPhone Q$1$2" , } , Model { regex : "EVOLVEO[ _]([^;/]*) Build" , model : "$1" , } ,]) , }) , ("Maximus" , Brand { regex : "Maximus[ _]|(Noir X)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(?:Maximus[ _])?(Noir X|D1)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Maximus_(T2)" , model : "$1" , } ,]) , }) , ("Gome" , Brand { regex : "(?:GOME[_ ](?:201[678].+|C7_Note(?:_Plus)?|U9|S[17])|Fenmmy_Note)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "GOME[_ ](?:2018X38A)(?:[);/ ]|$)" , model : "C72" , } , Model { regex : "GOME[_ ](?:2018X07A)(?:[);/ ]|$)" , model : "C7" , } , Model { regex : "GOME[_ ](?:2017X05A)(?:[);/ ]|$)" , model : "C71" , } , Model { regex : "GOME[_ ](?:2016G68A)(?:[);/ ]|$)" , model : "K1" , } , Model { regex : "GOME[_ ](?:2016M25A)(?:[);/ ]|$)" , model : "U1" , } , Model { regex : "GOME[_ ](?:2017M27A)(?:[);/ ]|$)" , model : "U7" , } , Model { regex : "GOME[_ ](C7_Note(?:_Plus)?|U9|S[17])(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "(?:GOME[_ ])?(Fenmmy_Note)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Lumigon" , Brand { regex : "Lumigon[ _](T3)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Crosscall" , Brand { regex : "Crosscall|ODYSSEY_Plus|Odyssey S1|Trekker-[MSX][1234]|Action-X3|Core-X3" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Action-X3" , model : "Action-X3" , } , Model { regex : "Core-X3" , model : "Core-X3" , } , Model { regex : "Crosscall ([^;/]+) Build" , model : "$1" , } , Model { regex : "ODYSSEY_Plus" , model : "ODYSSEY+" , } , Model { regex : "Odyssey S1" , model : "ODYSSEY S1" , } , Model { regex : "Trekker-([MSX][1234](?: Core)?)" , model : "Trekker-$1" , } ,]) , }) , ("Gini" , Brand { regex : "Gini[ _]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Gini[ _]W(7)" , model : "W$1" , } , Model { regex : "Gini[ _]n(8)" , model : "N$1" , } , Model { regex : "Gini[ _]s5Pro" , model : "S5 Pro" , } , Model { regex : "Gini[ _]Tab[ _](V[78])" , model : "Tab $1" , } ,]) , }) , ("Smartisan" , Brand { regex : "(SM(?:70[15]|[89]01|919)|OD10[35]|YQ60[1357]|DE106|DT190[12]A|O[CE]106|OS103|O[CS]105)[ /;\\)]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "SM70[15]" , model : "T1" , } , Model { regex : "SM801" , model : "T2" , } , Model { regex : "SM901" , model : "M1" , } , Model { regex : "SM919" , model : "M1L" , } , Model { regex : "YQ60[1357]" , model : "U1" , } , Model { regex : "OD10[35]" , model : "Pro" , } , Model { regex : "OS105[ /;\\)]" , model : "Pro 2" , } , Model { regex : "DE106[ /;\\)]" , model : "R1" , } , Model { regex : "OE106[ /;\\)]" , model : "Nut Pro 2s" , } , Model { regex : "OC10[56][ /;\\)]" , model : "Nut 3" , } , Model { regex : "DT190[12]A[ /;\\)]" , model : "Nut Pro 3" , } , Model { regex : "OS103[ /;\\)]" , model : "JianGuo Pro 2" , } ,]) , }) , ("Yoka TV" , Brand { regex : "KB2 PRO(?:[);/ ]|$)" , device : Some ("tv") , model : Some ("KB2 Pro") , models : None , }) , ("Aiuto" , Brand { regex : "(AT702)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Leotec" , Brand { regex : "LESPH501[14]|LESPH5003B|SUPERNOVA (Qi16|Qi32|i3G96[X]?)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "LESPH5011" , model : "Argon e250" , } , Model { regex : "LESPH5003B" , model : "Argon A250B" , } , Model { regex : "LESPH5014" , model : "Krypton K150" , } , Model { regex : "SUPERNOVA (Qi16|Qi32|i3G96[X]?)" , model : "Supernova $1" , } ,]) , }) , ("StrawBerry" , Brand { regex : "StrawBerry[ _]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "StrawBerry[ _](SX|QX15)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("2F Mobile" , Brand { regex : "(Z8PLUS|Z8POCKET)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Z8PLUS" , model : "Z8 Plus" , } , Model { regex : "Z8POCKET" , model : "Z8 Pocket" , } ,]) , }) , ("POCO" , Brand { regex : "(?:POCO[ _](?:X[23]|F2 PRO|M[32])|M2010J19C[GI]|M2007J20C[ITG]|M2012K11AG|M2006C3MI|M2004J19PI|M2102J20SG)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "POCO X2(?:[);/ ]|$)" , model : "X2" , } , Model { regex : "(?:M2010J19C[GI]|POCO M3)(?:[);/ ]|$)" , model : "M3" , } , Model { regex : "M2012K11AG(?:[);/ ]|$)" , model : "F3" , } , Model { regex : "M2004J19PI(?:[);/ ]|$)" , model : "M2" , } , Model { regex : "POCO M2 Pro(?:[);/ ]|$)" , model : "M2 Pro" , } , Model { regex : "(?:M2007J20C[GT]|POCO X3 NFC)(?:[);/ ]|$)" , model : "X3 NFC" , } , Model { regex : "(?:M2007J20CI|POCO X3)(?:[);/ ]|$)" , model : "X3" , } , Model { regex : "M2102J20SG(?:[);/ ]|$)" , model : "X3 Pro" , } , Model { regex : "M2006C3MI(?:[);/ ]|$)" , model : "C3" , } , Model { regex : "POCO F2 PRO(?:[);/ ]|$)" , model : "F2 Pro" , } ,]) , }) , ("Tone" , Brand { regex : "TONE (e19|m15|e20)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Unowhy" , Brand { regex : "QOOQ " , device : Some ("tablet") , model : Some ("QOOQ") , models : None , }) , ("Jivi" , Brand { regex : "(?:Revolution TnT3|Xtreme_(?:[37]|3x)|Xtreme (?:XT84|XT309 Plus|1))(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Revolution (TnT3)" , model : "Revolution $1" , } , Model { regex : "Xtreme (XT84)" , model : "Xtreme Klick $1" , } , Model { regex : "Xtreme (XT309) Plus" , model : "Xtreme View Pro $1Plus" , } , Model { regex : "Xtreme[ _]([137]|3x)(?:[);/ ]|$)" , model : "Xtreme $1" , } ,]) , }) , ("Essentielb" , Brand { regex : "(?:Wooze[_ ]?(?:I55?|I45|X?L)|HEYOU(?:[135]|30))(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "HEYOU([135]|30)(?:[);/ ]|$)" , model : "HEYou $1" , } , Model { regex : "Wooze[_ ]?((?:I55?|I45|X?L))(?:[);/ ]|$)" , model : "Wooze $1" , } ,]) , }) , ("Wiko" , Brand { regex : "(?:WIKO[_ -])|(?:WIKO-)?CINK_[a-z0-9_]+|(?:WIKO-)?HIGHWAY_[a-z0-9_]+|(?:WIKO-)?(?:Cink([^/;]*)|Highway([^/;]*)|Iggy|Stairway|Rainbow ?(Jam|Lite|Up)?|Darkside|Darkmoon|Darkfull|Darknight|Freddy|FEVER|Jerry[2]?|Sublim|Ozzy|JIMMY|Barry|Birdy|Bloom|Getaway|Goa(?!nna)|Kite|Robby|Lenny[2-9]?|Slide|Sunset[2-9]?|Sunny[2-9]?|Tommy[2-9]?|PULP(?: Fab)?|Wax|HARRY|Ridge(?: Fab)?|U FEEL(?: Prime| Lite)?|U PULSE(?: LITE)?|View2 (?:Go|Plus)|View XL|View Prime)(?: Plus)?(?: 4G)?(?: Build|$)?|W_(?:C8[06]0|K[346]00|P130|P200|C200SN)|WC300|W-(?:V7[23]0|V8[30]0|P[36]11|K420|K510S?|K560|K130|K380)-(?:TMV|TIM|TVM|EEA|SUN|SWI|OPE|BYT|DU|TH)|WIM Lite|W-K360-TV|W-V600|W-K200|W-U300|U307AS|CINK PEAX 2|HIGHWAY PURE|C210AE|v3913" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(?:WIKO-)?Cink Peax 2" , model : "Cink Peax 2" , } , Model { regex : "(?:Wiko-)?Cink([^/;]*) Build" , model : "Cink$1" , } , Model { regex : "(?:WIKO-)?CINK_([a-z0-9_]+)" , model : "Cink $1" , } , Model { regex : "(?:WIKO-)?HIGHWAY PURE" , model : "Highway Pure" , } , Model { regex : "(?:WIKO-)?HIGHWAY STAR" , model : "Highway Star" , } , Model { regex : "(?:Wiko-)?Highway([^/;]*) Build" , model : "Highway$1" , } , Model { regex : "(?:WIKO-)?HIGHWAY_([a-z0-9_]+)" , model : "Highway $1" , } , Model { regex : "(?:WIKO-)?Iggy" , model : "Iggy" , } , Model { regex : "(?:WIKO-)?FEVER" , model : "Fever" , } , Model { regex : "(?:WIKO-)?Stairway" , model : "Stairway" , } , Model { regex : "(?:WIKO-)?Ridge Fab 4G" , model : "Ridge Fab 4G" , } , Model { regex : "(?:WIKO-)?Ridge 4G" , model : "Ridge 4G" , } , Model { regex : "(?:WIKO-)?Ridge" , model : "Ridge" , } , Model { regex : "(?:WIKO-)?Rainbow ([^/;]+) Build" , model : "Rainbow $1" , } , Model { regex : "(?:WIKO-)?Rainbow" , model : "Rainbow" , } , Model { regex : "(?:WIKO-)?Darkside" , model : "Darkside" , } , Model { regex : "(?:WIKO-)?Darkmoon" , model : "Darkmoon" , } , Model { regex : "(?:WIKO-)?Darkfull" , model : "Darkfull" , } , Model { regex : "(?:WIKO-)?Darknight" , model : "Darknight" , } , Model { regex : "(?:WIKO-)?Sublim" , model : "Sublim" , } , Model { regex : "(?:WIKO-)?Ozzy" , model : "Ozzy" , } , Model { regex : "(?:WIKO-)?Barry" , model : "Barry" , } , Model { regex : "(?:WIKO-)?Birdy" , model : "Birdy" , } , Model { regex : "(?:WIKO-)?Bloom" , model : "Bloom" , } , Model { regex : "(?:WIKO-)?JIMMY" , model : "Jimmy" , } , Model { regex : "JERRY MAX" , model : "Jerry Max" , } , Model { regex : "W_K300" , model : "Jerry 3" , } , Model { regex : "W-K420-TVM" , model : "Jerry 4" , } , Model { regex : "(?:WIKO-)?Jerry2" , model : "Jerry 2" , } , Model { regex : "(?:WIKO-)?Jerry" , model : "Jerry" , } , Model { regex : "(?:WIKO-)?Getaway" , model : "Getaway" , } , Model { regex : "(?:WIKO-)?Goa(?!nna)" , model : "Goa" , } , Model { regex : "(?:WIKO-)?Freddy" , model : "Freddy" , } , Model { regex : "(?:WIKO-)?Kite" , model : "Kite" , } , Model { regex : "W_K400" , model : "Lenny 5" , } , Model { regex : "C210AE(?:[);/ ]|$)" , model : "Life" , } , Model { regex : "U307AS(?:[);/ ]|$)" , model : "Life 2" , } , Model { regex : "v3913(?:[);/ ]|$)" , model : "Kenny" , } , Model { regex : "(?:WIKO-)?Lenny[ -_]?3 Max" , model : "Lenny 3 Max" , } , Model { regex : "(?:WIKO-)?Lenny[ -_]?4 Plus" , model : "Lenny 4 Plus" , } , Model { regex : "(?:WIKO-)?Lenny[ -_]?([2-9])" , model : "Lenny $1" , } , Model { regex : "(?:WIKO-)?Lenny" , model : "Lenny" , } , Model { regex : "(?:WIKO-)?Slide" , model : "Slide" , } , Model { regex : "(?:WIKO-)?Sunset2" , model : "Sunset 2" , } , Model { regex : "(?:WIKO-)?Sunset" , model : "Sunset" , } , Model { regex : "(?:WIKO-)?Sunny3" , model : "Sunny 3" , } , Model { regex : "W-K200" , model : "Sunny 3 Plus" , } , Model { regex : "(?:WIKO-)?Sunny2 Plus" , model : "Sunny 2 Plus" , } , Model { regex : "(?:WIKO-)?Sunny2" , model : "Sunny 2" , } , Model { regex : "W-K360-TV" , model : "Sunny 4 Plus" , } , Model { regex : "W-K130-TMV" , model : "Sunny 4" , } , Model { regex : "W-K380-TVM" , model : "Sunny 5" , } , Model { regex : "(?:WIKO-)?Sunny" , model : "Sunny" , } , Model { regex : "(?:W_K600|Tommy3|W_C200SN)" , model : "Tommy 3" , } , Model { regex : "(?:WIKO-)?Tommy2 Plus" , model : "Tommy 2 Plus" , } , Model { regex : "(?:WIKO-)?Tommy2" , model : "Tommy 2" , } , Model { regex : "(?:WIKO-)?Tommy" , model : "Tommy" , } , Model { regex : "(?:WIKO-)?Wax" , model : "Wax" , } , Model { regex : "(?:WIKO-)?HARRY" , model : "Harry" , } , Model { regex : "W-V600" , model : "Harry 2" , } , Model { regex : "(?:WIKO-)?WIM Lite" , model : "WIM Lite" , } , Model { regex : "(?:WIKO-)?Pulp Fab 4G" , model : "Pulp Fab 4G" , } , Model { regex : "(?:WIKO-)?Pulp Fab" , model : "Pulp Fab" , } , Model { regex : "(?:WIKO-)?Pulp 4G" , model : "Pulp 4G" , } , Model { regex : "(?:WIKO-)?Pulp" , model : "Pulp" , } , Model { regex : "(?:WIKO-)?Robby" , model : "Robby" , } , Model { regex : "(?:WIKO-)?U PULSE LITE" , model : "U Pulse Lite" , } , Model { regex : "(?:WIKO-)?U PULSE" , model : "U Pulse" , } , Model { regex : "(?:WIKO-)?U FEEL LITE" , model : "U Feel Lite" , } , Model { regex : "(?:WIKO-)?U FEEL PRIME" , model : "U Feel Prime" , } , Model { regex : "(?:WIKO-)?U FEEL" , model : "U Feel" , } , Model { regex : "(?:WIKO-)?View2 Go" , model : "View 2 Go" , } , Model { regex : "(?:WIKO-)?View2 Plus" , model : "View 2 Plus" , } , Model { regex : "(?:WIKO-)?View XL" , model : "View XL" , } , Model { regex : "(?:WIKO-)?View Prime" , model : "View Prime" , } , Model { regex : "WC300" , model : "View Lite" , } , Model { regex : "W_C800" , model : "View 2" , } , Model { regex : "W_C860" , model : "View 2 Pro" , } , Model { regex : "W_P200" , model : "View Max" , } , Model { regex : "W_P130" , model : "View Go" , } , Model { regex : "W-V800-(TVM|TIM|EEA|OPE|DU)" , model : "View 3 Lite" , } , Model { regex : "W-K130-(?:OPE|EEA)" , model : "Y50" , } , Model { regex : "W-K420-EEA" , model : "Y50" , } , Model { regex : "W-K510-(?:TVM|EEA|OPE|SUN|BYT|TH)|W-K510S-SWI" , model : "Y60" , } , Model { regex : "W-K560-EEA" , model : "Y61" , } , Model { regex : "W-V720-(?:EEA|OPE|SUN)" , model : "Y80" , } , Model { regex : "W-P311-(?:EEA|OPE|TVM)" , model : "View 3" , } , Model { regex : "W-P611-(?:EEA|OPE)" , model : "View 3 Pro" , } , Model { regex : "W-V830-(?:EEA|OPE)" , model : "View 4" , } , Model { regex : "W-V730-(?:EEA|TVM)" , model : "View 4 Lite" , } , Model { regex : "W-U300(?:[);/ ]|$)" , model : "Ride" , } , Model { regex : "Wiko ([^/;]+) Build" , model : "$1" , } , Model { regex : "Wiko ([^/; ]+)" , model : "$1" , } ,]) , }) , ("Hometech" , Brand { regex : "(?:Ideal (?:10S|Tab [79])|ALFA(?:10TB|7LM)|ALFA[_ ](?:10RC|10TM?|10MB|7RS|[78]RC|7M)|HT[ _](?:7RT|8MZ))(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "(Ideal (?:10S|Tab 9))(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "ALFA[_ ]?(10RC|10T[BM]?|7RS|[78]RC|7L?M|10MB)(?:[);/ ]|$)" , model : "ALFA $1" , } , Model { regex : "Ideal Tab 7 Ips( 3G)?" , model : "Ideal Tab 7 IPS$1" , } , Model { regex : "HT[ _](7RT|8MZ)(?:[);/ ]|$)" , model : "HT $1" , } ,]) , }) , ("Vipro" , Brand { regex : "VIPRO(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "VIPRO PRO2X(?:[);/ ]|$)" , model : "Pro 2X" , } , Model { regex : "VIPRO PRO[ _-]?([0-9])(?:[);/ ]|$)" , model : "Pro $1" , } ,]) , }) , ("Cavion" , Brand { regex : "(?:Cavion[_ ](?:Solid[_ ]4[\\._]5|Base[ _](?:7|7_3G_Silver|5\\.0|10|7.2 Quad)|10_3GRQ)|Cavion7.1quad)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Cavion[_ ]Solid[_ ]4[\\._]5" , model : "Solid 4.5\"" , } , Model { regex : "Cavion BASE 5.0" , model : "Base 5.0\"" , } , Model { regex : "CAVION_10_3GRQ" , model : "Base 10 3GR Quad" , } , Model { regex : "Cavion(?:7.1quad)" , model : "Base 7.1\" Quad" , } , Model { regex : "Cavion Base 7.2 Quad" , model : "Base 7.2\" Quad" , } , Model { regex : "Cavion Base 10" , model : "Base 10" , } , Model { regex : "Cavion Base 7 Dual" , model : "Base 7.0\" Dual" , } , Model { regex : "Cavion Base 7 Quad" , model : "Base 7.0\" Quad" , } , Model { regex : "Cavion_Base_7_3G_Silver" , model : "Base 7.0\" 3G Silver" , } ,]) , }) , ("v-mobile" , Brand { regex : "Vmobile[ _]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Vmobile[ _](J7)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Vmobile XS Pro(?:[);/ ]|$)" , model : "XS Pro" , } ,]) , }) , ("BS Mobile" , Brand { regex : "(?:RUNE III?)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "RUNE (III?)(?:[);/ ]|$)" , model : "Rune $1" , } ,]) , }) , ("Senkatel" , Brand { regex : "Senkatel[ _](T1009|T8002|T701[12]|T9702)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Transpeed" , Brand { regex : "Transpeed_|(?:TR99 MINI\\+|TR99)(?:[);/ ]|$)" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "TR99 MINI\\+" , model : "TR99 Mini Plus" , } , Model { regex : "(?:Transpeed_)?(TR99|H616|6K)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Vega" , Brand { regex : "Vega (Q7128)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Quantum" , Brand { regex : "(?:Quantum (?:Fit|MUV (?:PRO|UP)|Go|Mini|V|You [2E])|Q-TITANO(_007i|-H2)?|Q-Pulse70M|Q-Wave(?:101|71M))(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Quantum (Fit|Go|Mini|V|You [2E])(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Quantum MUV PRO(?:[);/ ]|$)" , model : "MUV Pro" , } , Model { regex : "Quantum MUV UP(?:[);/ ]|$)" , model : "MUV Up" , } , Model { regex : "Q-TITANO[ _-](BOS|X|M1|007i|H[12]|AK47)(?:[);/ ]|$)" , model : "Q-Titano $1" , } , Model { regex : "Q-Pulse70M(?:[);/ ]|$)" , model : "Q-Pulse 70M" , } , Model { regex : "Q-Wave(101|71M)(?:[);/ ]|$)" , model : "Q-Wave $1" , } ,]) , }) , ("Hotwav" , Brand { regex : "(?:Venus[_ ]X1[024569]|Cosmos[ _](?:V8_lite|V19_Plus|V2[0-3]|U2|V19|V[569])|Pearl K2|Magic Q8|Magic 5 Plus|Magic (?:[89]|1[13])|Hot[_ ]6)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Cosmos[ _]V8_lite(?:[);/ ]|$)" , model : "Cosmos V8 Lite" , } , Model { regex : "Hot[_ ]6?(?:[);/ ]|$)" , model : "Hot 6" , } , Model { regex : "(Venus[_ ]X1[024569]|Cosmos[ _](?:V19_Plus|V2[0-3]|U2|V19|V[569])|Pearl K2|Magic Q8|Magic 5 Plus|Magic (?:[89]|1[13]))(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("WellcoM" , Brand { regex : "WELLCOM[ _\\-/]([a-z0-9]+)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Sico" , Brand { regex : "SICO[_ ](?:PLUS|e1002)|Express3-Max|SSR3-1-51-5M|SSD-1-53-13M" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "SICO[_ ]PLUS2" , model : "Plus 2" , } , Model { regex : "SICO[_ ]PLUS" , model : "Plus" , } , Model { regex : "SSR3-1-51-5M" , model : "Pro 3" , } , Model { regex : "SSD-1-53-13M" , model : "Diamond" , } , Model { regex : "SICO[_ ]e1002" , model : "E1002" , } , Model { regex : "Express3-Max" , model : "Express 3 Max" , } ,]) , }) , ("Eton" , Brand { regex : "Eton" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Eton[ _-]?([^;/)]+) Build" , model : "$1" , } , Model { regex : "Eton[ _-]?([^;/)]+)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Sunny" , Brand { regex : "(SS4G9 Mira|SS4G7 Sole|SS4G1 Luna|SS4G8 Nora|SS4G6 Lola)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Mecer" , Brand { regex : "(M785|800P3[12]C|101P51C|X1010)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "M785(?:[);/ ]|$)" , model : "Xpress Smartlife M785" , } , Model { regex : "X1010(?:[);/ ]|$)" , model : "X1010" , } , Model { regex : "800P31C(?:[);/ ]|$)" , model : "Xpress Smartlife 800P31C" , } , Model { regex : "800P32C(?:[);/ ]|$)" , model : "Xpress Smartlife 800P32C" , } , Model { regex : "101P51C(?:[);/ ]|$)" , model : "Xpress Smartlife 101P51C" , } ,]) , }) , ("MAXVI" , Brand { regex : "MAXVI[ _](?:MS401)(?:[);/ ]|$)|(?:\\w+)?_MAXVI_\\w+|MS502[_ ]Orion|MS531" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "MAXVI[ _](MS401)" , model : "$1" , } , Model { regex : "MS531" , model : "MS531 Vega" , } , Model { regex : "MS502[_ ]Orion" , model : "MS502 Orion" , } , Model { regex : "(?:\\w+)?MAXVI_(P11|K10|X[358]00)_\\w+" , model : "$1" , } ,]) , }) , ("MYFON" , Brand { regex : "MYPAD7s" , device : Some ("tablet") , model : Some ("My Pad 7s") , models : None , }) , ("Leff" , Brand { regex : "Leff Shell (?:HV320WHB-N55|LC390TA2A)(?:[);/ ]|$)" , device : Some ("tv") , model : Some ("") , models : None , }) , ("Verizon" , Brand { regex : "QTA(SUN[12]|XIA1|QZ3|QZ3KID|IR7)|QMV7B" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "QTAXIA1|QTAIR7" , model : "Ellipsis 10" , } , Model { regex : "QTASUN1" , model : "Ellipsis 8 HD" , } , Model { regex : "QTASUN2" , model : "Ellipsis 8 HD 4G LTE" , } , Model { regex : "QTAQZ3KID" , model : "Ellipsis Kids LTE" , } , Model { regex : "QTAQZ3" , model : "Ellipsis 8" , } , Model { regex : "QMV7B" , model : "Ellipsis 7" , } ,]) , }) , ("Vsun" , Brand { regex : "(?:VSUN (?:ILLUSION|RACE|V9)|MARS TOUCH|MARS NOTE|MARS NOCAM|SATURN SELFIE)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "ILLUSION(?:[);/ ]|$)" , model : "Illusion" , } , Model { regex : "MARS TOUCH(?:[);/ ]|$)" , model : "Mars Touch" , } , Model { regex : "MARS NOTE(?:[);/ ]|$)" , model : "Mars Note" , } , Model { regex : "MARS NOCAM(?:[);/ ]|$)" , model : "Mars Nocam" , } , Model { regex : "SATURN SELFIE(?:[);/ ]|$)" , model : "Saturn Selfie" , } , Model { regex : "RACE(?:[);/ ]|$)" , model : "Race" , } , Model { regex : "(V9)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Nextbit" , Brand { regex : "Nextbit|(?:Robin)(?: Build|\\))" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(Robin)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Helio" , Brand { regex : "Helio (S60|S5)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Xiaolajiao" , Brand { regex : "(LA2-(?:L|S[N]?)|HLA Note3|20190416Q|20170608S|20180322D|20190325D|20190718Q)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "HLA Note3(?:[);/ ]|$)" , model : "Red Pepper Note 3" , } , Model { regex : "(LA2-(?:L|S[N]?))(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "(20190416Q)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "20170608S(?:[);/ ]|$)" , model : "Red Pepper Plus" , } , Model { regex : "20180322D(?:[);/ ]|$)" , model : "E Sports" , } , Model { regex : "20190325D(?:[);/ ]|$)" , model : "Red Pepper 8X Pro" , } , Model { regex : "20190718Q(?:[);/ ]|$)" , model : "Red Pepper 9X" , } ,]) , }) , ("Hurricane" , Brand { regex : "Hurricane[ _]|(?:Flame_Plus)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Hurricane[ _]IGNITE" , model : "Ignite" , } , Model { regex : "Hurricane[ _]Bolt" , model : "Bolt" , } , Model { regex : "Hurricane[ _]VORTEX" , model : "Vortex" , } , Model { regex : "Hurricane[ _]GIGA" , model : "Giga" , } , Model { regex : "Flame_Plus" , model : "Flame Plus" , } ,]) , }) , ("Hi-Level" , Brand { regex : "HLV-T([a-z0-9]+)" , device : Some ("tablet") , model : Some ("HLV-T$1") , models : None , }) , ("Siragon" , Brand { regex : "Siragon|(?:SP-(?:5250|5400|5050))(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(?:Siragon[_ ])?(SP-(?:5[12]50|5400|5050))" , model : "$1" , } ,]) , }) , ("AllDocube" , Brand { regex : "(?:T1001XS?|T1006S?|iPlay_[234]0|U1006H?)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "T1001XS(?:[);/ ]|$)" , model : "M5XS" , } , Model { regex : "T1006S(?:[);/ ]|$)" , model : "M5S" , } , Model { regex : "T1006(?:[);/ ]|$)" , model : "M5" , } , Model { regex : "T1001X(?:[);/ ]|$)" , model : "M5X" , } , Model { regex : "U1006H?(?:[);/ ]|$)" , model : "iPlay 10 Pro 10.1\"" , } , Model { regex : "iPlay_([234]0)(?:[);/ ]|$)" , model : "iPlay $1" , } ,]) , }) , ("Kyocera" , Brand { regex : "Kyocera|KWC-|QC-[0-9]{4}|(?:QC6035|NP501KC|302KC|503KC|602KC|705KC|901KC|C51[27]0|C5155|C5215|C67[35]0|C6522N?|C6530N|C6740N?|C6743|E6[89]10|KYL2[13]|KYV3[1-9]|KYT3[123]|KYF3[123579]|KYF40|KYX31|KYG01|KYY2[1-4]|S2151|KC-S701|S[468]-KC|KYV40U?|KYV4[1-8]|KYV4[47]|KC-S301AE|X3-KC|E6560[CT]|E6782[L]?|E6790(?:TM)?|SZJ-JS201|[47]04KC|A001KC|WX10K|URBANO PROGRESSO|E7110)(?:[-_]u2?)?(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "C5120(?:[);/ ]|$)" , model : "Milano" , } , Model { regex : "S4-KC(?:[);/ ]|$)" , model : "One S4" , } , Model { regex : "S6-KC(?:[);/ ]|$)" , model : "One S6" , } , Model { regex : "S8-KC(?:[);/ ]|$)" , model : "One S8" , } , Model { regex : "C5155(?:[);/ ]|$)" , model : "Rise" , } , Model { regex : "602KC(?:[);/ ]|$)" , model : "Digno G" , } , Model { regex : "503KC(?:[);/ ]|$)" , model : "Digno E" , } , Model { regex : "404KC(?:[);/ ]|$)" , model : "Digno C" , } , Model { regex : "704KC(?:[);/ ]|$)" , model : "Digno J" , } , Model { regex : "302KC(?:[);/ ]|$)" , model : "Digno T" , } , Model { regex : "NP501KC(?:[);/ ]|$)" , model : "Digno" , } , Model { regex : "WX10K(?:[);/ ]|$)" , model : "Digno Dual 2" , } , Model { regex : "KYV36(?:[);/ ]|$)" , model : "Digno Rafre" , } , Model { regex : "901KC(?:[);/ ]|$)" , model : "Digno BX" , } , Model { regex : "KYV39(?:[);/ ]|$)" , model : "Miraie F" , } , Model { regex : "KYX31(?:[);/ ]|$)" , model : "Infobar XV" , } , Model { regex : "C5170(?:[);/ ]|$)" , model : "Hydro" , } , Model { regex : "C5215(?:[);/ ]|$)" , model : "Hydro EDGE" , } , Model { regex : "C6522N?" , model : "Hydro XTRM" , } , Model { regex : "C6730" , model : "Hydro ICON" , } , Model { regex : "C6750" , model : "Hydro ELITE" , } , Model { regex : "C6530N" , model : "Hydro LIFE" , } , Model { regex : "C6740(N)?" , model : "Hydro WAVE" , } , Model { regex : "C6743" , model : "Hydro Reach" , } , Model { regex : "E6560[CT]" , model : "DuraForce" , } , Model { regex : "E6810" , model : "DuraForce Pro" , } , Model { regex : "E6910" , model : "DuraForce Pro 2" , } , Model { regex : "E7110" , model : "DuraForce Ultra 5G" , } , Model { regex : "KC-S701" , model : "Torque" , } , Model { regex : "KYG01" , model : "Torque 5G" , } , Model { regex : "KYL21(?:[);/ ]|$)" , model : "Digno S" , } , Model { regex : "KYL23(?:[);/ ]|$)" , model : "Miraie" , } , Model { regex : "KYY24(?:[);/ ]|$)" , model : "Torque G01" , } , Model { regex : "KYF32(?:[);/ ]|$)" , model : "Easy Mobile Phone" , } , Model { regex : "KYF35(?:[);/ ]|$)" , model : "Marvera" , } , Model { regex : "KYF40(?:[);/ ]|$)" , model : "Mamorino 5" , } , Model { regex : "KYF3[179](?:[);/ ]|$)" , model : "Gratina 4G" , } , Model { regex : "KYV48(?:[);/ ]|$)" , model : "Gratina KYV48" , } , Model { regex : "KYF33(?:[);/ ]|$)" , model : "Torque X01" , } , Model { regex : "KYV35(?:[);/ ]|$)" , model : "Torque G02" , } , Model { regex : "KYV41(?:[);/ ]|$)" , model : "Torque G03" , } , Model { regex : "KYV46(?:[);/ ]|$)" , model : "Torque G04" , } , Model { regex : "KYV32?(?:[);/ ]|$)" , model : "Basio" , } , Model { regex : "KYV47(?:-u)?(?:[);/ ]|$)" , model : "Basio 4" , } , Model { regex : "KYV43(?:[);/ ]|$)" , model : "Basio 3" , } , Model { regex : "705KC(?:[);/ ]|$)" , model : "Kantan Sumaho" , } , Model { regex : "KYV37(?:[);/ ]|$)" , model : "Qua Phone" , } , Model { regex : "KYV42(?:_u)?(?:[);/ ]|$)" , model : "Qua Phone QX" , } , Model { regex : "KYV44(?:_u2?)?(?:[);/ ]|$)" , model : "Qua Phone QZ" , } , Model { regex : "KYT33(?:[);/ ]|$)" , model : "Qua Tab QZ10" , } , Model { regex : "KYT32(?:[);/ ]|$)" , model : "Qua Tab QZ8" , } , Model { regex : "KYT31(?:[);/ ]|$)" , model : "Qua Tab 01" , } , Model { regex : "KYV40U?(?:[);/ ]|$)" , model : "Rafre" , } , Model { regex : "KYV33(?:[);/ ]|$)" , model : "Infobar A03" , } , Model { regex : "KYY21(?:[);/ ]|$)" , model : "Urbano L01" , } , Model { regex : "KYY22(?:[);/ ]|$)" , model : "Urbano L02" , } , Model { regex : "KYY23(?:[);/ ]|$)" , model : "Urbano L03" , } , Model { regex : "KYV31(?:[);/ ]|$)" , model : "Urbano V01" , } , Model { regex : "KYV34(?:[);/ ]|$)" , model : "Urbano V02" , } , Model { regex : "KYV(?:45|38)(?:[);/ ]|$)" , model : "Urbano V03" , } , Model { regex : "(?:Kyocera-)?E6790(?:TM)?" , model : "DuraForce XD" , } , Model { regex : "X3-KC(?:[);/ ]|$)" , model : "One X3" , } , Model { regex : "E6782(?:[);/ ]|$)" , model : "Brigadier" , } , Model { regex : "E6782L(?:[);/ ]|$)" , model : "DuraScout" , } , Model { regex : "(KC-S301AE|SZJ-JS201)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "A001KC(?:[);/ ]|$)" , model : "Katan Sumaho 2" , } , Model { regex : "URBANO PROGRESSO(?:[);/ ]|$)" , model : "Urbano Progresso" , } , Model { regex : "S2151" , model : "Coast" , } , Model { regex : "Kyocera-KZ-([a-z0-9]+)" , model : "KZ $1" , } , Model { regex : "Kyocera(?:[\\-/])?([a-z0-9]+)" , model : "$1" , } , Model { regex : "(KWC|QC)-?([a-z0-9]+)" , model : "$1-$2" , } ,]) , }) , ("Bezkam" , Brand { regex : "BEZKAM (BK-RAM2)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("MEEG" , Brand { regex : "MEEG[ _-]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "MEEG[ _\\-]?([^/;]+) Build" , model : "$1" , } , Model { regex : "MEEG[ _\\-]?([^);/ ]+)" , model : "$1" , } ,]) , }) , ("iVA" , Brand { regex : "(LAMCY (?:L3[05]0|C100|L400)|IVA S6)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "LAMCY (L3[05]0|C100|L400)(?:[);/ ]|$)" , model : "Lamcy $1" , } , Model { regex : "IVA S6(?:[);/ ]|$)" , model : "S6" , } ,]) , }) , ("Phicomm" , Brand { regex : "(PHICOMM)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "C630 \\(CLUE L\\)(?:[);/ ]|$)" , model : "Clue L" , } , Model { regex : "E653\\(ENERGY L\\)(?:[);/ ]|$)" , model : "Energy L" , } , Model { regex : "PHICOMM ENERGY 3\\+(?:[);/ ]|$)" , model : "Energy 3+" , } , Model { regex : "CLUE (2S|M|C230)(?:[);/ ]|$)" , model : "Clue $1" , } ,]) , }) , ("Mitsubishi" , Brand { regex : "MITSU|portalmmm/[12]\\.0 M" , device : Some ("feature phone") , model : None , models : Some (& [Model { regex : "MITSU/[a-z0-9.]+ \\(([a-z0-9]+)\\)" , model : "$1" , } , Model { regex : "MITSU[ \\-]?([a-z0-9]+)" , model : "$1" , } , Model { regex : "portalmmm/[12]\\.0 (M[a-z0-9]+)" , model : "$1" , } ,]) , }) , ("FiGO" , Brand { regex : "ATRIUM II F55L2|TRIO F40LT|CENTRIC S50G|EPIC F50G|Gravity X55L|Orion M50L|ULTRA M50G|M405B|VIRTUE3|F55L Build" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "ATRIUM II F55L2" , model : "Atrium II" , } , Model { regex : "(F55L)" , model : "$1" , } , Model { regex : "TRIO F40LT" , model : "Trio F40LT" , } , Model { regex : "EPIC F50G" , model : "Epic F50G" , } , Model { regex : "(Gravity X55L|Orion M50L)" , model : "$1" , } , Model { regex : "ULTRA M50G" , model : "Prime" , } , Model { regex : "M405B_8GB" , model : "Virtue II 8GB" , } , Model { regex : "M405B" , model : "Virtue II" , } , Model { regex : "VIRTUE3" , model : "Virtue III" , } , Model { regex : "CENTRIC S50G" , model : "Centric S50G" , } ,]) , }) , ("Dicam" , Brand { regex : "DICAM-([a-z0-9]+)" , device : Some ("feature phone") , model : Some ("$1") , models : None , }) , ("Kazam" , Brand { regex : "Kazam|Trooper_X[0-9][0-9](?:[);/ ]|$)|Tornado 348|TROOPER 4\\.0" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Tornado 348" , model : "Tornado 348" , } , Model { regex : "Thunder 450W" , model : "Thunder 450W" , } , Model { regex : "TROOPER 4\\.0" , model : "Trooper X4.0" , } , Model { regex : "Trooper_X([0-9])([0-9])(?:[);/ ]|$)" , model : "Trooper X$1.$2" , } , Model { regex : "Kazam[; _]([^;/)]+)(?: Build|\\))" , model : "$1" , } ,]) , }) , ("Akai" , Brand { regex : "AKAI,|Akai[ _-]|Eco[ _]E2|Glory[ _](?:G[1235]|L[123]|O[125])|TAB-[79]8[03]0Q?|X6 METAL|AKTB-703MZ" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "TAB-([79]8[03]0Q?)" , model : "TAB $1" , } , Model { regex : "AKTB-703MZ" , model : "AKTB-703MZ" , } , Model { regex : "X6 METAL" , model : "iLike" , } , Model { regex : "Glory[ _](G[1235]|L[123]|O[125])" , model : "Glory $1" , } , Model { regex : "Eco[ _]E2" , model : "Eco E2" , } , Model { regex : "Akai[ _-]([^;/)]+)(?: Build|[;)])" , model : "$1" , } , Model { regex : "AKAI,(AK3219NF)" , model : "$1" , } , Model { regex : "Si2157LG32" , model : "Si2157LG32" , } ,]) , }) , ("Safaricom" , Brand { regex : "NEON_RAY" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "NEON_RAY" , model : "Neon Ray" , } ,]) , }) , ("Capitel" , Brand { regex : "Capitel-([a-z0-9]+)" , device : Some ("feature phone") , model : Some ("$1") , models : None , }) , ("Epik One" , Brand { regex : "(K501 Plus|[ ]K5(?:0[0-4]|1[01]|03T|3[456]|4[05]|73)|[ ]K60[01]|[ ]X507T|[ ]K40[56]|[ ]T700)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "K501 Plus" , model : "Leo Plus" , } , Model { regex : "K501" , model : "Leo" , } , Model { regex : "K500" , model : "Omega Lite" , } , Model { regex : "K502" , model : "Omega" , } , Model { regex : "K503T" , model : "Leo Turbo" , } , Model { regex : "K503" , model : "Leo Max" , } , Model { regex : "K504" , model : "Titan 3G" , } , Model { regex : "X507T" , model : "Titan II" , } , Model { regex : "K510" , model : "Bolt" , } , Model { regex : "K511" , model : "Bolt Pro" , } , Model { regex : "K534" , model : "Hada" , } , Model { regex : "K535" , model : "Hada Turbo" , } , Model { regex : "K545" , model : "Rocket" , } , Model { regex : "K536" , model : "Royal" , } , Model { regex : "K540" , model : "Excalibur" , } , Model { regex : "K573" , model : "Panther" , } , Model { regex : "K600" , model : "Jupiter" , } , Model { regex : "K601" , model : "Jupiter One" , } , Model { regex : "K406" , model : "Pebble Plus" , } , Model { regex : "K405" , model : "Pebble II" , } , Model { regex : "T700" , model : "Palette" , } ,]) , }) , ("Neffos" , Brand { regex : "Neffos|(TP601A)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "TP601A(?:[);/ ]|$)" , model : "C5L" , } , Model { regex : "Neffos[_ ]Y50" , model : "Y50" , } , Model { regex : "Neffos X20 Pro" , model : "X20 Pro" , } , Model { regex : "Neffos[_ ]((?:[YNCXA])[0-9][A-Z]?(?: Max| Lite)?)" , model : "$1" , } ,]) , }) , ("Toshiba" , Brand { regex : "Toshiba|TSBNetTV/|portalmmm/[12].0 TS|T-01C|T-0[12]D|IS04|IS11T|AT1S0|AT300SE|AT(7-C|10-A|10[PL]E-A|100|200|270|300|330|374|400|470|500|503|570|703|830)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "T-01C" , model : "Regza T-01C" , } , Model { regex : "T-01D" , model : "Regza T-01D" , } , Model { regex : "T-02D" , model : "Regza T-02D" , } , Model { regex : "IS04" , model : "Regza IS04" , } , Model { regex : "IS11T" , model : "Regza IS11T" , } , Model { regex : "AT7-C" , model : "Excite" , } , Model { regex : "AT1S0" , model : "Regza AT1S0" , } , Model { regex : "AT300SE" , model : "Regza AT300SE" , } , Model { regex : "AT500a" , model : "Regza AT500a" , } , Model { regex : "AT(100|200|270|300|330|374|400|470|500|503|570|703|830)" , model : "Regza AT$1" , } , Model { regex : "AT10([PL])E-A" , model : "Excite AT10$1-A" , } , Model { regex : "AT10-A" , model : "Excite AT10-A" , } , Model { regex : "TSBNetTV/" , model : "" , } , Model { regex : "Toshiba[ /_\\-]?([a-z0-9_ \\-]+) Build" , model : "$1" , } , Model { regex : "Toshiba[ /_\\-]?([a-z0-9_\\-]+)" , model : "$1" , } , Model { regex : "portalmmm/[12].0 (TS[a-z0-9 ]+)" , model : "$1" , } ,]) , }) , ("Advan" , Brand { regex : "(?:ADVAN (?:M4|S40)|i7U|S45E|S50H|I7D|i55[KD]|i4U|S7D|S4Z|i5[KE]|S5E[ _]NXT|S5J\\+|S4\\+)(?:[);/ ]|$)|[ ](?:50(?:[46]1|59)|600[24])(?: Build|\\) AppleWebKit)|(?:E1C_3G)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "ADVAN M4" , model : "M4" , } , Model { regex : "ADVAN S40" , model : "S40" , } , Model { regex : "i7U" , model : "I Lite i7U" , } , Model { regex : "S5E[ _]NXT" , model : "S5E NXT" , } , Model { regex : "i(55[KD]|5[KE])" , model : "I$1" , } , Model { regex : "i4U" , model : "I4U" , } , Model { regex : " 6004(?: Build|\\) AppleWebKit)" , model : "G2 Pro" , } , Model { regex : " 6002(?: Build|\\) AppleWebKit)" , model : "G3 Pro" , } , Model { regex : "(S45E|50[46]1|5059|S50H|I7D|S7D|S4Z|S5J\\+|S4\\+)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "E1C_3G" , model : "E1C 3G" , } ,]) , }) , ("Nobby" , Brand { regex : "Nobby[ ](S500|X800|S300(?: Pro)?)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Yu" , Brand { regex : "(?:YU5[05]10[A]?|YU4711|AO5510|YU5050|YU501[14]|YU5551)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "YU5010[A]?(?:[);/ ]|$)" , model : "Yuphoria" , } , Model { regex : "YU5011(?:[);/ ]|$)" , model : "Yunique 2" , } , Model { regex : "YU5050(?:[);/ ]|$)" , model : "Yutopia" , } , Model { regex : "AO5510(?:[);/ ]|$)" , model : "Yureka" , } , Model { regex : "YU5551(?:[);/ ]|$)" , model : "Yureka 2" , } , Model { regex : "YU5510[A]?(?:[);/ ]|$)" , model : "Yureka Plus" , } , Model { regex : "YU4711(?:[);/ ]|$)" , model : "Yunique" , } , Model { regex : "YU5014(?:[);/ ]|$)" , model : "Ace" , } ,]) , }) , ("Navitel" , Brand { regex : "NAVITEL[ _]" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "NAVITEL[ _](T70[07]) 3G(?:[);/ ]|$)" , model : "$1 3G" , } , Model { regex : "NAVITEL[ _](T757)LTE(?:[);/ ]|$)" , model : "$1 LTE" , } , Model { regex : "NAVITEL[ _](A73[0157]|A650)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "RE900 Full HD(?:[);/ ]|$)" , model : "RE900 Full HD" , } ,]) , }) , ("Koridy" , Brand { regex : "KORIDY[ _-]([^/;]+) Build" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Smartab" , Brand { regex : "(ST1009)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Pendoo" , Brand { regex : "Pendoo|A5X MAX(?:[\\.-]\\w+)?\\.01\\.d4" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "Pendoo ?(T95Z|X10) PLUS" , model : "$1 Plus" , } , Model { regex : "Pendoo ?X8PRO+" , model : "X8 Pro+" , } , Model { regex : "Pendoo[ \\.]?(X9[29])" , model : "$1" , } , Model { regex : "pendoo mini" , model : "Mini" , } , Model { regex : "A5X MAX(?:[\\.-]\\w+)?\\.01\\.d4" , model : "A5X Max" , } ,]) , }) , ("Nomi" , Brand { regex : "Nomi[ _-]|(C101010 Ultra2|i501[234]|i5032|i50[57]0|i5510|i5532|C0(700(?:[02358]|2HD)|7850)|C1010[0-3])(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "i501[23](?:[);/ ]|$)" , model : "Evo M2" , } , Model { regex : "I5070(?:[);/ ]|$)" , model : "Iron-X" , } , Model { regex : "i5014(?:[);/ ]|$)" , model : "Evo M4" , } , Model { regex : "i5032(?:[);/ ]|$)" , model : "Evo X2" , } , Model { regex : "i5050(?:[);/ ]|$)" , model : "Evo Z" , } , Model { regex : "Nomi_i4510(?:[);/ ]|$)" , model : "Beat M" , } , Model { regex : "i5532(?:[);/ ]|$)" , model : "Space X2" , } , Model { regex : "i5510(?:[);/ ]|$)" , model : "Space M" , } , Model { regex : "C101010 Ultra2" , model : "Ultra 2" , } , Model { regex : "(C0(?:700(?:[02358]|2HD)|7850)|C1010[0-3])(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Nomi[ _-]([^;/]+) Build" , model : "$1" , } , Model { regex : "Nomi[ _-]([^;/)]+)(?:[;/)]|$)" , model : "$1" , } ,]) , }) , ("NextBook" , Brand { regex : "Next[0-9]|NX(?:785QC8G|M900MC|008HD8G|010HI8G|M908HC|M726|16A8116K|A8QC116|16A10132S|16A11264)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "NX008HD8G" , model : "Premium 8 HD" , } , Model { regex : "NXA8QC116" , model : "Ares 8" , } , Model { regex : "NX16A8116K" , model : "Ares A8" , } , Model { regex : "NX16A10132S" , model : "Ares A10" , } , Model { regex : "NX16A11264" , model : "Ares A11" , } , Model { regex : "NXM908HC" , model : "Premium 9" , } , Model { regex : "NX010HI8G" , model : "Premium 10 Hi" , } , Model { regex : "NX785QC8G" , model : "8" , } , Model { regex : "NXM900MC" , model : "8 HD" , } , Model { regex : "NXM726" , model : "Premium 7" , } , Model { regex : "Next([0-9]+[^;/]+) Build" , model : "Next $1" , } ,]) , }) , ("Quechua" , Brand { regex : "Quechua Phone 5" , device : Some ("smartphone") , model : Some ("Quechua Phone 5") , models : None , }) , ("Tetratab" , Brand { regex : "CASEBOOK_3(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("Casebook 3") , models : None , }) , ("Crony" , Brand { regex : "CRONY-7021(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("7021") , models : None , }) , ("NGM" , Brand { regex : "NGM[_ ][a-z0-9]+|(Forward|Dynamic)[ _]?[^/;]+(?:Build|/)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(Forward|Dynamic)[ _]?([^/;]+) Build" , model : "$1 $2" , } , Model { regex : "(Forward|Dynamic)[ _]?([^/;]+)/" , model : "$1 $2" , } , Model { regex : "NGM ([^;/]+) Build" , model : "$1" , } , Model { regex : "NGM_([a-z0-9]+)" , model : "$1" , } ,]) , }) , ("Onix" , Brand { regex : "(?:ONIX S405|AT101-1116)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "(AT101-1116)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "(S405)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Connex" , Brand { regex : "(CTAB1044hn|CTAB-1044)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("INQ" , Brand { regex : "INQ[/ ]" , device : Some ("feature phone") , model : None , models : Some (& [Model { regex : "INQ/([a-z0-9\\-]+)" , model : "$1" , } , Model { regex : "INQ ([^;/]+) Build" , model : "$1" , } ,]) , }) , ("AURIS" , Brand { regex : "(TB-703G)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Vodafone" , Brand { regex : "(?<!FBCR/)Vodafone[ _-]|Smart ?Tab ?(?:III? ?)?(?:|4G|7|10)[);/ -]|VodafoneSmartChat|VFD[ _][0-9]+(?:[);/ ]|$)|VFD320|VF6[89]5|VF-(696|1397|795|895N|1497)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "VFD 100" , model : "Smart Mini" , } , Model { regex : "VF685" , model : "Smart Kicka" , } , Model { regex : "VF695" , model : "Smart First 6" , } , Model { regex : "VFD 200" , model : "Smart First 7" , } , Model { regex : "VFD 300" , model : "Smart Mini 7" , } , Model { regex : "VFD 50[02]" , model : "Smart Turbo 7" , } , Model { regex : "VFD 51[013]" , model : "Smart E8" , } , Model { regex : "VFD 600" , model : "Smart Prime 7" , } , Model { regex : "VFD320" , model : "Smart C9" , } , Model { regex : "VFD 820" , model : "Smart X9" , } , Model { regex : "VFD 610" , model : "Smart N8" , } , Model { regex : "Smart ultra 6" , model : "Smart Ultra 6" , } , Model { regex : "VFD 700" , model : "Smart Ultra 7" , } , Model { regex : "VFD 720" , model : "Smart N9" , } , Model { regex : "VFD 900" , model : "Smart Platinum 7" , } , Model { regex : "Vodafone[ _]875(?:[);/ ]|$)" , model : "Smart Mini" , } , Model { regex : "Vodafone[ _]975N?(?:[);/ ]|$)" , model : "Smart 3" , } , Model { regex : "Vodafone[ _]785(?:[);/ ]|$)" , model : "Smart 4 Mini" , } , Model { regex : "Vodafone[ _]890N(?:[);/ ]|$)" , model : "Smart 4 Turbo" , } , Model { regex : "Vodafone[ _]985N(?:[);/ ]|$)" , model : "Smart 4 Power" , } , Model { regex : "VodafoneSmartChat" , model : "Smart Chat" , } , Model { regex : "VF-696" , model : "Smart Grand 6" , } , Model { regex : "VF-795" , model : "Smart Speed 6" , } , Model { regex : "VF-895N" , model : "Smart Prime 6" , } , Model { regex : "VF-1397" , model : "Tab Speed 6" , } , Model { regex : "VF-1497" , model : "Tab Prime 6" , } , Model { regex : "VFD 1100" , model : "Tab Mini 7" , } , Model { regex : "VFD 1300" , model : "Smart Tab N8" , } , Model { regex : "VFD 1400" , model : "Tab Prime 7" , } , Model { regex : "Smart ?Tab ?3G" , model : "Smart Tab 3G" , } , Model { regex : "Smart ?Tab ?4G" , model : "Smart Tab 4G" , } , Model { regex : "Smart ?Tab ?4" , model : "Smart Tab 4" , } , Model { regex : "SmartTab7[);/ -]" , model : "Smart Tab 7" , } , Model { regex : "SmartTab10[);/ -]" , model : "Smart Tab 10" , } , Model { regex : "Smart ?Tab ?II ?7" , model : "Smart Tab II 7" , } , Model { regex : "Smart ?Tab ?II ?10" , model : "Smart Tab II 10" , } , Model { regex : "Smart ?Tab ?III ?7" , model : "Smart Tab III 7" , } , Model { regex : "Smart ?Tab ?III ?10" , model : "Smart Tab III 10" , } , Model { regex : "VFD[ _]([0-9]+)(?:[);/ ]|$)" , model : "VFD $1" , } , Model { regex : "Vodafone[ _-]([^;/]+) Build" , model : "$1" , } , Model { regex : "Vodafone[ _-]([a-z0-9_-]+)" , model : "$1" , } ,]) , }) , ("Supra" , Brand { regex : "SUPRA|NVTAB 7.0 3G" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "SUPRA[ _]([^;/)]+)(?: Build|[;)])" , model : "$1" , } , Model { regex : "(NVTAB 7.0 3G)" , model : "$1" , } ,]) , }) , ("AVH" , Brand { regex : "Excer[ _]" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "Excer[ _]G5.3" , model : "Excer G5.3" , } , Model { regex : "Excer[ _]G5" , model : "Excer G5" , } , Model { regex : "Excer[ _]10[ _]PRO" , model : "Excer 10 Pro" , } , Model { regex : "Excer[ _]8" , model : "Excer 8" , } ,]) , }) , ("Hyve" , Brand { regex : "(?:Pryme 01|ST01)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Pryme 01" , model : "Pryme 01" , } , Model { regex : "ST01" , model : "Storm ST01" , } ,]) , }) , ("Jiake" , Brand { regex : "JK-?(760)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("JK-$1") , models : None , }) , ("Diva" , Brand { regex : "(QC-(?:703GN|704GA|803GN|1013G|7BHD))(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Energizer" , Brand { regex : "PowerMax|ENERGY[_ ]?(?:[45]00|400S|S[56]00|E12|E5[02]0S?)(?:[_ ](?:LTE|EU))?" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "PowerMax(P[0-9]+S?)" , model : "Power Max $1" , } , Model { regex : "ENERGY[_ ]([45]00|E520)[_ ]LTE" , model : "Energy $1 LTE" , } , Model { regex : "ENERGY[_ ]400S" , model : "Energy 400S" , } , Model { regex : "ENERGY400" , model : "Energy 400" , } , Model { regex : "ENERGY[_ ]S([56]00)" , model : "Energy S$1" , } , Model { regex : "ENERGY[_ ]?(E500S|E500|E12)" , model : "Energy $1" , } ,]) , }) , ("Suzuki" , Brand { regex : "SUZUKI[ _]|(?:ECOPAD7|SUMOPad10)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "SUMOPAD(8100|10)(?:[);/ ]|$)" , model : "SumoPad $1" , } , Model { regex : "ECOPAD7" , model : "ECOPad 7" , } ,]) , }) , ("Airness" , Brand { regex : "AIRNESS-([\\w]+)" , device : Some ("feature phone") , model : Some ("$1") , models : None , }) , ("Wonu" , Brand { regex : "Wonu ([a-z0-9]+)" , device : Some ("feature phone") , model : Some ("$1") , models : None , }) , ("Bellphone" , Brand { regex : "Bp100 X-Plus(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("BP 100 X-Plus") , models : None , }) , ("Oyyu" , Brand { regex : "OYYUT11(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("T11 3G") , models : None , }) , ("Allview" , Brand { regex : "Allview|A4You|H1003_LTE_PRO|A5_(?:Easy(?:_TM)?|Ready(?:_TM)?|Quad|Quad_Plus_TM)|A[5-9]_Lite|A5Smiley|A6_Duo|A10_Lite_2019|A10_(?:Plus|Max)|AX2_Frenzy|AX4Nano|AX5NanoQ|C6_Duo|E[23]_Living|E3_(?:Jump|Sign)|E4_Lite|M9_Connect|P(?:43_Easy|[5689]_Energy|6_Energy_Lite|[68]_Energy_Mini(?:_TM)?|(41|[458])_eMagic(?:_TM)?|[589](?:_)?Life(?:_TM)?|[567]_Lite(?:_TM)?|6_plus|[45678]_Pro|7_Seon|10_Life|10_Max|10_Style|7_Xtreme|6_Qmax|4_Quad)|V(?:[134]_Viper|1_Viper_I|2_Viper_(?:E|I|S|X|X_plus|Xe))|X4_Soul_Vision|X(?:[1-46]_Soul_Xtreme|[1-5]_Soul|3_Soul_Lite|[2-6]_Soul_Mini(?:_TM)?|4_Soul_Mini_S(?:_TM)?|[2-5]_Soul_Style(?:_TM)?|2_Soul_Style_Plus|2_Twin)|Viva_(?:H801|100[13]G|(?:H100[12]|H701|H802)_LTE|C701|i701G)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "A4You" , model : "A4 You" , } , Model { regex : "AX2_Frenzy" , model : "AX2 Frenzy" , } , Model { regex : "AX4Nano" , model : "AX4 Nano" , } , Model { regex : "AX5NanoQ" , model : "AX5 Nano Q" , } , Model { regex : "C6_Duo" , model : "C6 Duo" , } , Model { regex : "E([23])_Living" , model : "E$1 Living" , } , Model { regex : "E3_Jump" , model : "E3 Jump" , } , Model { regex : "E3_Sign" , model : "E3 Sign" , } , Model { regex : "E4_Lite" , model : "E4 Lite" , } , Model { regex : "M9_Connect" , model : "M9 Connect" , } , Model { regex : "P43_Easy" , model : "P43 Easy" , } , Model { regex : "P(41|[458])_eMagic(?:_TM)?" , model : "P$1 eMagic" , } , Model { regex : "P([567])_Lite(?:_TM)?" , model : "P$1 Lite" , } , Model { regex : "P6_plus" , model : "P6 Plus" , } , Model { regex : "P6_Qmax" , model : "P6 Qmax" , } , Model { regex : "P([45678])_Pro" , model : "P$1 Pro" , } , Model { regex : "P4_Quad" , model : "P4 Quad" , } , Model { regex : "P9_Energy_Lite_2017" , model : "P9 Energy Lite (2017)" , } , Model { regex : "P9_Energy_S" , model : "P9 Energy S" , } , Model { regex : "P([69])_Energy_Lite" , model : "P$1 Energy Lite" , } , Model { regex : "P8_Energy_PRO" , model : "P8 Energy Pro" , } , Model { regex : "P([689])_Energy_mini(?:_TM)?" , model : "P$1 Energy Mini" , } , Model { regex : "P([5689])_Energy" , model : "P$1 Energy" , } , Model { regex : "P7_Seon" , model : "P7 Seon" , } , Model { regex : "P7_Xtreme" , model : "P7 Xtreme" , } , Model { regex : "P([589])(?:_)?Life(?:_TM)?" , model : "P$1 Life" , } , Model { regex : "P10_Life" , model : "P10 Life" , } , Model { regex : "P10_Max" , model : "P10 Max" , } , Model { regex : "P10_Style" , model : "P10 Style" , } , Model { regex : "V([12])_Viper_I4G(?:_TM)?" , model : "V$1 Viper I 4G" , } , Model { regex : "V1_Viper_I" , model : "V1 Viper I" , } , Model { regex : "V([134])_Viper" , model : "V$1 Viper" , } , Model { regex : "V2_Viper_X_plus" , model : "V2 Viper X Plus" , } , Model { regex : "V2_Viper_(E|I|S|X(?:e)?)" , model : "V2 Viper $1" , } , Model { regex : "X4_Soul_Vision" , model : "X4 Soul Vision" , } , Model { regex : "X([1246])_Soul_Xtreme" , model : "X$1 Soul Xtreme" , } , Model { regex : "X4_Soul_Infinity_(L|N|S|Z)" , model : "X4 Soul Infinity $1" , } , Model { regex : "X([34])_Soul_Lite" , model : "X$1 Soul Lite" , } , Model { regex : "X4_Soul_Mini_S(?:_TM)?" , model : "X4 Soul Mini S" , } , Model { regex : "X([23456])_Soul_Mini(?:_TM)?" , model : "X$1 Soul Mini" , } , Model { regex : "X3_Soul_PLUS" , model : "X3 Soul Plus" , } , Model { regex : "X([35])_Soul_Pro" , model : "X$1 Soul Pro" , } , Model { regex : "X2_Soul_Style_Plus" , model : "X2 Soul Style Plus" , } , Model { regex : "X([2345])_Soul_Style(?:_TM)?" , model : "X$1 Soul Style" , } , Model { regex : "X([12345])_Soul" , model : "X$1 Soul" , } , Model { regex : "X2_Twin" , model : "X2 Twin" , } , Model { regex : "A5_Easy(?:_TM)?" , model : "A5 Easy" , } , Model { regex : "A([56789])_Lite" , model : "A$1 Lite" , } , Model { regex : "A5_Ready(?:_TM)?" , model : "A5 Ready" , } , Model { regex : "A5Smiley" , model : "A5 Smiley" , } , Model { regex : "A5_Quad_Plus_TM" , model : "A5 Quad Plus" , } , Model { regex : "A5_Quad" , model : "A5 Quad" , } , Model { regex : "A6_Duo" , model : "A6 Duo" , } , Model { regex : "A10_Lite_2019" , model : "A10 Lite (2019)" , } , Model { regex : "A10_Plus" , model : "A10 Plus" , } , Model { regex : "A10_Max" , model : "A10 Max" , } , Model { regex : "Impera S" , model : "Impera S" , } , Model { regex : "ALLVIEW P4i" , model : "AllDro P4" , } , Model { regex : "Allview_P2" , model : "AllDro" , } , Model { regex : "AllviewCityPlus" , model : "City Plus" , } , Model { regex : "AllviewCity" , model : "City" , } , Model { regex : "AllviewAX2Frenzy" , model : "AX2 Frenzy" , } , Model { regex : "Allview2SpeedDuo" , model : "Alldro 2 Speed Duo" , } , Model { regex : "Allview3SpeedQuad" , model : "Alldro 3 Speed Quad" , } , Model { regex : "H1003_LTE_PRO" , model : "Viva H1003 LTE Pro" , } , Model { regex : "Viva_(H801|100[13]G|(?:H802|H100[12]|H701)_LTE|C701|i701G)" , model : "Viva $1" , } , Model { regex : "ALLVIEW ?SPEEDI" , model : "Speed I" , } , Model { regex : "ALLVIEW ?SPEED" , model : "Speed" , } , Model { regex : "ALLVIEWSPEED" , model : "Speed" , } , Model { regex : "AX4Nano" , model : "AX4 Nano" , } , Model { regex : "ALLVIEW_TX1_Quasar" , model : "TX1 Quasar" , } , Model { regex : "Allview[ _-]([^;/]+) Build" , model : "$1" , } , Model { regex : "Allview[ _-]([^;/]+)(?:[;/)]|$)" , model : "$1" , } ,]) , }) , ("UNIWA" , Brand { regex : "UNIWA[ _](X5)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Bigben" , Brand { regex : "GAMETAB-ONE(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("GameTab-One") , models : None , }) , ("Gree" , Brand { regex : "(G0215D|G0245D|G0335D)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Vulcan" , Brand { regex : "(?:VP5004A|HT0704W08|VS5513|VS4011|VR6031)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(VP5004A|VR6031)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "VS5513(?:[);/ ]|$)" , model : "Tempo S13" , } , Model { regex : "VS4011(?:[);/ ]|$)" , model : "Tempo S11" , } , Model { regex : "HT0704W08" , model : "Koral 7W4" , } ,]) , }) , ("AOYODKG" , Brand { regex : "AOYODKG" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "AOYODKG[_ ](A38)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Energy Sistem" , Brand { regex : "ENERGY[ _-]?([^;/]+) Build|Energy Phone Pro 3" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Energy Phone Pro 3" , model : "Energy Phone Pro 3" , } , Model { regex : "ENERGY[ _-]?([^;/]+) Build" , model : "$1" , } ,]) , }) , ("Logic" , Brand { regex : "LOGIC[_ ](X[135]|X4M|L5D|X5[AFT]|X60G|L61|X60_PLUS)(:?[_ ]LITE2?)?(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "LOGIC[_ ]X60_PLUS(?:[);/ ]|$)" , model : "X60 Plus" , } , Model { regex : "LOGIC[_ ](X5|X4M)[_ ]LITE(?:[);/ ]|$)" , model : "$1 Lite" , } , Model { regex : "LOGIC[_ ](X5)[_ ]LITE2(?:[);/ ]|$)" , model : "$1 Lite 2" , } , Model { regex : "LOGIC[_ ](X[13]|X4M|L5D|X5[AFT]|X60G|L61)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Jiayu" , Brand { regex : "JIAYU[ _-]|(?:JY-G4[\\\\_]G5|(?:JY-[a-z0-9]+)|JY_G4C)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(?:JIAYU G4_G5|JY-G4[\\\\_]G5)(?:[);/ ]|$)" , model : "G4/G5" , } , Model { regex : "JIAYU[ _-](G4[S]?|G2F|G3[S]?|S[23])(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "JY[-_]([a-z0-9]+|G4C)(?:[);/ ]|$)" , model : "JY-$1" , } ,]) , }) , ("Accent" , Brand { regex : "(?:ACCENT[_ ]NEON|FAST73G|PEARL[_ ]A[24567]|TANK_P55|CAMELEON[_ ](?:C[456]|A1)(?:[_ ]PLUS)?|Speed[- ](?:[AXYM]2|X2\\+))(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "ACCENT[_ ]NEON(?:[);/ ]|$)" , model : "Neon" , } , Model { regex : "CAMELEON[_ ]C6[_ ]PLUS(?:[);/ ]|$)" , model : "Cameleon C6 Plus" , } , Model { regex : "Speed[- ]([AXYM]2)(?:[);/ ]|$)" , model : "Speed $1" , } , Model { regex : "Speed-X2\\+(?:[);/ ]|$)" , model : "Speed X2 Plus" , } , Model { regex : "CAMELEON[_ ](C[456]|A1)(?:[);/ ]|$)" , model : "Cameleon $1" , } , Model { regex : "PEARL A4 Lite(?:[);/ ]|$)" , model : "Pearl A4 Lite" , } , Model { regex : "PEARL[_ ]A([2567])(?:[);/ ]|$)" , model : "Pearl A$1" , } , Model { regex : "TANK_P55(?:[);/ ]|$)" , model : "Tank P55" , } , Model { regex : "FAST73G(?:[);/ ]|$)" , model : "FAST7 3G" , } ,]) , }) , ("IKU Mobile" , Brand { regex : "(Powerful_K55i|Curvy C50L)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Ramos" , Brand { regex : "Ramos ?([^/);]+)(?: Build|[);])|MOS1(?:max)?(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(?:Ramos[ _])?(R10|R9|M7)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "(MOS1)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "MOS1max" , model : "MOS1 Max" , } , Model { regex : "Ramos ?([^/;]+)(?: Build|[);])" , model : "$1" , } ,]) , }) , ("Yuandao" , Brand { regex : "N101[ _]DUAL(?:[ _]CORE)?(?:[ _]?2|\\|\\|)?(?:[ _]V11)?(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("N101") , models : None , }) , ("Leader Phone" , Brand { regex : "(Vyper|N-5[07]|N-45)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "N-45 light" , model : "N-45 Light" , } , Model { regex : "(Vyper|N-5[07]|N-45)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("FinePower" , Brand { regex : "FinePower[_ ]?([AB][1-9]|[CD][1-9])(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "FinePower[_ ]?([AB][1-9])(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "FinePower[_ ]?([CD][1-9])(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("SEMP TCL" , Brand { regex : "(?:GO[35]E|5101J|GO3C(?: Plus)?)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "5101J(?:[);/ ]|$)" , model : "L9 Plus" , } , Model { regex : "GO3C Plus(?:[);/ ]|$)" , model : "GO! 3C Plus" , } , Model { regex : "GO3C(?:[);/ ]|$)" , model : "GO! 3C" , } , Model { regex : "(GO[35]E)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Ask" , Brand { regex : "ASK[ _]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "ASK[ _]791SP[ _]3G" , model : "791SP 3G" , } , Model { regex : "ASK[_ ]([^/;]*) Build" , model : "$1" , } ,]) , }) , ("Aiwa" , Brand { regex : "(?:AW790|M300|AWM(?:533|50[19]|561)|AW500)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "AW790(?:[);/ ]|$)" , model : "AW790" , } , Model { regex : "AW500(?:[);/ ]|$)" , model : "AW500" , } , Model { regex : "AWM(533|50[19]|561)(?:[);/ ]|$)" , model : "AWM$1" , } , Model { regex : "M300(?:[);/ ]|$)" , model : "M300" , } ,]) , }) , ("Bitel" , Brand { regex : "Bitel[ _-]([^/;]+) Build|(?:B(?:840[5-9]|841[0456]|850[2346]|860[146]|9401|950[1-5])|S8402L?|S8501L?)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(B(?:840[5789]|841[0456]|850[2346]|860[146]|9401|950[12345])|S8402L?|S8501L?)" , model : "$1" , } , Model { regex : "Bitel[ _-]([^/;]+) Build" , model : "$1" , } ,]) , }) , ("Meizu" , Brand { regex : "Meizu|MZ-[a-z]|(?<!POCO )(M04[05]|MZ-16th(?: Plus)?|MZ-16[st]|M7[12]1C|M35[1356]|M612C|M578CA|M181[36]|M1822|M681C|M6T|MX[ -]?[2345](?: Pro)?|(?:MZ-)?m[1-6] note|M621C|M1852|M57[18]C|M3[ESX]|M031|m1 metal|M1 E|M2|M2 E|M5s Build|PRO [67]|PRO 7-[HS]| 15 Lite| 16th|MZ-15 (?:Lite|Plus)|MZ-16 X)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(?:MZ-)?M571C" , model : "M2 Note" , } , Model { regex : "(?:MZ-|Meizu-)?m([1-6])[_ ]note(?:[);/ ]|$)" , model : "M$1 Note" , } , Model { regex : "M1 E(?:[);/ ]|$)" , model : "M1E" , } , Model { regex : "M2 E(?:[);/ ]|$)" , model : "M2E" , } , Model { regex : "(?:MZ-)?M578C[A]?|M2(?:[);/ ]|$)" , model : "M2" , } , Model { regex : "M681C(?:[);/ ]|$)" , model : "M3 Note" , } , Model { regex : "M621C(?:[);/ ]|$)" , model : "M5 Note" , } , Model { regex : "M711C(?:[);/ ]|$)" , model : "M6" , } , Model { regex : "M721C(?:[);/ ]|$)" , model : "M6 Note" , } , Model { regex : "M6T" , model : "M6T" , } , Model { regex : "M3E" , model : "M3E" , } , Model { regex : "M3S" , model : "M3S" , } , Model { regex : "M3X" , model : "M3X" , } , Model { regex : "M5S|M612C" , model : "M5S" , } , Model { regex : "(M04[05]|MX[ -]?2)(?:[);/ ]|$)" , model : "MX2" , } , Model { regex : "(M35[1356]|MX[ -]?3)(?:[);/ ]|$)" , model : "MX3" , } , Model { regex : "MX[ -]?4 Pro(?:[);/ ]|$)" , model : "MX4 Pro" , } , Model { regex : "MX[ -]?4(?:[);/ ]|$)" , model : "MX4" , } , Model { regex : "(Meizu[- _])?MX[ -]?5(?:[);/ ]|$)" , model : "MX5" , } , Model { regex : "m1 metal" , model : "M1 Metal" , } , Model { regex : "M1813(?:[);/ ]|$)" , model : "M8" , } , Model { regex : "M1816(?:[);/ ]|$)" , model : "M8 Lite" , } , Model { regex : "PRO 7-[HS](?:[);/ ]|$)" , model : "PRO 7" , } , Model { regex : "PRO 7 Plus(?:[);/ ]|$)" , model : "Pro 7 Plus" , } , Model { regex : "PRO ([67])" , model : "PRO $1" , } , Model { regex : "M031(?:[);/ ]|$)" , model : "MX Dual Core" , } , Model { regex : "M1852(?:[);/ ]|$)" , model : "X8" , } , Model { regex : "M1822(?:[);/ ]|$)" , model : "Note 8" , } , Model { regex : "MZ-16T(?:[);/ ]|$)" , model : "16T" , } , Model { regex : "(?:MZ-)?16th Plus(?:[);/ ]|$)" , model : "16th Plus" , } , Model { regex : "MZ-15 Plus(?:[);/ ]|$)" , model : "15 Plus" , } , Model { regex : "(?:MZ-15 Lite| 15 Lite)(?:[);/ ]|$)" , model : "15 Lite" , } , Model { regex : "MZ-16th| 16th(?:[);/ ]|$)" , model : "16th" , } , Model { regex : "MZ-16 X(?:[);/ ]|$)" , model : "16X" , } , Model { regex : "Meizu[_ ]note([89])(?:[);/ ]|$)" , model : "Note $1" , } , Model { regex : "(?:MZ-)?Meizu[_ ]([^/;]+) Build" , model : "$1" , } , Model { regex : "(?:MZ-)?Meizu[_ ]([a-z0-9_]+)" , model : "$1" , } , Model { regex : "MZ-([^/;]+) Build" , model : "$1" , } ,]) , }) , ("Dune HD" , Brand { regex : "DuneHD|SOLO 4K(?:[);/ ]|$)" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "SOLO 4K(?:[);/ ]|$)" , model : "Solo 4k" , } , Model { regex : "DuneHD/\\d.\\d \\([a-z]+__([a-z0-9_-]+);" , model : "$1" , } , Model { regex : "DuneHD/\\d.\\d \\(([a-z0-9_-]+);" , model : "$1" , } ,]) , }) , ("Foxconn" , Brand { regex : "InFocus M[0-9]+[a-z]?" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "InFocus M([0-9]+[a-z]?)" , model : "InFocus M$1" , } ,]) , }) , ("Aligator" , Brand { regex : "ALIGATOR[_ ]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "ALIGATOR[ _](S4080|S50(?:6[56]|[678]0)|S5540|RX510|S6500|RX710|RX800|S5520)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Trevi" , Brand { regex : "Trevi[ _]|TAB[ _]10[ _]3G[ _]V16|TAB[ _](7|8)[ _]3G[ _]V8|TAB9 3G|MINITAB 3GV|Phablet[ _](?:4|4\\.5|5|5\\,3|6)[ _]?[CSQ]|REVERSE[ _]5\\.5[ _]?Q" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "TAB[ _]?(7|8)[ _]3G[ _]V8" , model : "TAB $1 3G V8" , } , Model { regex : "TAB[ _]?9[ _]3G[ _]V8" , model : "TAB 9 3G V8" , } , Model { regex : "TAB[ _]?9[ _]3G" , model : "TAB 9 3G" , } , Model { regex : "TAB[ _]10[ _]3G[ _]V16" , model : "TAB 10 3G V16" , } , Model { regex : "MINITAB 3GV" , model : "MINITAB 3G V" , } , Model { regex : "(?:Trevi_)?Phablet[ _]4[ _]?C" , model : "Phablet 4 C" , } , Model { regex : "(?:Trevi_)?Phablet[ _]4[ _]?S" , model : "Phablet 4 S" , } , Model { regex : "(?:Trevi_)?Phablet[ _]4.5[ _]?Q" , model : "Phablet 4.5Q" , } , Model { regex : "(?:Trevi_)?PHABLET[ _]5[ _]?S" , model : "Phablet 5 S" , } , Model { regex : "(?:Trevi_)?PHABLET[ _]5,3[ _]?Q" , model : "Phablet 5.3 Q" , } , Model { regex : "(?:Trevi_)?REVERSE[ _]5.5[ _]?Q" , model : "Phablet 5.5 Q REVERSE" , } , Model { regex : "(?:Trevi_)?PHABLET[ _]6[ _]?S" , model : "Phablet 6 S" , } , Model { regex : "Trevi[_]([^;/]+) Build" , model : "$1" , } ,]) , }) , ("Formuler" , Brand { regex : "Formuler[ _]" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "Formuler[ _](Z8(?: Pro)?)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Vastking" , Brand { regex : "(?:M910A|M783K|M783K-16G|M1072R-3G|KingPad_K10(?:Pro)?)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "KingPad_(K10)(Pro)?(?:[);/ ]|$)" , model : "KingPad $1 $2" , } , Model { regex : "(M910A|M783K|M783K-16G|M1072R-3G)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Explay" , Brand { regex : "Explay|[\\w]+-EXPLAY-FIN|ActiveD[ _]|Atlant |Informer[ _][0-9]+|CinemaTV 3G|Surfer[ _][0-9\\.]|sQuad[ _][0-9\\.]|Onliner[1-3]|RioPlay|Leader|Pulsar|Infinityll|Imperium[78]|Indigo|Lagoon" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "ActiveD[ _]7.4[ _]3G" , model : "ActiveD 7.4 3G" , } , Model { regex : "Imperium([78])(?:[);/ ]|$)" , model : "Imperium $1 3G" , } , Model { regex : "ActiveD[ _]8.2[ _]3G" , model : "ActiveD 8.2 3G" , } , Model { regex : "CinemaTV[ _]3G" , model : "CinemaTV 3G" , } , Model { regex : "Infinityll" , model : "Infinity II" , } , Model { regex : "Informer[ _]([0-9]+(?:[ _]3G)?)" , model : "Informer $1" , } , Model { regex : "Surfer[ _]([0-9\\.]+(?:[ _]3G)?)" , model : "Surfer $1" , } , Model { regex : "sQuad[ _]([0-9\\.]+(?:[ _]3G)?)" , model : "sQuad $1" , } , Model { regex : "Onliner([1-3])" , model : "Onliner $1" , } , Model { regex : "Atlant(?:[);/ ]|$)" , model : "Atlant" , } , Model { regex : "Indigo(?:[);/ ]|$)" , model : "Indigo" , } , Model { regex : "Pulsar(?:[);/ ]|$)" , model : "Pulsar" , } , Model { regex : "[\\w]+-EXPLAY-FIN" , model : "Fin" , } , Model { regex : "Lagoon(?:[);/ ]|$)" , model : "Lagoon" , } , Model { regex : "Explay[ _-]([^;/]+)(?: Build|[;)])" , model : "$1" , } , Model { regex : "RioPlay(?:[);/ ]|$)" , model : "Rio Play" , } , Model { regex : "Leader" , model : "Leader" , } ,]) , }) , ("E-Ceros" , Brand { regex : "(?:CT9716(?:-B)?)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "CT9716(?:[);/ ]|$)" , model : "Revolution" , } , Model { regex : "CT9716-B(?:[);/ ]|$)" , model : "Revolution HD" , } ,]) , }) , ("Uhappy" , Brand { regex : "Uhappy|UP?580|UP350|UP[35679]20" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "UP([35679]20)" , model : "UP$1" , } , Model { regex : "UP350" , model : "UP350" , } , Model { regex : "UP580" , model : "UP580" , } , Model { regex : "U580" , model : "U580" , } , Model { regex : "Uhappy[ _-]([^;/]+) Build" , model : "$1" , } , Model { regex : "Uhappy[ _-]?([^;/)]+)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Ravoz" , Brand { regex : "RAVOZ[ _](Z5 (?:Lite|Pro)|Z[3-7]|R[478])(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Tinai" , Brand { regex : "Tinai (K[12])(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Bobarry" , Brand { regex : "(?:K10[ ]?SE)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("K10 SE") , models : None , }) , ("Plum" , Brand { regex : "PLUM[ _]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Z405" , model : "Gator 3" , } , Model { regex : "Z407" , model : "Axe 4" , } , Model { regex : "Z516" , model : "Compass" , } , Model { regex : "Z811" , model : "Optimax 11" , } , Model { regex : "Z709" , model : "Optimax 7" , } , Model { regex : "Z712" , model : "Optimax 12" , } ,]) , }) , ("UMIDIGI" , Brand { regex : "UMI(?:DIGI)?[ _]|(?:A5_Pro|ROME[_ ]X|BISON|hammer_S)(?:[;/) ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "A5_Pro" , model : "A5 Pro" , } , Model { regex : "UMI TOUCH X" , model : "Touch X" , } , Model { regex : "UMI TOUCH" , model : "Touch" , } , Model { regex : "ROME[_ ]X" , model : "Rome X" , } , Model { regex : "BISON" , model : "Bison" , } , Model { regex : "hammer_S" , model : "Hammer S" , } , Model { regex : "UMI_(London|Diamond(?:_X)?)" , model : "$1" , } , Model { regex : "UMI(?:DIGI)?[ _]([^/;)]+)(?: Build|[;)])" , model : "$1" , } ,]) , }) , ("Fero" , Brand { regex : "Fero[_ ]|Royale[_ ](?:[YX]2|A1)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Fero_Y1" , model : "Y1" , } , Model { regex : "Royale Y2 Lite" , model : "Royale Y2 Lite" , } , Model { regex : "Royale[_ ]([YX]2|A1)" , model : "Royale $1" , } , Model { regex : "FERO PACE" , model : "Pace" , } , Model { regex : "Fero[ _](A4001|A450[23]|A5001|L100|Iris|Power|Mega LTE|Vibe)" , model : "$1" , } ,]) , }) , ("Tymes" , Brand { regex : "Tymes[ _](V5)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("China Mobile" , Brand { regex : "(M812C|1501_M02|9930i|A1303|A309W|M651CY) Build" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "M651CY" , model : "A3" , } , Model { regex : "(M812C|1501_M02|9930i|A1303|A309W)" , model : "$1" , } ,]) , }) , ("Unihertz" , Brand { regex : "(Titan|Jelly-Pro|Jelly2|Atom_X?L)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(Jelly)-Pro(?:[);/ ]|$)" , model : "$1 Pro" , } , Model { regex : "Jelly2(?:[);/ ]|$)" , model : "Jelly 2" , } , Model { regex : "(Titan|Atom_X?L)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("VC" , Brand { regex : "(?:Camellia_II|Cactus II|Maple III|Maple-II|Cactus-Pro|LavenderII|Jasmine-II)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(Camellia_II|Cactus II|Maple III)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Cactus-Pro" , model : "Cactus Pro" , } , Model { regex : "(Maple|Jasmine|Lavender)-?II(?:[);/ ]|$)" , model : "$1 II" , } ,]) , }) , ("MTN" , Brand { regex : "MTN-" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "MTN-(L860|S620)" , model : "Sm@rt Mini $1" , } , Model { regex : "MTN-8978P" , model : "Steppa" , } , Model { regex : "MTN-([a-z0-9_\\-]+)" , model : "MTN-$1" , } ,]) , }) , ("iQ&T" , Brand { regex : "(IFoo (?:U200|H55))(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Umax" , Brand { regex : "VisionBook[ _]|[78]Qa_3G(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "(VisionBook[ _](?:10Qi|7Q[i]?|8Q[ei]?|P70|8Qi_3G)(?:[ _](?:[34]G|Plus|LTE))?)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "([78])Qa_3G(?:[);/ ]|$)" , model : "VisionBook $1Qa 3G" , } , Model { regex : "VisionBook_10Q_LTE(?:[);/ ]|$)" , model : "VisionBook 10Q LTE" , } , Model { regex : "VisionBook_P50Plus_LTE(?:[);/ ]|$)" , model : "VisionBook P50 Plus LTE" , } , Model { regex : "(VisionBook[ _](?:P50 LTE|P55 X2 LTE|P55 LTE(?: Pro)?))(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Clout" , Brand { regex : "Hind[ _]5\\.1|X417[ _]Amaze|X418[ _]Zest|X421[ _]Nova|X422[ ]Exotic|X425[ _]Shavit|X428[ _]Astute" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Hind[ _]5\\.1" , model : "Hind 5.1" , } , Model { regex : "X417[ _]Amaze" , model : "X417 Amaze" , } , Model { regex : "X418[ _]Zest" , model : "X418 Zest" , } , Model { regex : "X421[ _]Nova" , model : "X421 Nova" , } , Model { regex : "X422[ _]Exotic" , model : "X422 Exotic" , } , Model { regex : "X425[ _]Shavit" , model : "X425 Shavit" , } , Model { regex : "X428[ _]Astute" , model : "X428 Astute" , } ,]) , }) , ("ArmPhone" , Brand { regex : "(TSD Octa A0520P|TSD Quadra A050[59]P)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Conquest" , Brand { regex : "Conquest[-_](?:S(?:[68]|1[0126])|F2)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Conquest[-_]S([68]|1[0126])" , model : "S$1" , } , Model { regex : "Conquest-F2" , model : "F2" , } ,]) , }) , ("SQOOL" , Brand { regex : "SQOOL-V(41?)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("V$1") , models : None , }) , ("Logicom" , Brand { regex : "LOGICOM[_ ]|(TAB950|TAB1062|E731|E812|E912|E1031|POWER BOT|La[ _]Tab[ _](?:7[24]|10[57]|114)|(?:B|C|M|ID|VR)[ _]?BOT[ _]?(?:TAB[ _])?([0-9]+\\+?)(?:PLUS)?|KT712A_4\\.4|L-?IXIR[0-9]*|L-ITE|L-EGANTONE(?:-R)?|L-?EMENT.+|Le[ _]?(?:Hop|Hello|Lift|Hola|Moov[2]?|Must(?: 2)?|Starter L|Fit FR|Spark|Prime|Smooth(?: FR)?))[_);/ ]" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "La[ _]Tab[ _](7[24]|10[57]|114)(?:[);/ ]|$)" , model : "La Tab $1" , } , Model { regex : "LOGICOM_LA_TAB_LINK_71" , model : "La Tab Link 71" , } , Model { regex : "KT712A_4.4|L-IXIR TAB 701 3G" , model : "L-ixir Tab 701 3G" , } , Model { regex : "LIXIR1041" , model : "L-ixir Tab 1041" , } , Model { regex : "L-?IXIR[ _]TAB[ _]([^);/]+)( Build|[);])" , model : "L-ixir Tab $1" , } , Model { regex : "L-ITE[ _](400M|452|50[46] HD|506R HD|552 HD)(?:[);/ ]|$)" , model : "L-ite $1" , } , Model { regex : "L-ITE[ _]([^;/]+) Build" , model : "L-ite Tab $1" , } , Model { regex : "L-?EMENT[ _]?(350|451|40[103]|55[013]|50[15]|500L?)(?:[);/ ]|$)" , model : "L-ement $1" , } , Model { regex : "L-?EMENT[ _](?:TAB)[ )]?([^);/]+)(?: Build|[);])" , model : "L-ement Tab $1" , } , Model { regex : "L-?EMENT[ _]?(74[01])(?:[);/ ]|$)" , model : "L-ement Tab $1" , } , Model { regex : "(TAB950|TAB1062|E731|E812|E912|E1031)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "POWER BOT" , model : "POWER BOT" , } , Model { regex : "((?:B|C|M|ID|VR))[ _]?BOT[ _]?((?:TAB[ _])?([0-9]+\\+?)(?:PLUS)?)" , model : "$1 BOT $2" , } , Model { regex : "Le Lift" , model : "Le Lift" , } , Model { regex : "Le Hola FR(?:[);/ ]|$)" , model : "Le Hola FR" , } , Model { regex : "Le[ _]Hola(?:[);/ ]|$)" , model : "Le Hola" , } , Model { regex : "LeMoov2(?:[);/ ]|$)" , model : "Le Moov 2" , } , Model { regex : "LeMoov(?:[);/ ]|$)" , model : "Le Moov" , } , Model { regex : "Le Fit FR(?:[);/ ]|$)" , model : "Le Fit FR" , } , Model { regex : "Le Hop(?:[);/ ]|$)" , model : "Le Hop" , } , Model { regex : "Le[ _]Hello(?:[);/ ]|$)" , model : "Le Hello" , } , Model { regex : "Le Smooth FR(?:[);/ ]|$)" , model : "Le Smooth FR" , } , Model { regex : "Le Smooth(?:[);/ ]|$)" , model : "Le Smooth" , } , Model { regex : "Le Must 2(?:[);/ ]|$)" , model : "Le Must 2" , } , Model { regex : "Le Must(?:[);/ ]|$)" , model : "Le Must" , } , Model { regex : "Le Starter L(?:[);/ ]|$)" , model : "Le Starter L" , } , Model { regex : "Le[ _]Spark(?:[);/ ]|$)" , model : "Le Spark" , } , Model { regex : "Le[ _]Prime(?:[);/ ]|$)" , model : "Le Prime" , } , Model { regex : "L-EGANTONE-R" , model : "L-Egant One R" , } , Model { regex : "L-EGANTONE" , model : "L-Egant One" , } ,]) , }) , ("Datawind" , Brand { regex : "DW-[A-Z0-9]{5}(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(DW-PS3G5)(?:[);/ ]|$)" , model : "Pocket Surfer 3G5" , } , Model { regex : "DW-UBT7W" , model : "Ubislate 7W" , } ,]) , }) , ("Mofut" , Brand { regex : "Mofut" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Mofut[ _\\-]?([^/;]+) Build" , model : "$1" , } , Model { regex : "Mofut[ _\\-]?((?!Build)[^);/ ]+)" , model : "$1" , } ,]) , }) , ("Bmobile" , Brand { regex : "Bmobile[_ ]|AX-?(?:[1-9][0-9]{2,3}[eEO+]?|7OO)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "AX-?([1-9][0-9]{2,3}[eEO+]?)" , model : "AX$1" , } , Model { regex : "AX7OO" , model : "AX700" , } , Model { regex : "Bmobile[_ ]([^/;]+) Build" , model : "$1" , } , Model { regex : "Bmobile[_ ]([a-z0-9]+)" , model : "$1" , } ,]) , }) , ("Kaan" , Brand { regex : "KAAN[ _](N[12]|A1)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Billion" , Brand { regex : "Capture\\+(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("Capture Plus") , models : None , }) , ("Fortis" , Brand { regex : "(Apollo 5 Neo)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("TrekStor" , Brand { regex : "(?:TrekStor|Surftab) ([^/;]+)(?: Build|\\))|Surftab[^;\\)]*(?:[;\\)]|$)|ST10216-2A|ST13416-1|VT10416-[12]|TFMTKAW01232" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "ST10216-2A|VT10416-[12]" , model : "SurfTab 10.1" , } , Model { regex : "ST13416-1" , model : "SurfTab Theatre 13.4\"" , } , Model { regex : "PrimeTab P10" , model : "PrimeTab P10" , } , Model { regex : "TrekStor ([^/;]+) Build" , model : "$1" , } , Model { regex : "Surftab ([^/;]+) Build" , model : "SurfTab $1" , } , Model { regex : "Surftab[ _]([^;\\)]*)(?:[;\\)]|$)" , model : "SurfTab $1" , } , Model { regex : "TFMTKAW01232" , model : "SurfTab L15" , } ,]) , }) , ("LG" , Brand { regex : "LG|Web0S; Linux/SmartTV|portalmmm/2\\.0 (?:KE|KG|KP|L3)|(?:VX[0-9]+|L-0[12]D|L-07C|P713|(LM-[A-Z][0-9]{3}[A-Z]{0,3}(?:\\(FGN?\\)|\\(G\\)|\\.FN|\\.F(?:GN?)?)?)|LM-(X625N1|G820QM[0127]))(?:[);/ ]|$)|NetCast|RS98[78]|RS500|VS(?:50[01]|835|876|880|98[0578]|99[056]|(410|415|425|500|880)PP)|VS820|VS870 4G|Nexsus 5|LML(41[34]D|211B|713D|212V)L|VK810 4G|VK815|X5-LG|L-05[DE]|L-03K|L-01[LJK]|L-52A|L-[45]1A|901LG|A001LG|80[12]LG|402LG|LGT32|L-02K|L-01F|LM-V40|DM-01K|DM-02H|LMX130IM|VS810PP|VS425" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "DM-(01K|02H)" , model : "Disney Mobile DM-$1" , } , Model { regex : "LG-D325" , model : "L70" , } , Model { regex : "LG-D405" , model : "L90" , } , Model { regex : "LG-D340F8" , model : "L70 Tri" , } , Model { regex : "LM-X210APM" , model : "Phoenix 4" , } , Model { regex : "LG-P505R" , model : "Phoenix" , } , Model { regex : "LM-X210VPP" , model : "Zone 4" , } , Model { regex : "LM-X220PM" , model : "Tribute Empire" , } , Model { regex : "VS980|L-01F" , model : "G2" , } , Model { regex : "LG-D6(?:18|20)" , model : "G2 Mini" , } , Model { regex : "LG-D85[01258]|VS985" , model : "G3" , } , Model { regex : "LG-D72[2458]" , model : "G3 Beat" , } , Model { regex : "LG-H81[158]" , model : "G4" , } , Model { regex : "LG-H525n?" , model : "G4c" , } , Model { regex : "LG-(?:H540|H542|H630)" , model : "G4 Stylus" , } , Model { regex : "LG-H736" , model : "G4s" , } , Model { regex : "LG-H735" , model : "G4 Beat" , } , Model { regex : "LG-H8(?:20|3[01]|5[08]|6[08])|VS987|RS988" , model : "G5" , } , Model { regex : "LG-H84[05]" , model : "G5 SE" , } , Model { regex : "VS988|LG-H87(?:0DS|3)" , model : "G6" , } , Model { regex : "LM-Q850" , model : "G7 Fit" , } , Model { regex : "LM-Q910" , model : "G7 One" , } , Model { regex : "LM-G820(N|QM[0127]|UMB)?" , model : "G8" , } , Model { regex : "LM-G850" , model : "G8X ThinQ" , } , Model { regex : "LM-G810" , model : "G8S ThinQ" , } , Model { regex : "901LG(?:[);/ ]|$)" , model : "G8X ThinQ" , } , Model { regex : "VS501|LM-X120" , model : "K20" , } , Model { regex : "(?:LG-)?H502" , model : "Magna" , } , Model { regex : "(?:LG-)?H343" , model : "Risio" , } , Model { regex : "(?:LG-)?H650" , model : "Zero" , } , Model { regex : "(?:LG-)?M154" , model : "Risio 2" , } , Model { regex : "(?:LG-)?P500H" , model : "Optimus One" , } , Model { regex : "(L-05[DE])(?:[);/ ]|$)" , model : "Optimus it $1" , } , Model { regex : "LG-L160L(?:[);/ ]|$)" , model : "Optimus LTE 2" , } , Model { regex : "P713(?:[);/ ]|$)" , model : "Optimus L7II" , } , Model { regex : "L-01D(?:[);/ ]|$)" , model : "Optimus LTE L-01D" , } , Model { regex : "L-02D(?:[);/ ]|$)" , model : "PRADA phone L-02D" , } , Model { regex : "L-07C" , model : "Optimus Bright L-07C" , } , Model { regex : "(?:LG-)?F800(?:S|K|L)?" , model : "V20" , } , Model { regex : "LM-Q710(?:\\(FGN\\)|[\\.]?FGN)" , model : "Q Stylus Plus" , } , Model { regex : "801LG" , model : "Q Stylus" , } , Model { regex : "LM-Q[67]10\\.FG(?:[);/ ]|$)" , model : "Q7" , } , Model { regex : "LM-(Q725[KL]|Q610.FGN)(?:[);/ ]|$)" , model : "Q7+" , } , Model { regex : "LM-Q815[SL](?:[);/ ]|$)" , model : "Q8+" , } , Model { regex : "LM-Q925L(?:[);/ ]|$)" , model : "Q9" , } , Model { regex : "LM-Q730N(?:[);/ ]|$)" , model : "Q70" , } , Model { regex : "LGV33(?:[);/ ]|$)" , model : "Qua Phone PX" , } , Model { regex : "L-03K(?:[);/ ]|$)" , model : "Style" , } , Model { regex : "L-01L(?:[);/ ]|$)" , model : "Style 2" , } , Model { regex : "VS835(?:[);/ ]|$)" , model : "Stylo 2 V" , } , Model { regex : "L-41A(?:[);/ ]|$)" , model : "Style 3" , } , Model { regex : "LM-Q710|LML713DL" , model : "Stylo 4" , } , Model { regex : "(?:LM-Q720|LGL722DL)(?:[);/ ]|$)" , model : "Stylo 5" , } , Model { regex : "LM-Q730(?:[);/ ]|$)" , model : "Stylo 6" , } , Model { regex : "LM-G710(N|VM)?" , model : "G7 ThinQ" , } , Model { regex : "LM-X210CM" , model : "Fortune 2" , } , Model { regex : "LM-X410\\.F(?:[);/ ]|$)" , model : "Premier Pro" , } , Model { regex : "LML41[34]DL(?:[);/ ]|$)" , model : "Premier Pro LTE" , } , Model { regex : "LM-X525" , model : "Q60" , } , Model { regex : "LM-X210K" , model : "X2" , } , Model { regex : "LG-K580" , model : "X Cam" , } , Model { regex : "LM-X510WM" , model : "X Power 3" , } , Model { regex : "LM-X(?:41[05]K|410S)" , model : "X4" , } , Model { regex : "LM-X(415[LS]|410L)" , model : "X4+" , } , Model { regex : "LM-X410(?:\\.FN|\\(FG\\))" , model : "K11" , } , Model { regex : "LM-X(?:320|410[UP]M)" , model : "K30" , } , Model { regex : "LMX130IM" , model : "W10" , } , Model { regex : "LM-X410" , model : "LM-X410" , } , Model { regex : "LM-X420N" , model : "X4 (2019)" , } , Model { regex : "(?:LG-X230|VS425)(?:[);/ ]|$)" , model : "K4" , } , Model { regex : "LM-X420" , model : "K40" , } , Model { regex : "LM-X430(?:[);/ ]|$)" , model : "K40S" , } , Model { regex : "LM-K410" , model : "K41S" , } , Model { regex : "LG-X220" , model : "K5" , } , Model { regex : "LM-X540" , model : "K50S" , } , Model { regex : "(?:802LG|LM-X520)(?:[);/ ]|$)" , model : "K50" , } , Model { regex : "402LG" , model : "Spray" , } , Model { regex : "L-02K" , model : "JoJo" , } , Model { regex : "(?:LM-X510[KLS]|X5-LG)" , model : "X5" , } , Model { regex : "LM-X625N1" , model : "X6" , } , Model { regex : "LM-X625N" , model : "X6 (2019)" , } , Model { regex : "LGMS210" , model : "Aristo" , } , Model { regex : "LM-X210[G]?" , model : "Aristo 2" , } , Model { regex : "LM-X220" , model : "Aristo 3" , } , Model { regex : "LM-V40(?:5|9N)?(?:[);/ ]|$)" , model : "V40 ThinQ" , } , Model { regex : "LM-(?:V500N|V450)(?:[);/ ]|$)" , model : "V50 ThinQ" , } , Model { regex : "LM-V510N" , model : "V50S ThinQ" , } , Model { regex : "LM-Q920N" , model : "Q92" , } , Model { regex : "LM-Q927L" , model : "Q9 One" , } , Model { regex : "(?:LG-)?(?:RS987|H901|H96[0128]|VS990)" , model : "V10" , } , Model { regex : "LG-X240" , model : "K8 (2017)" , } , Model { regex : "(?:LG-)?RS500" , model : "K8 4G" , } , Model { regex : "(?:LG-)?VS500" , model : "K8 V" , } , Model { regex : "LM-X212\\(G\\)" , model : "K8 (2018)" , } , Model { regex : "(?:LG-)?H91[058]" , model : "V20" , } , Model { regex : "(?:LG-)?H990(?:DS|N|T)?" , model : "V20" , } , Model { regex : "(?:LG-)?LS997" , model : "V20" , } , Model { regex : "(?:LG-)?VS995" , model : "V20" , } , Model { regex : "(?:LG-)?US999" , model : "V20" , } , Model { regex : "(?:VS996|LG-(?:H933|H93[012]|H932PR|[LU]S998|AS998)|LGM-V300[KLS])(?:[);/ ]|$)" , model : "V30" , } , Model { regex : "L-01J(?:[);/ ]|$)" , model : "V20 Pro" , } , Model { regex : "(?:L-01K|LGV35)(?:[);/ ]|$)" , model : "V30 Plus" , } , Model { regex : "L-51A(?:[);/ ]|$)" , model : "V60" , } , Model { regex : "(?:L-52A|LM-G900N?)(?:[);/ ]|$)" , model : "Velvet 5G" , } , Model { regex : "(?:LM-G910)(?:[);/ ]|$)" , model : "Velvet 4G" , } , Model { regex : "(?:A001LG|LM-V600)(?:[);/ ]|$)" , model : "V60 ThinQ 5G" , } , Model { regex : "(?:LG-)?VS410PP" , model : "Optimus Zone" , } , Model { regex : "LM-V350[N]?" , model : "V35" , } , Model { regex : "(?:LG-)?VS415PP" , model : "Optimus Zone 2" , } , Model { regex : "(?:LG-)?VS425PP" , model : "Optimus Zone 3" , } , Model { regex : "(?:LG-)?K100" , model : "K3" , } , Model { regex : "(?:LG-?)?(?:K|MS)33[02]" , model : "K7" , } , Model { regex : "(?:LG-?)?(?:K|MS)350" , model : "K8" , } , Model { regex : "VS500PP" , model : "K8 V" , } , Model { regex : "(?:LG-)?K420(?:N)?" , model : "K10" , } , Model { regex : "(?:LG-)?K430(?:DS|DSF|DSY)?" , model : "K10" , } , Model { regex : "(?:LG-)?M250N?" , model : "K10 (2017)" , } , Model { regex : "(?:LG-)?F670[KLS]?" , model : "K10" , } , Model { regex : "(?:LG-)?M255" , model : "K20" , } , Model { regex : "(?:LG-?)?[MT]P260" , model : "K20 Plus" , } , Model { regex : "LM-K200(?:[);/ ]|$)" , model : "K22" , } , Model { regex : "LM-K300(?:[);/ ]|$)" , model : "K31" , } , Model { regex : "LM-K420(?:[);/ ]|$)" , model : "K42" , } , Model { regex : "LM-K500(?:[);/ ]|$)" , model : "K51" , } , Model { regex : "LM-K520(?:[);/ ]|$)" , model : "K52" , } , Model { regex : "LM-Q510N(?:[);/ ]|$)" , model : "Q51" , } , Model { regex : "LM-Q630N?(?:[);/ ]|$)" , model : "Q61" , } , Model { regex : "(?:LG-)?M700(?:N|A|DSK|AN)?" , model : "Q6" , } , Model { regex : "LM-X440IM" , model : "W30" , } , Model { regex : "(?:LG-?)?K220" , model : "X Power" , } , Model { regex : "(?:LG-?)?M320" , model : "X Power 2" , } , Model { regex : "(?:LG-)?K371" , model : "Phoenix 2" , } , Model { regex : "(?:LG-)?M150" , model : "Phoenix 3" , } , Model { regex : "(?:LG-)?F100[SL]" , model : "Optimus Vu" , } , Model { regex : "(?:LG-)?P880" , model : "Optimus 4X HD" , } , Model { regex : "(?:LG-)?(H340n?|H324)" , model : "Leon" , } , Model { regex : "(?:LG-)?H342" , model : "Leon 4G LTE" , } , Model { regex : "(?:LG-)?H422" , model : "Spirit" , } , Model { regex : "(?:LG)?C660" , model : "Optimus Pro" , } , Model { regex : "LML21(?:1B|2V)L" , model : "Rebel 4" , } , Model { regex : "VS876" , model : "Lucid 3" , } , Model { regex : "VS880(PP)?" , model : "G Vista" , } , Model { regex : "VS820" , model : "Lancet" , } , Model { regex : "VS870 4G" , model : "Lucid 2" , } , Model { regex : "VS810PP" , model : "Transpyre" , } , Model { regex : "LM-F100N?(?:[);/ ]|$)" , model : "WING" , } , Model { regex : "LGUK410" , model : "G Pad 7.0\" LTE" , } , Model { regex : "LGLK430" , model : "G Pad F 7.0\"" , } , Model { regex : "LGLK430" , model : "G Pad F 7.0\"" , } , Model { regex : "LG-V490" , model : "G Pad 8.0" , } , Model { regex : "LGT01" , model : "G Pad 8.0\" LTE" , } , Model { regex : "LG-V500" , model : "G Pad 8.3" , } , Model { regex : "LG-V700" , model : "G Pad 10.1" , } , Model { regex : "LG-V935" , model : "G Pad II 10.1" , } , Model { regex : "LG-V521" , model : "G Pad X 8.0" , } , Model { regex : "VK810" , model : "G Pad 8.3 LTE" , } , Model { regex : "VK815" , model : "G Pad X 8.3" , } , Model { regex : "LGT32" , model : "Qua Tad PZ" , } , Model { regex : "LGT31" , model : "Qua Tad PX" , } , Model { regex : "webOS.TV" , model : "WebOS TV" , } , Model { regex : "LGE_DLNA_SDK|NetCast" , model : "NetCast" , } , Model { regex : "LG Watch Urbane" , model : "Watch Urbane" , } , Model { regex : "(LM-[A-Z]{1}[0-9]{3}([A-Z]{1,3})?)" , model : "$1" , } , Model { regex : "LGE(?: |-LG| LG-AX|-)([a-z0-9]+)" , model : "$1" , } , Model { regex : "FBDV/LG-([a-z0-9]+);FBSV" , model : "$1" , } , Model { regex : "LGE;([a-z0-9\\-]+)" , model : "$1" , } , Model { regex : "LG[ _\\-](V90.*|Optimus[ _\\-]Pad.*) Build" , model : "$1" , } , Model { regex : "LG(?:/|-LG| |-)?([^/;]*) Build" , model : "$1" , } , Model { regex : "LG(?:/|-LG| |-)?([a-z0-9]+)" , model : "$1" , } , Model { regex : "LG; ([a-z0-9 ]+)" , model : "$1" , } , Model { regex : "portalmmm/2.0 ((?:KE|KG|KP|L3)[a-z0-9]+)" , model : "$1" , } , Model { regex : "(VX[0-9]+)" , model : "$1" , } , Model { regex : "Web0S; Linux/SmartTV" , model : "" , } ,]) , }) , ("ConCorde" , Brand { regex : "ConCorde ([^/;]+) Build|Concorde_Raptor_Z55(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Concorde_(Raptor_Z55)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "ConCorde Tab ?([^/;]+) Build" , model : "Tab $1" , } , Model { regex : "ConCorde ReadMan ?([^/;]+) Build" , model : "ReadMan $1" , } , Model { regex : "ConCorde ([^/;]+) Build" , model : "$1" , } ,]) , }) , ("PolyPad" , Brand { regex : "POLY ?PAD" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "POLY ?PAD[_ \\.]([a-z0-9]+)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "POLY ?PAD[_\\.]([a-z0-9]+)" , model : "$1" , } ,]) , }) , ("mPhone" , Brand { regex : "mPhone ?([68]|7 Plus|7s)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Datalogic" , Brand { regex : "(?:MEMOR 10)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("Memor 10") , models : None , }) , ("Q.Bell" , Brand { regex : "(QPHONE[_ ](?:10.1|9.[12]|7.1|5.[246])|QTAB10EW)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(QPHONE[_ ](?:10.1|9.[12]|7.1|5.[246]))(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "QTAB10EW" , model : "QTAB10EW" , } ,]) , }) , ("Kiano" , Brand { regex : "Kiano|Elegance_[45]_[015](?:_PRO)?|Elegance 6|CORE 10.1 DUAL 3G|Intelect ?(7|8|10)|Slim ?Tab ?\\d+(?:[_ ]3GR?)?(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Slim ?Tab ?(\\d+)(?:[_ ]3GR?)?" , model : "Slim Tab $1" , } , Model { regex : "CORE 10.1 DUAL 3G" , model : "CORE 10.1 DUAL 3G" , } , Model { regex : "Elegance_(5)_([51])_Pro" , model : "Elegance $1.$2\" Pro" , } , Model { regex : "Elegance_([45])_([015])" , model : "Elegance $1.$2\"" , } , Model { regex : "Elegance 6" , model : "Elegance 6 5.85\"" , } , Model { regex : "(Kiano)?(Intelect|Elegance) ?(7|8|10)?" , model : "$2 $3" , } , Model { regex : "Kiano[ _]([^;/]+) Build" , model : "$1" , } ,]) , }) , ("Opsson" , Brand { regex : "Opsson|IUSAI" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "IUSAI[ _]([^/;]+) Build" , model : "Iusai $1" , } , Model { regex : "IUSAI[ _]([^/;\\)]+)[/;\\)]" , model : "Iusai $1" , } , Model { regex : "Opsson[ _]([^/;]+) Build" , model : "$1" , } , Model { regex : "(?:Opsson-)?Opsson[ -_]([^/;]+)/" , model : "$1" , } ,]) , }) , ("Roku" , Brand { regex : "Roku/DVP|QSP; Roku" , device : Some ("tv") , model : Some ("Digital Video Player") , models : None , }) , ("Macoox" , Brand { regex : "(MC-X7MINI)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("MC-X7 Mini") , models : None , }) , ("Goophone" , Brand { regex : "Goophone[ _]|(?:M(G492|L7[JK]2)CH|MN(4A2|8J2)ZP|MGA92ZP|MKU82ZP|MNGW2CH|MNH02CH|MNRM2CH)[/]A(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(?:MG492CH|MGA92ZP)[/]A(?:[);/ ]|$)" , model : "I6 Plus" , } , Model { regex : "ML7[JK]2CH[/]A(?:[);/ ]|$)" , model : "I6" , } , Model { regex : "MKU82ZP[/]A(?:[);/ ]|$)" , model : "I6S" , } , Model { regex : "MNGW2CH[/]A(?:[);/ ]|$)" , model : "I6S Plus" , } , Model { regex : "(?:MN4A2ZP|MNH02CH)[/]A(?:[);/ ]|$)" , model : "I7" , } , Model { regex : "(?:MN8J2ZP|MNRM2CH)[/]A(?:[);/ ]|$)" , model : "I7 Plus" , } , Model { regex : "S4 MEGA(?:[);/ ]|$)" , model : "S4 Mega" , } , Model { regex : "Goophone i([69])(?:[);/ ]|$)" , model : "I$1" , } ,]) , }) , ("Klipad" , Brand { regex : "KLIPAD_|(?:KL-V905|KL4889|KL9878|7589AN)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(?:KLIPAD_)?(V355B?|KL600|KL-V905)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "(KL4889|7589AN|KL9878)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Blackview" , Brand { regex : "Blackview|(BV([24-9]000|[46]900|(5[1589]|9[15689])00|6[1368]00)(?:[ _](?:PRO))?|(P10000(?:[ _](?:PRO))?)|omega[ _]pro|Alife[ _][PS]1|Heatwave|DM550|BV9700Pro|(?<!Lenovo[_ ])A[68]0(?:Pro)?\\))|A[86]0Plus|BL6000Pro" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "A60Pro\\)" , model : "A60 Pro" , } , Model { regex : "A60\\)" , model : "A60" , } , Model { regex : "A80Pro(?:[);/ ]|$)" , model : "A80 Pro" , } , Model { regex : "A([86]0)Plus(?:[);/ ]|$)" , model : "A$1 Plus" , } , Model { regex : "(BV6000S)" , model : "$1" , } , Model { regex : "(BV9700|BL6000)Pro" , model : "$1 Pro" , } , Model { regex : "Blackview (A[78]|E7S)" , model : "$1" , } , Model { regex : "BV9000Pro-F" , model : "BV9000 Pro F" , } , Model { regex : "(BV([48]000|9[56]00|6[83]00))Pro" , model : "$1 Pro" , } , Model { regex : "(BV6[13]00)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "(BV([24-9]000|6[69]00|4900|(5[1589]|9[15689])00)(?:[ _](?:PRO))?)" , model : "$1" , } , Model { regex : "(P10000(?:[ _](?:PRO))?)" , model : "$1" , } , Model { regex : "omega[ _]pro" , model : "Omega Pro" , } , Model { regex : "(Alife[ _][PS]1|DM550|Heatwave)" , model : "$1" , } ,]) , }) , ("Razer" , Brand { regex : "Phone 2" , device : Some ("smartphone") , model : Some ("Phone 2") , models : None , }) , ("TiPhone" , Brand { regex : "TiPhone ?([a-z0-9]+)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Fly" , Brand { regex : "Fly(?!Flow|touch)|Power Plus 5000|Photo Pro|Slimline|Life (?:Ace|Jet|Sky|Compact 4G|Geo)|FS50[1-9]|FS51[0-8]|FS52[0-9]|FS530|FS55[134]|FS40[1-9]|FS45[1-9]|4FS06|MERIDIAN-|(?:IQ(?!10[134]0)[0-9]{3,}[i]?)[ _]?(?:Quad|Firebird|Quattro|Turbo|Magic)?(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(?:Fly_)?IQ310(?:[);/ ]|$)" , model : "Panorama" , } , Model { regex : "(?:Fly_)?IQ236(?:[);/ ]|$)" , model : "Victory" , } , Model { regex : "Slimline(?:[);/ ]|$)" , model : "Slimline" , } , Model { regex : "Power Plus 5000(?:[);/ ]|$)" , model : "Power Plus 5000" , } , Model { regex : "Photo Pro(?:[);/ ]|$)" , model : "Photo Pro" , } , Model { regex : "Life Ace(?:[);/ ]|$)" , model : "Life Ace" , } , Model { regex : "Life Jet(?:[);/ ]|$)" , model : "Life Jet" , } , Model { regex : "Life Sky(?:[);/ ]|$)" , model : "Life Sky" , } , Model { regex : "Life Geo(?:[);/ ]|$)" , model : "Life Geo" , } , Model { regex : "Life Compact 4G(?:[);/ ]|$)" , model : "Life Compact 4G" , } , Model { regex : "FS506" , model : "Cirrus 3" , } , Model { regex : "FS403" , model : "Cumulus 1" , } , Model { regex : "FS508" , model : "Cirrus 6" , } , Model { regex : "FS511" , model : "Cirrus 7" , } , Model { regex : "FS509" , model : "Nimbus 9" , } , Model { regex : "FS406" , model : "Stratus 5" , } , Model { regex : "FS404" , model : "Stratus 3" , } , Model { regex : "FS504" , model : "Cirrus 2" , } , Model { regex : "FS407" , model : "Stratus 6" , } , Model { regex : "FS401" , model : "Stratus 1" , } , Model { regex : "FS402" , model : "Stratus 2" , } , Model { regex : "FS501" , model : "Nimbus 3" , } , Model { regex : "FS502" , model : "Cirrus 1" , } , Model { regex : "FS507" , model : "Cirrus 4" , } , Model { regex : "FS505" , model : "Nimbus 7" , } , Model { regex : "FS551" , model : "Nimbus 4" , } , Model { regex : "FS514" , model : "Cirrus 8" , } , Model { regex : "FS553" , model : "Cirrus 9" , } , Model { regex : "FS554" , model : "Power Plus FHD" , } , Model { regex : "FS517" , model : "Cirrus 11" , } , Model { regex : "FS516" , model : "Cirrus 12" , } , Model { regex : "FS518" , model : "Cirrus 13" , } , Model { regex : "FS520" , model : "Selfie 1" , } , Model { regex : "FS521" , model : "Power Plus 1" , } , Model { regex : "FS522" , model : "Cirrus 14" , } , Model { regex : "FS523" , model : "Cirrus 16" , } , Model { regex : "FS524" , model : "Knockout" , } , Model { regex : "FS526" , model : "Power Plus 2" , } , Model { regex : "FS527" , model : "Nimbus 17" , } , Model { regex : "FS528" , model : "Memory Plus" , } , Model { regex : "FS529" , model : "Сhamp" , } , Model { regex : "FS530" , model : "Power Plus XXL" , } , Model { regex : "FS454" , model : "Nimbus 8" , } , Model { regex : "FS452" , model : "Nimbus 2" , } , Model { regex : "FS512" , model : "Nimbus 10" , } , Model { regex : "FS510" , model : "Nimbus 12" , } , Model { regex : "FS451" , model : "Nimbus 1" , } , Model { regex : "FS405" , model : "Stratus 4" , } , Model { regex : "FS408" , model : "Stratus 8" , } , Model { regex : "FS409" , model : "Stratus 9" , } , Model { regex : "FS455" , model : "Nimbus 11" , } , Model { regex : "FS456" , model : "Nimbus 14" , } , Model { regex : "FS457" , model : "Nimbus 15" , } , Model { regex : "FS459" , model : "Nimbus 16" , } , Model { regex : "FS458" , model : "Stratus 7" , } , Model { regex : "(?:Fly_)?IQ237(?:[);/ ]|$)" , model : "Dynamic" , } , Model { regex : "(?:Fly_)?IQ238(?:[);/ ]|$)" , model : "Jazz" , } , Model { regex : "(?:Fly_)?IQ240(?:[);/ ]|$)" , model : "Whizz" , } , Model { regex : "(?:Fly_)?IQ255(?:[);/ ]|$)" , model : "Pride" , } , Model { regex : "(?:Fly_)?IQ270(?: Firebird)?(?:[);/ ]|$)" , model : "Firebird" , } , Model { regex : "(?:Fly_)?IQ275(?:[);/ ]|$)" , model : "Marathon" , } , Model { regex : "(?:Fly_)?IQ285(?: Turbo)?(?:[);/ ]|$)" , model : "Turbo" , } , Model { regex : "(?:Fly_)?IQ430(?:[);/ ]|$)" , model : "Evoke" , } , Model { regex : "(?:Fly_)?IQ431(?:[);/ ]|$)" , model : "Glory" , } , Model { regex : "(?:Fly_)?IQ432(?:[);/ ]|$)" , model : "Era Nano 1" , } , Model { regex : "(?:Fly_)?IQ436(?:[);/ ]|$)" , model : "Era Nano 3" , } , Model { regex : "(?:Fly_)?IQ4490(?:[);/ ]|$)" , model : "Era Nano 4" , } , Model { regex : "(?:Fly_)?IQ434(?:[);/ ]|$)" , model : "Era Nano 5" , } , Model { regex : "(?:Fly_)?IQ4406(?:[);/ ]|$)" , model : "Era Nano 6" , } , Model { regex : "(?:Fly_)?IQ436i(?:[);/ ]|$)" , model : "Era Nano 9" , } , Model { regex : "(?:Fly_)?IQ440(?:[);/ ]|$)" , model : "Energy" , } , Model { regex : "(?:Fly_)?IQ4401(?:[);/ ]|$)" , model : "Era Energy 2" , } , Model { regex : "(?:Fly_)?IQ441(?:[);/ ]|$)" , model : "Radiance" , } , Model { regex : "(?:Fly_)?IQ442 Quad(?:[);/ ]|$)" , model : "Miracle 2" , } , Model { regex : "(?:Fly_)?IQ442(?:[);/ ]|$)" , model : "Miracle" , } , Model { regex : "(?:Fly_)?IQ443(?:[);/ ]|$)" , model : "Trend" , } , Model { regex : "(?:Fly_)?IQ444(?: Quattro)?(?:[);/ ]|$)" , model : "Diamond 2" , } , Model { regex : "(?:Fly_)?IQ445(?:[);/ ]|$)" , model : "Genius" , } , Model { regex : "(?:Fly_)?IQ446(?: Magic)?(?:[);/ ]|$)" , model : "Magic" , } , Model { regex : "(?:Fly_)?IQ447(?:[);/ ]|$)" , model : "Era Life 1" , } , Model { regex : "(?:Fly_)?IQ456(?:[);/ ]|$)" , model : "Era Life 2" , } , Model { regex : "(?:Fly_)?IQ4409 Quad(?:[);/ ]|$)" , model : "Era Life 4" , } , Model { regex : "(?:Fly_)?IQ448(?:[);/ ]|$)" , model : "Chic" , } , Model { regex : "(?:Fly_)?IQ449(?:[);/ ]|$)" , model : "Pronto" , } , Model { regex : "(?:Fly_)?IQ450(?:[);/ ]|$)" , model : "Horizon" , } , Model { regex : "(?:Fly_)?IQ450[ _]Quattro(?:[);/ ]|$)" , model : "Horizon 2" , } , Model { regex : "(?:Fly_)?IQ451(?:[);/ ]|$)" , model : "Vista" , } , Model { regex : "(?:Fly_)?IQ452 Quad(?:[);/ ]|$)" , model : "Ego Vision 1" , } , Model { regex : "(?:Fly_)?IQ454(?:[);/ ]|$)" , model : "Evo Tech 1" , } , Model { regex : "(?:Fly_)?IQ4403(?:[);/ ]|$)" , model : "Energy 3" , } , Model { regex : "(?:Fly_)?IQ4404(?:[);/ ]|$)" , model : "Spark" , } , Model { regex : "(?:Fly_)?IQ4410 Quad(?:[);/ ]|$)" , model : "Phoenix" , } , Model { regex : "(?:Fly_)?IQ4411(?:[);/ ]|$)" , model : "Energy 2" , } , Model { regex : "(?:Fly_)?IQ4412 Quad(?:[);/ ]|$)" , model : "Coral" , } , Model { regex : "(?:Fly_)?IQ4413[ _]Quad(?:[);/ ]|$)" , model : "Evo Chic 3" , } , Model { regex : "(?:Fly_)?IQ4414 Quad(?:[);/ ]|$)" , model : "Evo Tech 3" , } , Model { regex : "(?:Fly_)?IQ4415 Quad(?:[);/ ]|$)" , model : "Era Style 3" , } , Model { regex : "(?:Fly_)?IQ4504 Quad(?:[);/ ]|$)" , model : "Evo Energy 5" , } , Model { regex : "(?:Fly_)?IQ([0-9]+[i]? ?(?:Quad|Firebird|Quattro)?)(?:[);/ ]|$)" , model : "IQ$1" , } , Model { regex : "Fly[ _\\-]?([a-z0-9_]+)/" , model : "$1" , } , Model { regex : "Flylife[ _\\-]?([^/;]+) Build" , model : "Flylife $1" , } , Model { regex : "Fly[ _\\-]?([a-z0-9]+)" , model : "$1" , } , Model { regex : "MERIDIAN-([a-z0-9]+)" , model : "$1" , } ,]) , }) , ("Danew" , Brand { regex : "Dslide ?([^;/]+) Build|Konnect_?(?:402|50[246]|60[127])|GEODROID_A5|Dslide ?(?:714|101[45]|1013QC)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Konnect_?(402|50[246]|60[127])" , model : "Konnect $1" , } , Model { regex : "Dslide ?([^;/]+) Build" , model : "DSlide $1" , } , Model { regex : "GEODROID_A5" , model : "Geodroid A5" , } , Model { regex : "Dslide ?(714|1013QC|101[45])" , model : "Dslide $1" , } ,]) , }) , ("Nexian" , Brand { regex : "S?Nexian" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "S?Nexian[ ]?([a-z0-9\\-]+)" , model : "$1" , } , Model { regex : "S?Nexian-([a-z0-9]+)" , model : "$1" , } ,]) , }) , ("Kata" , Brand { regex : "Kata[ _-]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Kata[ _-](C3|L1|M3s|M4|V[56])(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Kata[ _-]i5-\\w" , model : "I5" , } , Model { regex : "Kata-(T5)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Kata-Tmini4(?:[);/ ]|$)" , model : "T Mini 4" , } , Model { regex : "Kata Box 2(?:[);/ ]|$)" , model : "Box 2" , } ,]) , }) , ("Shuttle" , Brand { regex : "(PNT-704[025])(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Mio" , Brand { regex : "MIO(?:/)?([a-z0-9]+)|(?:MOBIX M6|Mio TouchPad 7 Quad Core)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "MOBIX M6(?:[);/ ]|$)" , model : "Mobix M6" , } , Model { regex : "MIO(?:/)?([a-z0-9]+)" , model : "$1" , } , Model { regex : "Mio TouchPad 7 Quad Core" , model : "TouchPad 7 Quad Core" , } ,]) , }) , ("Acteck" , Brand { regex : "BLECK" , device : Some ("tablet") , model : Some ("Bleck") , models : None , }) , ("Touchmate" , Brand { regex : "TOUCHMATE|(TM-(?:MID1050WKD|MID1020A|MID794C|MID795|MID710|MID798|MID792|MID788D|SM500N|SM410|MID1010))" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(TM-(?:MID1020A|MID794C|MID795|MID710|MID798|MID792|MID788D|MID1010))" , model : "$1" , } , Model { regex : "TM-MID1050WKD" , model : "Mega Matrix 10.1\" 3G" , } , Model { regex : "(TM-(?:SM500N|SM410))" , model : "$1" , } , Model { regex : "Touchmate ([^/;]+) Build" , model : "$1" , } ,]) , }) , ("SPC" , Brand { regex : "(?:Gravity Max|GRAVITY_OCTACORE|SPC SMART LITE|SPC_ALIEN(?:_STICK)?|SPC Glow9.7)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "GRAVITY_OCTACORE" , model : "Gravity OctaCore" , } , Model { regex : "Gravity Max" , model : "Gravity Max" , } , Model { regex : "SPC Glow9.7" , model : "Glow 9.7\"" , } , Model { regex : "SPC SMART LITE" , model : "Smart Lite" , } , Model { regex : "SPC_ALIEN_STICK" , model : "Alien Stick" , } , Model { regex : "SPC_ALIEN" , model : "Alien" , } ,]) , }) , ("Sencor" , Brand { regex : "Sencor|ELEMENT[ _]?(?:7|8|9\\.7|10[ _]1)(?:[ _]?V[23])?(?:[);/ ]|$)|ELEMENT[ _]?(?:P[0-9]+|10.1 Q001)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "(?:SENCOR[ _])?Element (10\\.1) (Q001)" , model : "Element $1\" $2" , } , Model { regex : "(?:SENCOR[ _])?ELEMENT[ _]?7[ _]?V3" , model : "Element 7 V3" , } , Model { regex : "(?:SENCOR[ _])?ELEMENT[ _]?7[ _]?V2[ _]BASIC" , model : "Element 7 V2 Basic" , } , Model { regex : "(?:SENCOR[ _])?ELEMENT[ _]?7[ _]?V2" , model : "Element 7 V2" , } , Model { regex : "(?:SENCOR[ _])?ELEMENT[ _]8[ _]?V3" , model : "Element 8 V3" , } , Model { regex : "(?:SENCOR[ _])?ELEMENT[ _]8[ _]?V2" , model : "Element 8 V2" , } , Model { regex : "(?:SENCOR[ _])?ELEMENT8" , model : "Element 8" , } , Model { regex : "(?:SENCOR[ _])?ELEMENT[ _]9\\.7[ _]?V3" , model : "Element 9.7 V3" , } , Model { regex : "(?:SENCOR[ _])?ELEMENT[ _]9\\.7[ _]?V2" , model : "Element 9.7 V2" , } , Model { regex : "(?:SENCOR[ _])?ELEMENT[ _]9\\.7" , model : "Element 9.7" , } , Model { regex : "(?:SENCOR[ _])?ELEMENT10[ _]1" , model : "Element 10.1" , } , Model { regex : "(?:SENCOR[ _])?(7Q105)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "(?:SENCOR[ _])?ELEMENT[ _]?P([0-9]+)" , model : "Element P$1" , } , Model { regex : "Sencor[ _]([^;/]+) Build" , model : "$1" , } ,]) , }) , ("ANS" , Brand { regex : "UL40 Build" , device : Some ("smartphone") , model : Some ("UL40") , models : None , }) , ("BenQ-Siemens" , Brand { regex : "BENQ-SIEMENS - ([a-z0-9]+)" , device : Some ("feature phone") , model : Some ("$1") , models : None , }) , ("Engel" , Brand { regex : "(EN1007Q)plus(?:[);/ ]|$)" , device : Some ("tv") , model : Some ("$1 Plus") , models : None , }) , ("Mito" , Brand { regex : "MITO[- _](?:[AT]\\d+|311|A19_[12]GB|A37[_ ]Z1)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "MITO[- _](A(?:1[0678]|19_[12]GB|21|3[589]|55|180|2[36]0|33|322|313|3[136]0|[35]50|6[89]|7[235]|82|[356]0|810|950|80)|311|A37[_ ]Z1)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "MITO[ _](T(?:8|10|[136]5|3[03]0|510|71|89|888))(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Hasee" , Brand { regex : "Hasee" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Hasee ([^;/]+) Build" , model : "$1" , } , Model { regex : "Hasee ([^;/)]+)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Walton" , Brand { regex : "Walton|Walpad|Primo[ _](C[1234]?|D[1-689]|E[1-589]|F8s|S7|EF[23]?|EM|F[1-79]i?|G[1-9]|GF[234]?|GH[23]?|GM|H[2-689M]|H7s|N[F1]?|NX2?|R[1-46]|R[HM]2?|RX[23]?|S[1-6]|V1|X[1-4]|Z|ZX)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Walpad[ _]([^;/)]+)(?: Build|[);])" , model : "Primo Walpad $1" , } , Model { regex : "Primo S6 infinity" , model : "Primo S6 Infinity" , } , Model { regex : "Primo H8 Pro(?:[);/ ]|$)" , model : "Primo H8 Pro" , } , Model { regex : "Primo H8(?:[);/ ]|$)" , model : "Primo H8 Turbo" , } , Model { regex : "Primo[ _]([^;/)]+)(?: Build|[;)])" , model : "Primo $1" , } , Model { regex : "Walton[ _]([^;/)]+)(?: Build|[;)])" , model : "$1" , } ,]) , }) , ("KREZ" , Brand { regex : "KREZ[_ ]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "KREZ[_ ](SL502)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "KREZ[_ ](TM100[12]S8)(?:[);/ ]|$)" , model : "$1 3G" , } ,]) , }) , ("Ericsson" , Brand { regex : "(?:Ericsson(?:/ )?[a-z0-9]+)|(?:R380 2.0 WAP1.1)" , device : Some ("feature phone") , model : None , models : Some (& [Model { regex : "Ericsson(?:/ )?([a-z0-9]+)" , model : "$1" , } , Model { regex : "R380 2.0 WAP1.1" , model : "R380" , } ,]) , }) , ("Tecno Mobile" , Brand { regex : "Tecno|Phantom6|Phantom6-Plus|DP7C Pro-SGA1" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Phantom6-Plus" , model : "Phantom 6 Plus" , } , Model { regex : "Phantom6" , model : "Phantom 6" , } , Model { regex : "TECNO[ _]AB7(?:[);/ ]|$)" , model : "Phantom 9" , } , Model { regex : "TECNO[ _]LC6a(?:[);/ ]|$)" , model : "Pouvoir 3 Air" , } , Model { regex : "TECNO-W3" , model : "W3" , } , Model { regex : "TECNO[ _]F4 Pro(?:[);/ ]|$)" , model : "F4 Pro" , } , Model { regex : "TECNO[ _]ID6(?:[);/ ]|$)" , model : "Camon iClick 2" , } , Model { regex : "TECNO[ _]IN2(?:[);/ ]|$)" , model : "Camon iSky" , } , Model { regex : "Tecno[ _]7C(?:[);/ ]|$)" , model : "DroidPad 7C" , } , Model { regex : "DP7C Pro-SGA1(?:[);/ ]|$)" , model : "DroidPad 7C Pro" , } , Model { regex : "TECNO[ _]DP10A Pro(?:[);/ ]|$)" , model : "DroidPad 10A Pro" , } , Model { regex : "TECNO[ _]P904(?:[);/ ]|$)" , model : "DroidPad 10D 4G" , } , Model { regex : "Tecno[ _]CB7[j]?" , model : "Camon i4" , } , Model { regex : "Tecno[ _]CF7(?:[);/ ]|$)" , model : "Camon 11" , } , Model { regex : "Tecno[ _]CC7(?:[);/ ]|$)" , model : "Camon 12" , } , Model { regex : "Tecno[ _](?:CC6|KC3)(?:[);/ ]|$)" , model : "Camon 12 Air" , } , Model { regex : "Tecno[ _-]CD7(?:[);/ ]|$)" , model : "Camon 15" , } , Model { regex : "Tecno[ _-]CD8(?:[);/ ]|$)" , model : "Camon 15 Pro" , } , Model { regex : "Tecno[ _-]CE9h(?:[);/ ]|$)" , model : "Camon 16" , } , Model { regex : "Tecno[ _-]CE9(?:[);/ ]|$)" , model : "Camon 16 Premier" , } , Model { regex : "Tecno[ _-]CE8(?:[);/ ]|$)" , model : "Camon 16 Pro" , } , Model { regex : "Tecno[ _-]CD6j(?:[);/ ]|$)" , model : "Camon 16 S" , } , Model { regex : "Tecno[ _-]CE7j(?:[);/ ]|$)" , model : "Camon 16 SE" , } , Model { regex : "Tecno[ _-]CG6(?:[);/ ]|$)" , model : "Camon 17" , } , Model { regex : "TECNO[ _]LD7j?(?:[);/ ]|$)" , model : "Pova" , } , Model { regex : "Tecno[ _](?:KC8|KC2j?)(?:[);/ ]|$)" , model : "Spark 4" , } , Model { regex : "Tecno[ _]KC6(?:[);/ ]|$)" , model : "Spark 4 Air" , } , Model { regex : "Tecno[ _]BB4k(?:[);/ ]|$)" , model : "Spark 4 Lite" , } , Model { regex : "Tecno[ _]KD6(?:[);/ ]|$)" , model : "Spark 5 Air" , } , Model { regex : "Tecno[ _]KD7(?:[);/ ]|$)" , model : "Spark 5 Pro" , } , Model { regex : "TECNO[ _]KE7(?:[);/ ]|$)" , model : "Spark 6" , } , Model { regex : "TECNO[ _]KE6j?(?:[);/ ]|$)" , model : "Spark 6 Air" , } , Model { regex : "TECNO[ _]KE5[jk]?(?:[);/ ]|$)" , model : "Spark 6 Go" , } , Model { regex : "Tecno[ _]DP8D(?:[);/ ]|$)" , model : "DroidPad 8D" , } , Model { regex : "Tecno[ _]LB8a?" , model : "Pouvoir 3 Plus" , } , Model { regex : "Tecno[ _-]J8(?:[);/ ]|$)" , model : "Boom J8" , } , Model { regex : "TECNO S9" , model : "S9" , } , Model { regex : "Tecno ([^;/]+) Build" , model : "$1" , } , Model { regex : "Tecno[ _-]?([a-z0-9_\\-]+)" , model : "$1" , } ,]) , }) , ("Maze" , Brand { regex : "(?:Alpha[_ ]X|Maze Alpha)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Alpha[_ ]X(?:[);/ ]|$)" , model : "Alpha X" , } , Model { regex : "Maze Alpha(?:[);/ ]|$)" , model : "Alpha" , } ,]) , }) , ("bq" , Brand { regex : "Aquaris|bq [^/;]+ Build|BQS[-_]([0-9]{4})|(BQ(ru)?[_ -][0-9]{3,4})|BQ5059|BQ1008G|BQru_BQru-" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "BQ(?:ru)?-(?:5209L|5044)(?:[);/ ]|$)" , model : "Strike LTE" , } , Model { regex : "BQ(?:ru)?-(?:6035L)(?:[);/ ]|$)" , model : "Strike Power Max" , } , Model { regex : "BQ(?:ru)?-(?:5535L)(?:[);/ ]|$)" , model : "Strike Power Plus" , } , Model { regex : "BQ(S|ru)?-(?:5070|6040L)(?:[);/ ]|$)" , model : "Magic" , } , Model { regex : "BQ(S|ru)?-(?:6424L)(?:[);/ ]|$)" , model : "Magic O" , } , Model { regex : "BQ(?:S|ru)?-(?:5730L)(?:[);/ ]|$)" , model : "Magic C" , } , Model { regex : "BQ(?:S|ru)?-(?:5731L)(?:[);/ ]|$)" , model : "Magic S" , } , Model { regex : "BQ(?:S|ru)?-5745L(?:[);/ ]|$)" , model : "Clever" , } , Model { regex : "BQ(?:S|ru)?-5533G(?:[);/ ]|$)" , model : "Fresh" , } , Model { regex : "BQ(?:S|ru)?-5031G(?:[);/ ]|$)" , model : "Fun" , } , Model { regex : "BQ(?:S|ru)?-(?:5732L)(?:[);/ ]|$)" , model : "Aurora SE" , } , Model { regex : "BQ(?:S|ru)?-6430L(?:[);/ ]|$)" , model : "Aurora" , } , Model { regex : "BQ(?:S|ru)?-6630L(?:[);/ ]|$)" , model : "Magic L" , } , Model { regex : "BQ-9011[G]?(?:[);/ ]|$)" , model : "Vision" , } , Model { regex : "BQ-8068L(?:[);/ ]|$)" , model : "Hornet Plus Pro" , } , Model { regex : "BQ-8067L" , model : "Hornet Plus" , } , Model { regex : "BQ-8052G" , model : "BQ-8052G" , } , Model { regex : "BQ-8041L" , model : "Art" , } , Model { regex : "BQ-7084G" , model : "Simple" , } , Model { regex : "BQ-7061G" , model : "Andros" , } , Model { regex : "BQ(ru)?-(7082)" , model : "Armor" , } , Model { regex : "BQ-7051G" , model : "Elba" , } , Model { regex : "BQ-7036L" , model : "Hornet" , } , Model { regex : "BQ-7022(G)?" , model : "Canion" , } , Model { regex : "BQ-7021G" , model : "Hit" , } , Model { regex : "BQ-7010G" , model : "Max" , } , Model { regex : "BQ-7006G" , model : "Union" , } , Model { regex : "BQ-7003" , model : "Jamaica" , } , Model { regex : "BQ-6200L|BQ-6000L" , model : "Aurora" , } , Model { regex : "BQ-6631G" , model : "Surf" , } , Model { regex : "BQ-6022G" , model : "Aura" , } , Model { regex : "BQ(ru)?[ -]6015L" , model : "Universe" , } , Model { regex : "BQ(?:S|ru)?-(?:5525|6030G|6010G)" , model : "Practic" , } , Model { regex : "BQ-6001L|BQ-6050" , model : "Jumbo" , } , Model { regex : "BQ-5707G(?:[);/ ]|$)" , model : "Next Music" , } , Model { regex : "BQ-5702(?:[);/ ]|$)" , model : "Spring" , } , Model { regex : "BQ-5700L(?:[);/ ]|$)" , model : "Space X" , } , Model { regex : "BQ-(?:5591|551[89]G)(?:[);/ ]|$)" , model : "Jeans" , } , Model { regex : "BQ-5522" , model : "Next" , } , Model { regex : "BQ-5520L(?:[);/ ]|$)" , model : "Silk" , } , Model { regex : "BQ-5519L(?:[);/ ]|$)" , model : "Fast Plus" , } , Model { regex : "BQ-5540L(?:[);/ ]|$)" , model : "Fast Pro" , } , Model { regex : "BQ-5517L(?:[);/ ]|$)" , model : "Twin Pro" , } , Model { regex : "BQ-5516L(?:[);/ ]|$)" , model : "Twin" , } , Model { regex : "BQS-5515(?:[);/ ]|$)" , model : "Wide" , } , Model { regex : "BQ-5515[L]?(?:[);/ ]|$)" , model : "Fast" , } , Model { regex : "BQ-(?:5512L|5528L)(?:[);/ ]|$)" , model : "Strike Forward" , } , Model { regex : "BQ-5511L(?:[);/ ]|$)" , model : "Bliss" , } , Model { regex : "BQS[_ ]5505(?:[);/ ]|$)" , model : "Amsterdam" , } , Model { regex : "BQ(?:ru)?-5510(?:[);/ ]|$)" , model : "Strike Power Max 4G" , } , Model { regex : "BQ(?:ru)?-(?:5521|5594)(?:[);/ ]|$)" , model : "Strike Power Max" , } , Model { regex : "BQ-5508L(?:[);/ ]|$)" , model : "Next LTE" , } , Model { regex : "BQ-5507L(?:[);/ ]|$)" , model : "Iron Max" , } , Model { regex : "BQ(?:ru)?-5504(?:[);/ ]|$)" , model : "Strike Selfie Max" , } , Model { regex : "BQ(?:ru)?-5503(?:[);/ ]|$)" , model : "Nice 2" , } , Model { regex : "BQ(?:ru)?-6045L(?:[);/ ]|$)" , model : "Nice" , } , Model { regex : "BQ(?:ru)?-4030G(?:[);/ ]|$)" , model : "Nice Mini" , } , Model { regex : "BQS-5502(?:[);/ ]|$)" , model : "Hammer" , } , Model { regex : "BQS-5501(?:[);/ ]|$)" , model : "Kawasaki" , } , Model { regex : "BQS-5500(?:[);/ ]|$)" , model : "Vancouver" , } , Model { regex : "BQ-5500L(?:[);/ ]|$)" , model : "Advance" , } , Model { regex : "BQ-5302G(?:[);/ ]|$)" , model : "Velvet 2" , } , Model { regex : "BQ-5301(?:[);/ ]|$)" , model : "Strike View" , } , Model { regex : "BQ-5300G(?:[);/ ]|$)" , model : "Velvet View" , } , Model { regex : "BQ(ru|S)?-(?:5211|5020)(?:[);/ ]|$)" , model : "Strike" , } , Model { regex : "BQ-5206L(?:[);/ ]|$)" , model : "Balance" , } , Model { regex : "BQ(?:ru|S)?-(?:5204|5050)(?:[);/ ]|$)" , model : "Strike Selfie" , } , Model { regex : "BQ(?:ru)?-5203(?:[);/ ]|$)" , model : "Vision" , } , Model { regex : "BQ(?:ru)?-5202(?:[);/ ]|$)" , model : "Space Lite" , } , Model { regex : "BQ(?:ru)?-5201(?:[);/ ]|$)" , model : "Space" , } , Model { regex : "BQ-5082(?:[);/ ]|$)" , model : "Sense 2" , } , Model { regex : "BQ-5045L(?:[);/ ]|$)" , model : "Wallet" , } , Model { regex : "BQ-5047L(?:[);/ ]|$)" , model : "Like" , } , Model { regex : "BQ-5071(?:[);/ ]|$)" , model : "Belief" , } , Model { regex : "BQ[S]?-(?:5065|5340)(?:[);/ ]|$)" , model : "Choice" , } , Model { regex : "BQ(?:S|ru)?-5046L(?:[);/ ]|$)" , model : "Choice LTE" , } , Model { regex : "BQ(?:ru)?-?(?:5059|5514G)(?:[);/ ]|$)" , model : "Strike Power" , } , Model { regex : "(?:BQru_)?BQ(?:ru)?-5058(?:[);/ ]|$)" , model : "Strike Power Easy" , } , Model { regex : "BQ(?:ru)?-5057(?:[);/ ]|$)" , model : "Strike 2" , } , Model { regex : "BQ[S]?-(?:5056|5030)(?:[);/ ]|$)" , model : "Fresh" , } , Model { regex : "BQ-6042l(?:[);/ ]|$)" , model : "Magic E" , } , Model { regex : "BQS-5055(?:[);/ ]|$)" , model : "Turbo Plus" , } , Model { regex : "BQ(?:ru)?-5054(?:[);/ ]|$)" , model : "Crystal" , } , Model { regex : "BQ-5052(?:[);/ ]|$)" , model : "Sense" , } , Model { regex : "BQ[S]?-5045(?:[);/ ]|$)" , model : "Fast" , } , Model { regex : "BQ(?:ru)?-(?:5037|5514L)(?:[);/ ]|$)" , model : "Strike Power 4G" , } , Model { regex : "BQ(?:ru)?-5035(?:[);/ ]|$)" , model : "Velvet" , } , Model { regex : "BQ(?:ru)?-5033(?:[);/ ]|$)" , model : "Shark" , } , Model { regex : "BQ-5541L(?:[);/ ]|$)" , model : "Shark Rush" , } , Model { regex : "BQ-5032(?:[);/ ]|$)" , model : "Element" , } , Model { regex : "BQS-5025(?:[);/ ]|$)" , model : "High Way" , } , Model { regex : "BQ(?:ru)?-5022(?:[);/ ]|$)" , model : "Bond" , } , Model { regex : "BQ-5015L(?:[);/ ]|$)" , model : "First" , } , Model { regex : "BQ-5016G(?:[);/ ]|$)" , model : "Choice" , } , Model { regex : "BQ-5012L(?:[);/ ]|$)" , model : "Rich" , } , Model { regex : "BQ-5521L(?:[);/ ]|$)" , model : "Rich Max" , } , Model { regex : "BQS-5011(?:[);/ ]|$)" , model : "Monte Carlo" , } , Model { regex : "BQ-5010G(?:[);/ ]|$)" , model : "Spot" , } , Model { regex : "BQ-5000G(?:[);/ ]|$)" , model : "Velvet Easy" , } , Model { regex : "BQS-5010(?:[);/ ]|$)" , model : "Prague" , } , Model { regex : "BQ-5009L(?:[);/ ]|$)" , model : "Trend" , } , Model { regex : "BQS-500[59](?:[);/ ]|$)" , model : "Sydney" , } , Model { regex : "BQ-5008L(?:[);/ ]|$)" , model : "Brave" , } , Model { regex : "BQ-5007L(?:[);/ ]|$)" , model : "Iron" , } , Model { regex : "BQS-5006(?:[);/ ]|$)" , model : "Los Angeles" , } , Model { regex : "BQ-(?:5005L|5530L)(?:[);/ ]|$)" , model : "Intense" , } , Model { regex : "BQS-5004(?:[);/ ]|$)" , model : "Paris" , } , Model { regex : "BQ-5003L(?:[);/ ]|$)" , model : "Shark Pro" , } , Model { regex : "BQ-5002G(?:[);/ ]|$)" , model : "Fun" , } , Model { regex : "BQS-5002(?:[);/ ]|$)" , model : "Colombo" , } , Model { regex : "BQS-5003(?:[);/ ]|$)" , model : "Colombo II" , } , Model { regex : "BQ-5001L(?:[);/ ]|$)" , model : "Contact" , } , Model { regex : "BQS-5001(?:[);/ ]|$)" , model : "Milan" , } , Model { regex : "BQ(?:ru|S)?-5000(?:[);/ ]|$)" , model : "Tokyo" , } , Model { regex : "BQS-4800(?:[);/ ]|$)" , model : "Blade" , } , Model { regex : "BQS-4707(?:[);/ ]|$)" , model : "Montreal" , } , Model { regex : "BQS-4702(?:[);/ ]|$)" , model : "Оsaka" , } , Model { regex : "BQS-4701(?:[);/ ]|$)" , model : "Venice" , } , Model { regex : "BQ-(?:4585|5011G)(?:[);/ ]|$)" , model : "Fox View" , } , Model { regex : "BQ(?:ru)?-4583(?:[);/ ]|$)" , model : "Fox Power" , } , Model { regex : "BQS-4570(?:[);/ ]|$)" , model : "Drive" , } , Model { regex : "BQS-4560(?:[);/ ]|$)" , model : "Golf" , } , Model { regex : "BQS-4555(?:[);/ ]|$)" , model : "Turbo" , } , Model { regex : "BQS-4550(?:[);/ ]|$)" , model : "Richmond" , } , Model { regex : "BQ(?:ru)?-(?:4526|5004G)(?:[);/ ]|$)" , model : "Fox" , } , Model { regex : "BQS-4525(?:[);/ ]|$)" , model : "Vienna" , } , Model { regex : "BQS-4516(?:[);/ ]|$)" , model : "Singapore" , } , Model { regex : "BQS-4515(?:[);/ ]|$)" , model : "Moscow" , } , Model { regex : "BQS-4510(?:[);/ ]|$)" , model : "Florence" , } , Model { regex : "BQS-4505(?:[);/ ]|$)" , model : "Santiago" , } , Model { regex : "BQS-4503(?:[);/ ]|$)" , model : "Dubai" , } , Model { regex : "BQS-4502(?:[);/ ]|$)" , model : "Kingston" , } , Model { regex : "BQS-4501 Bristol" , model : "Bristol" , } , Model { regex : "BQ-4501G(?:[);/ ]|$)" , model : "Fox Easy" , } , Model { regex : "BQ(?:ru)?-4500(?:[);/ ]|$)" , model : "Fox LTE" , } , Model { regex : "BQ-4077(?:[);/ ]|$)" , model : "Shark Mini" , } , Model { regex : "BQ(?:ru)?-4072(?:[);/ ]|$)" , model : "Strike Mini" , } , Model { regex : "BQ(?:ru)?[- ]402[68](?:[);/ ]|$)" , model : "Up!" , } , Model { regex : "BQS-4010(?:[);/ ]|$)" , model : "Aspen" , } , Model { regex : "BQS-4009(?:[);/ ]|$)" , model : "Orleans" , } , Model { regex : "BQS-4008(?:[);/ ]|$)" , model : "Shanghai" , } , Model { regex : "BQS-4007(?:[);/ ]|$)" , model : "Valencia" , } , Model { regex : "BQS-4005(?:[);/ ]|$)" , model : "Seoul" , } , Model { regex : "BQS-4004(?:[);/ ]|$)" , model : "Dusseldorf" , } , Model { regex : "BQS-4003(?:[);/ ]|$)" , model : "Verona" , } , Model { regex : "BQ-4001G(?:[);/ ]|$)" , model : "Cool" , } , Model { regex : "BQS-4001(?:[);/ ]|$)" , model : "Oxford" , } , Model { regex : "BQS-3510(?:[);/ ]|$)" , model : "Aspen Mini" , } , Model { regex : "BQS-3503(?:[);/ ]|$)" , model : "Bombay" , } , Model { regex : "BQ-1085L(?:[);/ ]|$)" , model : "Hornet Max Pro" , } , Model { regex : "BQ-1084L(?:[);/ ]|$)" , model : "Hornet Max" , } , Model { regex : "BQ-1083G(?:[);/ ]|$)" , model : "Armor Pro Plus" , } , Model { regex : "BQ-1082G(?:[);/ ]|$)" , model : "Armor Pro" , } , Model { regex : "BQ-1077L(?:[);/ ]|$)" , model : "Armor Pro LTE" , } , Model { regex : "BQ(?:ru)?-1057L(?:[);/ ]|$)" , model : "Passion" , } , Model { regex : "BQ-1051G(?:[);/ ]|$)" , model : "Corsika" , } , Model { regex : "BQ-1050G(?:[);/ ]|$)" , model : "Hawaii" , } , Model { regex : "BQ[-]?1008G(?:[);/ ]|$)" , model : "Grace" , } , Model { regex : "Aquaris M8" , model : "Aquaris M8" , } , Model { regex : "Aquaris_([AM])4.5" , model : "Aquaris $14.5" , } , Model { regex : "BQ(?:ru)?[_ -](?:5590|5740G)(?:[);/ ]|$)" , model : "Spring" , } , Model { regex : "BQ[S]?-(?:6016L|5520)(?:[);/ ]|$)" , model : "Mercury" , } , Model { regex : "BQ(?:S|ru)?-(?:5701L|5060)(?:[);/ ]|$)" , model : "Slim" , } , Model { regex : "(BQ-7850|BQ-700[12]G|BQ-8002G|BQ-905[12]G|BQ-9702G|BQ-7056G)" , model : "$1" , } , Model { regex : "BQ-8006G(?:[);/ ]|$)" , model : "Java" , } , Model { regex : "BQ-7062G(?:[);/ ]|$)" , model : "Fiji" , } , Model { regex : "BQ(?:ru)?-1081G(?:[);/ ]|$)" , model : "Grace 3G" , } , Model { regex : "BQ-7802G(?:[);/ ]|$)" , model : "Luzon" , } , Model { regex : "BQ-7008G(?:[);/ ]|$)" , model : "Clarion" , } , Model { regex : "BQ-7064G(?:[);/ ]|$)" , model : "Fusion" , } , Model { regex : "BQ-7050G(?:[);/ ]|$)" , model : "Malta" , } , Model { regex : "BQ-7000G(?:[);/ ]|$)" , model : "Сharm" , } , Model { regex : "BQ-7040G(?:[);/ ]|$)" , model : "Сharm Plus" , } , Model { regex : "BQ-7038G(?:[);/ ]|$)" , model : "Light Plus" , } , Model { regex : "BQ-7005G(?:[);/ ]|$)" , model : "Maui" , } , Model { regex : "BQ-7098G(?:[);/ ]|$)" , model : "Armor Power" , } , Model { regex : "BQ-1007(?:[);/ ]|$)" , model : "Necker" , } , Model { regex : "BQ-1045[G]?(?:[);/ ]|$)" , model : "Orion" , } , Model { regex : "BQ-(?:1054L|1020L)(?:[);/ ]|$)" , model : "Nexion" , } , Model { regex : "BQ-7083G(?:[);/ ]|$)" , model : "Light" , } , Model { regex : "BQ-8077L(?:[);/ ]|$)" , model : "Exion Plus" , } , Model { regex : "BQ(?:ru)?-7083(?:[);/ ]|$)" , model : "7083" , } , Model { regex : "BQ(?:ru)?-1056L(?:[);/ ]|$)" , model : "1056L" , } , Model { regex : "BQ(?:ru)?-1022l(?:[);/ ]|$)" , model : "Armor Pro LTE+" , } , Model { regex : "BQ(?:ru)?-1024L(?:[);/ ]|$)" , model : "Exion Pro" , } , Model { regex : "BQ(?:ru)?-7081(?:[);/ ]|$)" , model : "Charm" , } , Model { regex : "(?:bq )?(Aquaris[^/;]*) Build" , model : "$1" , } , Model { regex : "Aquaris (E(4.5|[56])|M(5|10)|U2 Lite|U2|U (Lite|Plus)|V Plus|X5 Plus|X2? Pro|X[25]|[CMUVX])" , model : "Aquaris $1" , } , Model { regex : "bq ([^/;]+) Build" , model : "$1" , } ,]) , }) , ("ViewSonic" , Brand { regex : "ViewSonic|VSD[0-9]+(?:[);/ ]|$)|ViewPad|ViewPhone" , device : Some ("smart display") , model : None , models : Some (& [Model { regex : "(?:ViewSonic-)?V500(?:[);/ ]|$)" , model : "V500" , } , Model { regex : "ViewSonic A8\\+(?:[);/ ]|$)" , model : "A8 Plus" , } , Model { regex : "(?:ViewSonic-)?ViewPhone ?([^;/]+) Build" , model : "ViewPhone $1" , } , Model { regex : "(?:ViewSonic-)?ViewPad ?([^;/]+) Build" , model : "ViewPad $1" , } , Model { regex : "(VSD[0-9]+)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Seuic" , Brand { regex : "(AUTOID9N)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("OINOM" , Brand { regex : "OINOM[_ ](V9D|V7H|V[679])(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Sigma" , Brand { regex : "Sigma(?!Designs)|(X[_-]Style[ _]?Tab[_ ]A([0-9]{2,3})|X[-_ ]?treme[-_ ]?PQ[0-9]{2}|X-Style_S5501)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(?:Sigma[ _])?X[-_ ]?treme[-_ ]?PQ([0-9]{2})(?:[);/ ]|$)" , model : "X-Treme PQ$1" , } , Model { regex : "X[_-]Style[ _]?Tab[_ ]A([0-9]{2,3})(?:[);/ ]|$)" , model : "X-Style Tab A$1" , } , Model { regex : "(?:Sigma[ _])?X[-_ ]?Style[-_ ]S([0-9]+)(?:[);/ ]|$)" , model : "X-Style S$1" , } ,]) , }) , ("How" , Brand { regex : "(?:HT-705XS|705-G Go|1001-G Go)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "(HT-705XS)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "(1001-G Go)(?:[);/ ]|$)" , model : "HT-1001G Go Kids" , } , Model { regex : "(705-G Go)(?:[);/ ]|$)" , model : "HT-$1" , } ,]) , }) , ("Viumee" , Brand { regex : "SMART[_ ](EV[56])(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("Smart $1") , models : None , }) , ("Tronsmart" , Brand { regex : "(Orion R68G|Draco AW80|Draco H3|Vega S95_(?:Meta|Pro|Telos))(?:[);/ ]|$)" , device : Some ("tv") , model : Some ("$1") , models : None , }) , ("MiXzo" , Brand { regex : "(?:MiXzo[ _])?(?:ME1023|ME ?1025|ME1030|MX1037|MX1024|MX10[24]1|MX1397)([ _][34]G)?(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "MiXzo[_ ]ME(1023|1030)(?:[_ ]3G)(?:[);/ ]|$)" , model : "ME$1 3G" , } , Model { regex : "MiXzo[_ ]MX1021(?:[_ ]3G)?(?:[);/ ]|$)" , model : "MX1021 3G" , } , Model { regex : "(?:MiXzo[ _])?MX(1037|1041|1024|1397)[ _]4G(?:[);/ ]|$)" , model : "MX$1 4G" , } , Model { regex : "ME ?1025" , model : "ME1025 3G" , } ,]) , }) , ("Luna" , Brand { regex : "(?:LUNA[ _](?:V55|G[56]0)|TG-L800S)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "LUNA[ _](V55|G[56]0)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "(TG-L800S)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Chico Mobile" , Brand { regex : "(?:ALTO (?:Bombo|classic|Estrella|JUEGO|SUBIR|[235])|FUEGO MAX|OJOS[ _](?:CAMBIO|NUBE|[68i]|ORO))(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "ALTO Bombo" , model : "Alto Bombo" , } , Model { regex : "ALTO classic" , model : "Alto Classic" , } , Model { regex : "ALTO Estrella" , model : "Alto Estrella" , } , Model { regex : "ALTO JUEGO" , model : "Alto Juego" , } , Model { regex : "ALTO SUBIR" , model : "Alto Subir" , } , Model { regex : "ALTO ([235])" , model : "Alto $1" , } , Model { regex : "OJOS[ _]([68i])" , model : "Ojos $1" , } , Model { regex : "OJOS NUBE" , model : "Ojos Nube" , } , Model { regex : "OJOS CAMBIO" , model : "Ojos Cambio" , } , Model { regex : "OJOS ORO" , model : "Ojos Oro" , } , Model { regex : "FUEGO MAX" , model : "Fuego Max" , } ,]) , }) , ("MIVO" , Brand { regex : "(Caryota [1245789]|Jazz J[13] 2018)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(Caryota [1245789])(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Jazz (J[13]) 2018" , model : "Jazz $1 (2018)" , } ,]) , }) , ("Minix" , Brand { regex : "NEO-(?:X8-H|U9-H|X[57]-mini|X8H-PLUS|X88-?I|X7-216A|X5-116A|X[68]|U1|Z64)(?:[);/ ]|$)" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "NEO-X8-H(?:[);/ ]|$)" , model : "NEO X8H" , } , Model { regex : "NEO-X([57])-mini(?:[);/ ]|$)" , model : "NEO X$1 Mini" , } , Model { regex : "NEO-X8H-PLUS(?:[);/ ]|$)" , model : "NEO X8H Plus" , } , Model { regex : "NEO-X88-?I(?:[);/ ]|$)" , model : "NEO X88i" , } , Model { regex : "NEO-X7-216A(?:[);/ ]|$)" , model : "NEO X7" , } , Model { regex : "NEO-X5-116A(?:[);/ ]|$)" , model : "NEO X5" , } , Model { regex : "NEO-X([68])(?:[);/ ]|$)" , model : "NEO X$1" , } , Model { regex : "NEO-U1(?:[);/ ]|$)" , model : "NEO U1" , } , Model { regex : "NEO-Z64(?:[);/ ]|$)" , model : "NEO Z64" , } , Model { regex : "NEO-U9-H(?:[);/ ]|$)" , model : "NEO U9H" , } ,]) , }) , ("Ritmix" , Brand { regex : "(RMD[-_](?:10(?:2[689]|30|5[089])|1121|75[017]|726|85[57]|870)|RMP-(?:450|50[56]|530|600))(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "RMD[-_](10(?:2[689]|30|5[089])|1121|75[017]|726|85[57]|870)(?:[);/ ]|$)" , model : "RMD-$1" , } , Model { regex : "RMP[-_](450|50[56]|530|600)(?:[);/ ]|$)" , model : "RMP-$1" , } ,]) , }) , ("Lephone" , Brand { regex : "lephone[ _]|lephoneP1" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "lephone[ _](K7|K10)" , model : "$1" , } , Model { regex : "lephone(?:[ _])?(W(1[0125]|[279])|T2|P1)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "lephone_W7_plus" , model : "W7 Plus" , } ,]) , }) , ("Malata" , Brand { regex : "(?:Build/)?Malata[ _]?([a-z0-9]+)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Doogee" , Brand { regex : "DOOGEE[ _-]|Valencia2_Y100_?(?:pro|plus)|Y100_Plus|X5max(?:[_ ]PRO)?|Shoot_[12]|x5_doogee|(KISSME|BIGBOY|COLLO[23]?|DAGGER|DISCOVERY2?|FIND|HOTWIND|LATTE|MAX|MINT|MOON|PIXELS|RAINBOX|TURBO|VALENCIA|VOYAGER2?|TITANS2?)[ -_](DG[0-9]+C?)(?:[);/ ]|$)|(?:BL12000|BL5500[_ ]Lite|X9 Mini|LEO_DG280|Y9Plus|Hitman_DG850|S(?:[568]8|9[056]|59|40)Pro|X95Pro|S40Lite|BL[579]000|N20Pro|(?<!Lenovo )S90C|Ibiza_F2)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(?:Valencia2_)?Y100_Plus(?:[);/ ]|$)" , model : "Valencia2 Y100 Plus" , } , Model { regex : "Valencia2_Y100pro" , model : "Valencia2 Y100 Pro" , } , Model { regex : "LEO_(DG280)" , model : "Leo $1" , } , Model { regex : "(BL[579]000|S90C)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "X95Pro(?:[);/ ]|$)" , model : "X95 Pro" , } , Model { regex : "N20Pro(?:[);/ ]|$)" , model : "N20 Pro" , } , Model { regex : "BL12000 PRO" , model : "BL12000 Pro" , } , Model { regex : "BL5500[_ ]Lite" , model : "BL5500 Lite" , } , Model { regex : "BL12000" , model : "BL12000" , } , Model { regex : "S([568]8|9[056]|59|40)Pro" , model : "S$1 Pro" , } , Model { regex : "S40Lite" , model : "S40 Lite" , } , Model { regex : "KISSME-DG580" , model : "Kissme DG580" , } , Model { regex : "Hitman_DG850" , model : "Hitman DG580" , } , Model { regex : "X9 Mini" , model : "X9 Mini" , } , Model { regex : "x5_doogee" , model : "X5" , } , Model { regex : "Shoot_([12])" , model : "Shoot $1" , } , Model { regex : "Ibiza_F2" , model : "Ibiza F2" , } , Model { regex : "(X5max(?:[_ ]PRO)?)" , model : "$1" , } , Model { regex : "(?:DOOGEE[ _-])?(BIGBOY|COLLO[23]?|DAGGER|DISCOVERY2?|FIND|HOTWIND|LATTE|MAX|MINT|MOON|PIXELS|RAINBOX|TURBO|VALENCIA|Valencia2_Y100pro|VOYAGER2?|TITANS2?)[ -_](DG[0-9]+C?)(?:[);/ ]|$)" , model : "$1 $2" , } , Model { regex : "DOOGEE[ _-]([^);/]+) Build" , model : "$1" , } , Model { regex : "DOOGEE[ _-]([^);/]+)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Y9Plus(?:[);/ ]|$)" , model : "Y9 Plus" , } ,]) , }) , ("Cell-C" , Brand { regex : "Cell_?C_" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Cell_C_(Summit_Plus|Fame|Evolve)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "CELLC_Evolve" , model : "Evolve" , } ,]) , }) , ("MegaFon" , Brand { regex : "MegaFon|MFLoginPh|MegLogPh|(MFLogin[34]T?|MS3B|SP-A5|SP-A20i)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "MFLoginPh|MegLogPh" , model : "Login+" , } , Model { regex : "MFLogin4" , model : "Login 4 LTE" , } , Model { regex : "MFLogin3T|MegaFon Login 3" , model : "Login 3" , } , Model { regex : "MS3B|Megafon Optima" , model : "Optima" , } , Model { regex : "SP-A20i" , model : "Mint" , } , Model { regex : "(SP-A5)" , model : "$1" , } ,]) , }) , ("Turbo-X" , Brand { regex : "Turbo-X|Hive V 3G|Turbox_S3|Fire_II_WiFi" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Turbox_S3" , model : "S3" , } , Model { regex : "Turbo-X_A2(?:[);/ ]|$)" , model : "A2" , } , Model { regex : "Turbo-X_e3(?:[);/ ]|$)" , model : "E3" , } , Model { regex : "Turbo-X Ice(?:[);/ ]|$)" , model : "Ice" , } , Model { regex : "Hive V 3G(?:[);/ ]|$)" , model : "Hive V 3G" , } , Model { regex : "Fire_II_WiFi(?:[);/ ]|$)" , model : "Fire II WiFi" , } , Model { regex : "Turbo-X Tablet([^;/]+) Build" , model : "Tablet$1" , } , Model { regex : "Turbo-X ([^;/]+) Build" , model : "$1" , } ,]) , }) , ("MSI" , Brand { regex : "Primo ?(?:9[13]|81|76)|Enjoy 7 Plus" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "Primo ?(9[13]|76|81)" , model : "Primo $1" , } , Model { regex : "Enjoy 7 Plus" , model : "Enjoy 7 Plus" , } ,]) , }) , ("Silelis" , Brand { regex : "Silelis[ _](T-1)(?:[);/ ]|$)" , device : Some ("tv") , model : Some ("$1") , models : None , }) , ("Telenor" , Brand { regex : "(?<!FBCR/)Telenor|(?:Infinity[_ ](?:E5|K))(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Telenor[ _]([^;/]+)(?: Build|[;)])" , model : "$1" , } , Model { regex : "Infinity[ _](E5|K)" , model : "Infinity $1" , } ,]) , }) , ("Miray" , Brand { regex : "MIDM[_-]|MPM[_-]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "MIDM[_-]([a-z0-9]+)" , model : "MIDM $1" , } , Model { regex : "MPM[_-]([a-z0-9]+)" , model : "MPM $1" , } ,]) , }) , ("VK Mobile" , Brand { regex : "VK-VK([79]00)(?:[);/ ]|$)" , device : Some ("feature phone") , model : Some ("VK$1") , models : None , }) , ("Tolino" , Brand { regex : "Tolino Tab ([^/;]+) Build" , device : Some ("tablet") , model : Some ("Tolino Tab $1") , models : None , }) , ("X-BO" , Brand { regex : "X[-]?BO (V[78]|V1[01]|V[89]\\+)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Realme" , Brand { regex : "Realme[ _]|(?:RMX(?:19(03|4[1235]|19|9[23]|2[157]|[01379]1|73)|20(?:[025-7]1|[037]2|2[57]|63|7[56]|8[156]|[2-5]0)|21(?:0[13]|17|[12]1|4[24]|5[15]|6[13]|7[036]|8[059]|9[35])|220[012]|18(0[1579]|11|3[13]|2[157]|[45]1|45)|3201|30(?:[348]1|9[23]|63|85)|312[12])|(?:OPPO[ _]?)?CPH1861)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(?:OPPO[ _]?)?CPH1861(?:[);/ ]|$)" , model : "1" , } , Model { regex : "RMX180[59]" , model : "2" , } , Model { regex : "RMX180[17]" , model : "2 Pro" , } , Model { regex : "RMX(1833|182[15])" , model : "3" , } , Model { regex : "RMX1827" , model : "3i" , } , Model { regex : "RMX1851" , model : "3 Pro" , } , Model { regex : "RMX190[13]|Realme X(?:[);/ ]|$)" , model : "X" , } , Model { regex : "RMX199[12]" , model : "X2" , } , Model { regex : "RMX1993" , model : "X2 Dual" , } , Model { regex : "RMX1931|Realme X2 Pro(?:[);/ ]|$)" , model : "X2 Pro" , } , Model { regex : "RMX2117" , model : "Q2 5G" , } , Model { regex : "RMX2173" , model : "Q2 Pro" , } , Model { regex : "RMX2176(?:[);/ ]|$)" , model : "X7 5G" , } , Model { regex : "RMX2121(?:[);/ ]|$)" , model : "X7 Pro 5G" , } , Model { regex : "RMX1921|Realme XT(?:[);/ ]|$)" , model : "XT" , } , Model { regex : "RMX19(1[19]|27)" , model : "5" , } , Model { regex : "RMX197[13]" , model : "5 Pro" , } , Model { regex : "RMX203[02]" , model : "5i" , } , Model { regex : "RMX2001" , model : "6" , } , Model { regex : "RMX2040" , model : "6I" , } , Model { regex : "RMX2002" , model : "6S" , } , Model { regex : "RMX206[13](?:[);/ ]|$)" , model : "6 Pro" , } , Model { regex : "RMX215[15]" , model : "7" , } , Model { regex : "RMX2103" , model : "7I" , } , Model { regex : "RMX2170" , model : "7 Pro" , } , Model { regex : "RMX3081" , model : "8 Pro" , } , Model { regex : "RMX3085" , model : "8" , } , Model { regex : "RMX1925(?:[);/ ]|$)" , model : "5S" , } , Model { regex : "RMX1811(?:[);/ ]|$)" , model : "C1" , } , Model { regex : "RMX194[1235](?:[);/ ]|$)" , model : "C2" , } , Model { regex : "RMX202[107](?:[);/ ]|$)" , model : "C3" , } , Model { regex : "RMX2185(?:[);/ ]|$)" , model : "C11" , } , Model { regex : "RMX2189(?:[);/ ]|$)" , model : "C12" , } , Model { regex : "RMX2180(?:[);/ ]|$)" , model : "C15" , } , Model { regex : "RMX2195(?:[);/ ]|$)" , model : "C15 Qualcomm Edition" , } , Model { regex : "RMX2101(?:[);/ ]|$)" , model : "C17" , } , Model { regex : "RMX3063(?:[);/ ]|$)" , model : "C20" , } , Model { regex : "RMX3031(?:[);/ ]|$)" , model : "GT Neo" , } , Model { regex : "RMX216[13](?:[);/ ]|$)" , model : "Narzo 20 Pro" , } , Model { regex : "RMX2193(?:[);/ ]|$)" , model : "Narzo 20" , } , Model { regex : "RMX2050(?:[);/ ]|$)" , model : "Narzo 20A" , } , Model { regex : "RMX1831(?:[);/ ]|$)" , model : "U1" , } , Model { regex : "RMX(?:20(?:51|[2]5)|2144)(?:[);/ ]|$)" , model : "X50 5G" , } , Model { regex : "RMX2071(?:[);/ ]|$)" , model : "X50 Pro" , } , Model { regex : "RMX207[56](?:[);/ ]|$)" , model : "X50 Pro 5G" , } , Model { regex : "RMX2072(?:[);/ ]|$)" , model : "X50 Pro Player" , } , Model { regex : "RMX(2142|2081)(?:[);/ ]|$)" , model : "X3" , } , Model { regex : "RMX208[56](?:[);/ ]|$)" , model : "X3 Super Zoom" , } , Model { regex : "RMX2173(?:[);/ ]|$)" , model : "Q2 Pro" , } , Model { regex : "RMX2111" , model : "V5 5G" , } , Model { regex : "RMX220[01]" , model : "V3 5G" , } , Model { regex : "RMX312[12]" , model : "V11 5G" , } , Model { regex : "RMX3041" , model : "V13 5G" , } , Model { regex : "RMX309[23]" , model : "V15 5G" , } , Model { regex : "RMX3201" , model : "C21" , } , Model { regex : "RMX2202" , model : "GT 5G" , } , Model { regex : "Realme[ _]([1-9])[ _]Pro(?:[);/ ]|$)" , model : "$1 Pro" , } ,]) , }) , ("Audiovox" , Brand { regex : "Audiovox|CDM|UTS(?:TARCOM)?\\-|audio(?!book)[a-z0-9\\-]+" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Audiovox[_\\-]([a-z0-9\\-]+)" , model : "$1" , } , Model { regex : "CDM(?:-)?([a-z0-9]+)" , model : "CDM-$1" , } , Model { regex : "UTS(?:TARCOM)?-([a-z0-9\\-]+)" , model : "CDM-$1" , } , Model { regex : "audio([a-z0-9\\-]+)" , model : "CDM-$1" , } ,]) , }) , ("Datang" , Brand { regex : "DATANG" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(?:DATANG[ _-])+([^;/]+) Build" , model : "$1" , } , Model { regex : "(?:DATANG[ _-])+([^;/)]+)(?:[;/)]|$)" , model : "$1" , } ,]) , }) , ("iLA" , Brand { regex : "iLA[-_ ](Silk|X)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Kempler & Strauss" , Brand { regex : "Alumini_?3_?Plus|Alumini ?[23]|KEMPLER_(?:P1|TV|X|8_PLUS)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Alumini ?2" , model : "Alumini 2" , } , Model { regex : "Alumini_?3_?Plus" , model : "Alumini 3 Plus" , } , Model { regex : "Alumini3" , model : "Alumini 3" , } , Model { regex : "KEMPLER_P1" , model : "P1" , } , Model { regex : "KEMPLER_TV" , model : "TV" , } , Model { regex : "KEMPLER_X" , model : "X" , } , Model { regex : "KEMPLER_8_PLUS" , model : "8 Plus" , } ,]) , }) , ("Compal" , Brand { regex : "Compal-[a-z0-9]+" , device : Some ("feature phone") , model : Some ("$1") , models : None , }) , ("Four Mobile" , Brand { regex : "Four[ _]?(S600|S300I|S185|K500|S61)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Four[ _]?(S600|S300I|K500)" , model : "$1" , } , Model { regex : "Four[ _]?S185" , model : "S185 Sky 2" , } , Model { regex : "Four[ _]?S61" , model : "S61 Eco 2" , } ,]) , }) , ("Ainol" , Brand { regex : "Numy|novo[0-9]|Novo 10 Hero|AX10PRO|NUMY3GAX9|NOVO10 Spark|Aurora-II" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "Numy 3G AX1" , model : "Novo 7 Numy AX1 3G" , } , Model { regex : "Numy[_ ]?3G[_ ]?Sword" , model : "Numy 3G Sword" , } , Model { regex : "NOVO10 Spark" , model : "Novo 10 Spark" , } , Model { regex : "AX10PRO" , model : "Numy AX10 Pro" , } , Model { regex : "Numy_3G_AX3" , model : "Numy AX3 Sword" , } , Model { regex : "Numy3GTalos" , model : "Numy 3G Talos" , } , Model { regex : "Numy_3G_BW1" , model : "Numy 3G Talos 2" , } , Model { regex : "NUMY3GAX9(?:[);/ ]|$)" , model : "Numy 3G AX9" , } , Model { regex : "Numy3G_AX10(?:[);/ ]|$)" , model : "Numy 3G AX10" , } , Model { regex : "(Novo 10 Hero QuadCore)" , model : "$1" , } , Model { regex : "Aurora-II" , model : "Novo 7 Aurora II" , } , Model { regex : "Novo7 Flame(?:[);/ ]|$)" , model : "Novo 7 Flame" , } , Model { regex : "NOVO7(?:[);/ ]|$)" , model : "Novo 7" , } , Model { regex : "Numy[ _]([^;/]+) Build" , model : "Numy $1" , } , Model { regex : "Novo([0-9]+)[ \\-]([^;/]+) Build" , model : "Novo $1 $2" , } ,]) , }) , ("Vorke" , Brand { regex : "VORKE (Z[157]|Z6(?: Plus)?)(?:[);/ ]|$)" , device : Some ("tv") , model : Some ("$1") , models : None , }) , ("InFocus" , Brand { regex : "IF(900[1237]|902[19]|903[15])(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "IF9001" , model : "Turbo 5" , } , Model { regex : "IF9007" , model : "A3" , } , Model { regex : "IF9021" , model : "Turbo 5 Plus" , } , Model { regex : "IF9035" , model : "A2" , } , Model { regex : "IF9002" , model : "M5s" , } , Model { regex : "IF9003" , model : "M6s" , } , Model { regex : "IF9031" , model : "Vision 3" , } , Model { regex : "IF9029" , model : "Vision 3 Pro" , } ,]) , }) , ("Arnova" , Brand { regex : "arnova|ARCHM901|AN7CG2|AN7G2(DTE|I)?|AN7[BCDFH]?G3|A80KSC|AN8G2|AN8[BC]?G3|AN9G2I?|AN9G3|A101[BC]|AN10G2|AN10BG2(DT|I)?|AN10BG3(DT)?|AN10[CD]G3" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "ARCHM901" , model : "M901" , } , Model { regex : "AN7CG2" , model : "7c G2" , } , Model { regex : "AN7G2I|AN7G2|AN7G2DTE" , model : "7 G2" , } , Model { regex : "AN7G3" , model : "7 G3" , } , Model { regex : "AN7BG3" , model : "7b G3" , } , Model { regex : "AN7CG3" , model : "7c G3" , } , Model { regex : "AN7DG3-CP" , model : "Childpad" , } , Model { regex : "AN7DG3" , model : "7d G3" , } , Model { regex : "AN7FG3" , model : "7f G3" , } , Model { regex : "AN7HG3" , model : "7h G3" , } , Model { regex : "A80KSC" , model : "8" , } , Model { regex : "AN8G2" , model : "8 G2" , } , Model { regex : "AN8G3" , model : "8 G3" , } , Model { regex : "AN8BG3" , model : "8b G3" , } , Model { regex : "AN8CG3" , model : "8c G3" , } , Model { regex : "AN9G2I" , model : "9i G2" , } , Model { regex : "AN9G2" , model : "9 G2" , } , Model { regex : "AN9G3" , model : "9 G3" , } , Model { regex : "A101B2|A101C|AN10G2" , model : "10 G2" , } , Model { regex : "A101B" , model : "10" , } , Model { regex : "AN10BG2|AN10BG2DT|AN10BG2I" , model : "10b G2" , } , Model { regex : "AN10BG3|AN10BG3DT|AN10BG3-LZ" , model : "10b G3" , } , Model { regex : "AN10CG3" , model : "10c G3" , } , Model { regex : "AN10DG3" , model : "10d G3" , } , Model { regex : "ARNOVA 90G3" , model : "90 G3" , } , Model { regex : "ARNOVA 90 G4" , model : "90 G4" , } , Model { regex : "ARNOVA 97G4" , model : "97 G4" , } , Model { regex : "ARNOVA 101 G4" , model : "101 G4" , } , Model { regex : "Arnova ([^/;]*) Build" , model : "$1" , } ,]) , }) , ("Chuwi" , Brand { regex : "(?:CW-(Hi8-super|Hi12|V99i?|V17HD3G|VX8-3G|V88-QUAD|V9-DUAL|V88S|Vi[78]|[HV]i10 (?:pro|plus))|Hi10 (?:Pro|plus)|HiPad X|HiBox-hero|HiBook(?: pro)?|Hi[89] ?(?:Air|Pro)|Hi8SE|Vi10(?: ?Pro)?)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "(CW-Hi8-super)(?:[);/ ]|$)" , model : "Hi8" , } , Model { regex : "(?:CW-)?(Vi10|Hi10) plus(?:[);/ ]|$)" , model : "$1 Plus" , } , Model { regex : "CW-(V88)-QUAD(?:[);/ ]|$)" , model : "$1 Quad" , } , Model { regex : "CW-(V9)-DUAL(?:[);/ ]|$)" , model : "$1 Dual" , } , Model { regex : "CW-(V17HD|VX8)-?(3G)(?:[);/ ]|$)" , model : "$1 $2" , } , Model { regex : "(?:CW-)?(Hi10) pro(?:[);/ ]|$)" , model : "$1 Pro" , } , Model { regex : "HiBook pro(?:[);/ ]|$)" , model : "HiBook Pro" , } , Model { regex : "HiBook(?:[);/ ]|$)" , model : "HiBook" , } , Model { regex : "HiPad X(?:[);/ ]|$)" , model : "HiPad X" , } , Model { regex : "Hi([89]) ?Air(?:[);/ ]|$)" , model : "Hi$1 Air" , } , Model { regex : "Hi8SE(?:[);/ ]|$)" , model : "Hi8 SE" , } , Model { regex : "Hi([89]) ?pro(?:[);/ ]|$)" , model : "Hi$1 Pro" , } , Model { regex : "Vi10 Plus(?:[);/ ]|$)" , model : "Vi10 Plus" , } , Model { regex : "Vi10 ?Pro(?:[);/ ]|$)" , model : "Vi10 Pro" , } , Model { regex : "Vi10(?:[);/ ]|$)" , model : "Vi10" , } , Model { regex : "HiBox-hero(?:[);/ ]|$)" , model : "HiBox Hero" , } , Model { regex : "CW-(Vi[78]|Hi12|V99i?|V88S)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("RoverPad" , Brand { regex : "(?:Rover[ ]?Pad|RoverPhone|Sky 7.85 3G|Pro_Q(?:8|10)_LTE)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "RoverPhone(?:[);/ ]|$)" , model : "" , } , Model { regex : "Pro_Q(8|10)_LTE(?:[);/ ]|$)" , model : "Pro Q$1 LTE" , } , Model { regex : "(?:Rover[ ]?Pad)?sky 7.85(?: 3G)?(?:[);/ ]|$)" , model : "Sky 7.85\" 3G" , } , Model { regex : "RoverPad (10.4|Air S70|9.7 3G|Sky 9.7|3W A73|3W7|3WT70|3W9.4)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("CnM" , Brand { regex : "CnM" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "CnM[ \\-](?:Touchpad|TP)[ \\-]([0-9\\.]+)" , model : "Touchpad $1" , } ,]) , }) , ("CellAllure" , Brand { regex : "(?:Cool_Extreme_2|Earn|Fashion2Plus|Fashion[ _]C|Cool Duo|CHIC_X1)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(Cool_Extreme_2|Earn|Fashion[ _]C|Cool Duo)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Fashion2Plus" , model : "Fashion 2 Plus" , } , Model { regex : "CHIC_X1" , model : "Chic X1" , } ,]) , }) , ("Voto" , Brand { regex : "VOTO[ _\\-]|VT8[89]8(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "VOTO[ _\\-]?([^/;]+) Build" , model : "$1" , } , Model { regex : "VOTO[ _\\-]?([^);/ ]+)" , model : "$1" , } , Model { regex : "(VT8[89]8)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("SWISSMOBILITY" , Brand { regex : "(?:SCHR9GR|PRA(?:U8|100|557|507)|ZUR(?:722M|70016W?|700[RW]|805A))(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "SCHR9GR" , model : "SCHON R9" , } , Model { regex : "PRA(U8|100|557|507)(?:[);/ ]|$)" , model : "PRA$1" , } , Model { regex : "ZUR722M" , model : "Z72 go" , } , Model { regex : "ZUR(70016W?|700[RW]|805A)(?:[);/ ]|$)" , model : "ZUR$1" , } ,]) , }) , ("Shift Phones" , Brand { regex : "(SHIFT6m)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("WIWA" , Brand { regex : "WIWA DREAM PLAYER(?:[);/ ]|$)" , device : Some ("tv") , model : Some ("Dream Player TV") , models : None , }) , ("Openbox" , Brand { regex : "Openbox (A[34](?: (?:Pro|Lite))?)(?:[);/ ]|$)" , device : Some ("tv") , model : Some ("$1") , models : None , }) , ("Cyrus" , Brand { regex : "Cyrus[ _-]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Cyrus[ _-]?([^;/)]+) Build" , model : "$1" , } , Model { regex : "Cyrus[ _-]?([^;/)]+)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Roadrover" , Brand { regex : "Roadrover ChangAn S" , device : Some ("tablet") , model : Some ("ChangAn S") , models : None , }) , ("PCD Argentina" , Brand { regex : "PCD[ ]?50[689]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "PCD[ ]?(50[689])" , model : "$1" , } ,]) , }) , ("iMars" , Brand { regex : "(?:IMARS VEGA X7|VIVI_8)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "IMARS VEGA X7" , model : "Vega X7" , } , Model { regex : "VIVI_8" , model : "VIVI 8" , } ,]) , }) , ("Bluewave" , Brand { regex : "(?:33GT HD|WV8R-M|WV8R[_-]N)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "33GT HD" , model : "Wave 8 HD+" , } , Model { regex : "WV8R-M" , model : "Wave 8 Red Marshmallow" , } , Model { regex : "WV8R[_-]N" , model : "Wave 8 Red Nougat" , } ,]) , }) , ("Apple" , Brand { regex : "(?:iTunes-)?Apple[ _]?TV|Apple/|(?:Apple-|iTunes-)?(?<!like )(?:iPad|iPhone)|iPh[0-9],[0-9]|CFNetwork|HomePod|Watch ?OS|Watch1,[12]|MDCR_Mac|ICRU_iP(?:ad|hone)" , device : None , model : None , models : Some (& [Model { regex : "HomePod" , model : "HomePod" , } , Model { regex : "Watch1,1" , model : "Watch 38mm" , } , Model { regex : "Watch1,2" , model : "Watch 42mm" , } , Model { regex : "Watch2,6" , model : "Watch Series 1 38mm" , } , Model { regex : "Watch2,7" , model : "Watch Series 1 42mm" , } , Model { regex : "Watch2,3" , model : "Watch Series 2 38mm" , } , Model { regex : "Watch2,4" , model : "Watch Series 2 42mm" , } , Model { regex : "Watch3,[13]" , model : "Watch Series 3 38mm" , } , Model { regex : "Watch3,[24]" , model : "Watch Series 3 42mm" , } , Model { regex : "Watch5,(?:9|11)" , model : "Watch SE 40mm" , } , Model { regex : "Watch5,1[02]" , model : "Watch SE 44mm" , } , Model { regex : "Watch([456]),[13]" , model : "Watch Series $1 40mm" , } , Model { regex : "Watch([456]),[24]" , model : "Watch Series $1 44mm" , } , Model { regex : "(?:.+_)?MacBook7(?:%2C|,)1" , model : "MacBook 13\" (2010)" , } , Model { regex : "(?:.+_)?MacPro5(?:%2C|,)1" , model : "Mac Pro (2010-2012)" , } , Model { regex : "(?:.+_)?iMac12(?:%2C|,)1" , model : "iMac 21.5\" (2011)" , } , Model { regex : "(?:.+_)?iMac17(?:%2C|,)1" , model : "iMac 27\" (2015)" , } , Model { regex : "(?:.+_)?iMac19(?:%2C|,)2" , model : "iMac 21.5\" (2019)" , } , Model { regex : "(?:.+_)?iMac19(?:%2C|,)1" , model : "iMac 27\" (2019)" , } , Model { regex : "(?:.+_)?iMac20(?:%2C|,)[12]" , model : "iMac 27\" (2020)" , } , Model { regex : "(?:.+_)?iMac14(?:%2C|,)2" , model : "iMac 27\" (2013)" , } , Model { regex : "(?:.+_)?iMac14(?:%2C|,)4" , model : "iMac 21.5\" (2014)" , } , Model { regex : "(?:.+_)?iMac14(?:%2C|,)1" , model : "iMac 21.5\" (2013)" , } , Model { regex : "(?:.+_)?MacBook6(?:%2C|,)1" , model : "MacBook 13\" (2009)" , } , Model { regex : "(?:.+_)?MacBook8(?:%2C|,)1" , model : "MacBook 12\" (2015)" , } , Model { regex : "(?:.+_)?MacBook9(?:%2C|,)1" , model : "MacBook 12\" (2016)" , } , Model { regex : "(?:.+_)?iMac10(?:%2C|,)1" , model : "iMac (2009)" , } , Model { regex : "(?:.+_)?MacBookAir2(?:%2C|,)1" , model : "MacBook Air (2009)" , } , Model { regex : "(?:.+_)?MacBookAir3(?:%2C|,)1" , model : "MacBook Air 11\" (2010)" , } , Model { regex : "(?:.+_)?MacBookAir3(?:%2C|,)2" , model : "MacBook Air 13\" (2010)" , } , Model { regex : "(?:.+_)?MacBookAir4(?:%2C|,)1" , model : "MacBook Air 11\" (2011)" , } , Model { regex : "(?:.+_)?MacBookAir4(?:%2C|,)2" , model : "MacBook Air 13\" (2011)" , } , Model { regex : "(?:.+_)?MacBookAir5(?:%2C|,)1" , model : "MacBook Air 11\" (2012)" , } , Model { regex : "(?:.+_)?MacBookAir5(?:%2C|,)2" , model : "MacBook Air 13\" (2012)" , } , Model { regex : "(?:.+_)?MacBookAir6(?:%2C|,)1" , model : "MacBook Air 11\" (2013-2014)" , } , Model { regex : "(?:.+_)?MacBookAir6(?:%2C|,)2" , model : "MacBook Air 13\" (2013-2014)" , } , Model { regex : "(?:.+_)?MacBookAir7(?:%2C|,)1" , model : "MacBook Air 11\" (2015)" , } , Model { regex : "(?:.+_)?MacBookAir7(?:%2C|,)2" , model : "MacBook Air 13\" (2015-2017)" , } , Model { regex : "(?:.+_)?MacBookAir8(?:%2C|,)1" , model : "MacBook Air 13\" (2018)" , } , Model { regex : "(?:.+_)?MacBookAir8(?:%2C|,)2" , model : "MacBook Air 13\" (2019)" , } , Model { regex : "(?:.+_)?MacBookAir9(?:%2C|,)1" , model : "MacBook Air 13\" (2020)" , } , Model { regex : "(?:.+_)?MacBookAir10(?:%2C|,)1" , model : "MacBook Air 13\" (2020)" , } , Model { regex : "(?:.+_)?MacBookPro1(?:%2C|,)1" , model : "MacBook Pro 15\" (2006)" , } , Model { regex : "(?:.+_)?MacBookPro1(?:%2C|,)2" , model : "MacBook Pro 17\" (2006)" , } , Model { regex : "(?:.+_)?MacBookPro2(?:%2C|,)1" , model : "MacBook Pro 17\" (2007)" , } , Model { regex : "(?:.+_)?MacBookPro2(?:%2C|,)2" , model : "MacBook Pro 15\" (2007)" , } , Model { regex : "(?:.+_)?MacBookPro[34](?:%2C|,)1" , model : "MacBook Pro (2008)" , } , Model { regex : "(?:.+_)?MacBookPro5(?:%2C|,)1" , model : "MacBook Pro 15\" (2008)" , } , Model { regex : "(?:.+_)?MacBookPro5(?:%2C|,)2" , model : "MacBook Pro 17\" (2009)" , } , Model { regex : "(?:.+_)?MacBookPro5(?:%2C|,)[34]" , model : "MacBook Pro 15\" (2009)" , } , Model { regex : "(?:.+_)?MacBookPro5(?:%2C|,)5" , model : "MacBook Pro 13\" (2009)" , } , Model { regex : "(?:.+_)?MacBookPro6(?:%2C|,)1" , model : "MacBook Pro 17\" (2010)" , } , Model { regex : "(?:.+_)?MacBookPro6(?:%2C|,)2" , model : "MacBook Pro 15\" (2010)" , } , Model { regex : "(?:.+_)?MacBookPro7(?:%2C|,)1" , model : "MacBook Pro 13\" (2010)" , } , Model { regex : "(?:.+_)?MacBookPro8(?:%2C|,)1" , model : "MacBook Pro 13\" (2011)" , } , Model { regex : "(?:.+_)?MacBookPro8(?:%2C|,)2" , model : "MacBook Pro 15\" (2011)" , } , Model { regex : "(?:.+_)?MacBookPro8(?:%2C|,)3" , model : "MacBook Pro 17\" (2011)" , } , Model { regex : "(?:.+_)?MacBookPro9(?:%2C|,)1" , model : "MacBook Pro 15\" (2012)" , } , Model { regex : "(?:.+_)?MacBookPro9(?:%2C|,)2" , model : "MacBook Pro 13\" (2012)" , } , Model { regex : "(?:.+_)?MacBookPro10(?:%2C|,)1" , model : "MacBook Pro 15\" (2012-2013)" , } , Model { regex : "(?:.+_)?MacBookPro10(?:%2C|,)2" , model : "MacBook Pro 13\" (2012-2013)" , } , Model { regex : "(?:.+_)?MacBookPro11(?:%2C|,)1" , model : "MacBook Pro 13\" (2013-2014)" , } , Model { regex : "(?:.+_)?MacBookPro11(?:%2C|,)[23]" , model : "MacBook Pro 15\" (2013-2014)" , } , Model { regex : "(?:.+_)?MacBookPro11(?:%2C|,)[45]" , model : "MacBook Pro 15\" (2015)" , } , Model { regex : "(?:.+_)?MacBookPro12(?:%2C|,)1" , model : "MacBook Pro 13\" (2015)" , } , Model { regex : "(?:.+_)?MacBookPro13(?:%2C|,)[12]" , model : "MacBook Pro 13\" (2016)" , } , Model { regex : "(?:.+_)?MacBookPro13(?:%2C|,)3" , model : "MacBook Pro 15\" (2016)" , } , Model { regex : "(?:.+_)?MacBookPro14(?:%2C|,)[12]" , model : "MacBook Pro 13\" (2017)" , } , Model { regex : "(?:.+_)?MacBookPro14(?:%2C|,)3" , model : "MacBook Pro 15\" (2017)" , } , Model { regex : "(?:.+_)?MacBookPro15(?:%2C|,)1" , model : "MacBook Pro 15\" (2018-2019)" , } , Model { regex : "(?:.+_)?MacBookPro15(?:%2C|,)2" , model : "MacBook Pro 13\" (2018-2019)" , } , Model { regex : "(?:.+_)?MacBookPro15(?:%2C|,)3" , model : "MacBook Pro 15\" (2019)" , } , Model { regex : "(?:.+_)?MacBookPro15(?:%2C|,)4" , model : "MacBook Pro 13\" (2019)" , } , Model { regex : "(?:.+_)?MacBookPro16(?:%2C|,)[14]" , model : "MacBook Pro 16\" (2019)" , } , Model { regex : "(?:.+_)?MacBookPro16(?:%2C|,)[23]" , model : "MacBook Pro 13\" (2020)" , } , Model { regex : "(?:.+_)?MacBookPro17(?:%2C|,)1" , model : "MacBook Pro 13\" (2020)" , } , Model { regex : "(?:.+_)?Macmini8(?:%2C|,)1" , model : "Mac Mini (2018)" , } , Model { regex : "(?:.+_)?Macmini9(?:%2C|,)1" , model : "Mac Mini (2020)" , } , Model { regex : "(?:.+_)?Macmini7(?:%2C|,)1" , model : "Mac Mini (2014)" , } , Model { regex : "(?:Apple-|.+_)?iPh(?:one)?1[C,_]1" , model : "iPhone" , } , Model { regex : "(?:Apple-|.+_)?iPh(?:one)?1[C,_]2" , model : "iPhone 3G" , } , Model { regex : "(?:Apple-|.+_)?iPh(?:one)?2[C,_]1| 3GS\\)$" , model : "iPhone 3GS" , } , Model { regex : "(?:Apple-|.+_)?iPh(?:one)?3[C,_][123]" , model : "iPhone 4" , } , Model { regex : "(?:Apple-|.+_)?iPh(?:one)?4[C,_]1|1C2%254enohPi| 4S\\)$" , model : "iPhone 4S" , } , Model { regex : "(?:Apple-|.+_)?iPh(?:one)?5[C,_][12]| 5\\)$" , model : "iPhone 5" , } , Model { regex : "(?:Apple-|.+_)?iPh(?:one)?5[C,_][34]" , model : "iPhone 5C" , } , Model { regex : "(?:Apple-|.+_)?iPh(?:one)?6[C,_][12]| 5S\\)$" , model : "iPhone 5S" , } , Model { regex : "(?:Apple-|.+_)?iPh(?:one)?7[C,_]1|1C2%257enohPi| 6PLUS\\)$" , model : "iPhone 6 Plus" , } , Model { regex : "(?:Apple-|.+_)?iPh(?:one)?7[C,_]2| 6\\)$" , model : "iPhone 6" , } , Model { regex : "(?:Apple-|.+_)?iPh(?:one)?8[C,_]2| 6SPLUS\\)$" , model : "iPhone 6s Plus" , } , Model { regex : "(?:Apple-|.+_)?iPh(?:one)?8[C,_]1|iPhone 6s| 6S\\)$" , model : "iPhone 6s" , } , Model { regex : "(?:Apple-|.+_)?iPh(?:one)?8[C,_]4| SE\\)$" , model : "iPhone SE" , } , Model { regex : "(?:Apple-|.+_)?iPh(?:one)?9[C,_][13]| 7\\)$" , model : "iPhone 7" , } , Model { regex : "(?:Apple-|.+_)?iPh(?:one)?9[C,_][24]| 7PLUS\\)$" , model : "iPhone 7 Plus" , } , Model { regex : "(?:Apple-|.+_)?iPh(?:one)?10[C,_][14]| 8\\)$" , model : "iPhone 8" , } , Model { regex : "(?:Apple-|.+_)?iPh(?:one)?10[C,_][25]| 8PLUS\\)$" , model : "iPhone 8 Plus" , } , Model { regex : "(?:Apple-|.+_)?iPh(?:one)?10[C,_][36]|iPhone X| X\\)$" , model : "iPhone X" , } , Model { regex : "(?:Apple-|.+_)?iPh(?:one)?11[C,_][2]| XS\\)$" , model : "iPhone XS" , } , Model { regex : "(?:Apple-|.+_)?iPh(?:one)?11[C,_][46]| XSMAX\\)$" , model : "iPhone XS Max" , } , Model { regex : "(?:Apple-|.+_)?iPh(?:one)?11[C,_][8]| XR\\)$" , model : "iPhone XR" , } , Model { regex : "(?:Apple-|.+_)?iPh(?:one)?12[C,_][1]| 11\\)$" , model : "iPhone 11" , } , Model { regex : "(?:Apple-|.+_)?iPh(?:one)?12[C,_][3]| 11PRO\\)$" , model : "iPhone 11 Pro" , } , Model { regex : "(?:Apple-|.+_)?iPh(?:one)?12[C,_][5]| 11PROMAX\\)$" , model : "iPhone 11 Pro Max" , } , Model { regex : "(?:Apple-|.+_)?iPh(?:one)?12[C,_][8]" , model : "iPhone SE (2020)" , } , Model { regex : "(?:Apple-|.+_)?iPh(?:one)?13[C,_][1]" , model : "iPhone 12 Mini" , } , Model { regex : "(?:Apple-|.+_)?iPh(?:one)?13[C,_][2]" , model : "iPhone 12" , } , Model { regex : "(?:Apple-|.+_)?iPh(?:one)?13[C,_][3]" , model : "iPhone 12 Pro" , } , Model { regex : "(?:Apple-|.+_)?iPh(?:one)?13[C,_][4]" , model : "iPhone 12 Pro Max" , } , Model { regex : "(?:Apple-|.+_)?iPad1[C,_]1" , model : "iPad" , } , Model { regex : "(?:Apple-|.+_)?iPad2[C,_][1234]" , model : "iPad 2" , } , Model { regex : "(?:Apple-|.+_)?iPad2[C,_][567]" , model : "iPad Mini" , } , Model { regex : "(?:Apple-|.+_)?iPad3[C,_][123]" , model : "iPad 3" , } , Model { regex : "(?:Apple-|.+_)?iPad3[C,_][456]" , model : "iPad 4" , } , Model { regex : "(?:Apple-|.+_)?iPad4[C,_][123]" , model : "iPad Air" , } , Model { regex : "(?:Apple-|.+_)?iPad4[C,_][456]" , model : "iPad Mini 2" , } , Model { regex : "(?:Apple-|.+_)?iPad4[C,_][789]" , model : "iPad Mini 3" , } , Model { regex : "(?:Apple-|.+_)?iPad5[C,_][12]" , model : "iPad Mini 4" , } , Model { regex : "(?:Apple-|.+_)?iPad5[C,_][34]" , model : "iPad Air 2" , } , Model { regex : "(?:Apple-|.+_)?iPad6[C,_][34]" , model : "iPad Pro 9.7" , } , Model { regex : "(?:Apple-|.+_)?iPad6[C,_][78]" , model : "iPad Pro 12.9" , } , Model { regex : "(?:Apple-|.+_)?iPad6[C,_](?:11|12)" , model : "iPad 5 9.7" , } , Model { regex : "(?:Apple-|.+_)?iPad7[C,_][12]" , model : "iPad Pro 2 12.9" , } , Model { regex : "(?:Apple-|.+_)?iPad7[C,_][34]" , model : "iPad Pro 10.5" , } , Model { regex : "(?:Apple-|.+_)?iPad7[C,_][56]" , model : "iPad 6 9.7" , } , Model { regex : "(?:Apple-|.+_)?iPad7[C,_](?:11|12)" , model : "iPad 7 10.2" , } , Model { regex : "(?:Apple-|.+_)?iPad8[C,_](?:9|10)" , model : "iPad Pro 2 11\"" , } , Model { regex : "(?:Apple-|.+_)?iPad8[C,_]1[12]" , model : "iPad Pro 4 12.9\"" , } , Model { regex : "(?:Apple-|.+_)?iPad8[C,_][1-4]" , model : "iPad Pro 3 11.0" , } , Model { regex : "(?:Apple-|.+_)?iPad8[C,_][5-8]" , model : "iPad Pro 3 12.9" , } , Model { regex : "(?:Apple-|.+_)?iPad11[C,_][12]" , model : "iPad Mini 5" , } , Model { regex : "(?:Apple-|.+_)?iPad11[C,_][34]" , model : "iPad Air 3" , } , Model { regex : "(?:Apple-|.+_)?iPad11[C,_][67]" , model : "iPad 8 10.2\"" , } , Model { regex : "(?:Apple-|.+_)?iPad13[C,_][12]" , model : "iPad Air 4" , } , Model { regex : "Apple-?TV2[C,_]1" , model : "Apple TV 2" , } , Model { regex : "Apple-?TV3[C,_][12]" , model : "Apple TV 3" , } , Model { regex : "Apple-?TV5[C,_]3" , model : "Apple TV 4" , } , Model { regex : "Apple-?TV6[C,_]2" , model : "Apple TV 4K" , } , Model { regex : "(?:iTunes-)?Apple[ _]?TV" , model : "Apple TV" , } , Model { regex : "HomePod" , model : "HomePod" , } , Model { regex : "iTunes-iPad/[0-9]+(?:\\.[0-9]+)* \\(([^;]+);" , model : "iPad $1" , } , Model { regex : "(?:Apple-|.+_)?iPad" , model : "iPad" , } , Model { regex : "iTunes-iPhone/[0-9]+(?:\\.[0-9]+)* \\(([^;]+);" , model : "iPhone $1" , } , Model { regex : "(?:Apple-)?iPhone ?(3GS?|4S?|5[CS]?|6(:? Plus)?)?" , model : "iPhone $1" , } ,]) , }) , ("Atom" , Brand { regex : "ATOM-(108AM|216RK|216AM)(?:[);/ ]|$)" , device : Some ("tv") , model : Some ("$1") , models : None , }) , ("InnJoo" , Brand { regex : "InnJoo|(?:Halo Plus|Halo X|Halo[ _]4(?:[ _]mini[ _]LTE)?|Halo2 3G|Fire2 Plus LTE)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "InnJoo[ _]X3(?:[);/ ]|$)" , model : "X3" , } , Model { regex : "Halo[ _]X[ _]LTE(?:[);/ ]|$)" , model : "Halo X LTE" , } , Model { regex : "InnJoo[ _]X(?:[);/ ]|$)" , model : "X" , } , Model { regex : "Halo Plus(?:[);/ ]|$)" , model : "Halo Plus" , } , Model { regex : "Halo[ _]4[ _]mini[ _]LTE(?:[);/ ]|$)" , model : "Halo 4 Mini LTE" , } , Model { regex : "Halo 4(?:[);/ ]|$)" , model : "Halo 4" , } , Model { regex : "Halo2 3G(?:[);/ ]|$)" , model : "Halo 2 3G" , } , Model { regex : "InnJoo[ _]Pro2(?:[);/ ]|$)" , model : "Pro 2" , } , Model { regex : "Innjoo ONE 3G(?:[);/ ]|$)" , model : "One 3G" , } , Model { regex : "Innjoo[ _]2[ _]LTE(?:[);/ ]|$)" , model : "2 LTE" , } , Model { regex : "InnJoo[ _]([2-4])" , model : "$1" , } , Model { regex : "Fire2 Plus LTE" , model : "Fire 2 Plus LTE" , } ,]) , }) , ("Zopo" , Brand { regex : "ZOPO|(?:ZOPO[_ ])?(Flash X3|ZP[0-9]{2,}[^/;]+)(?:\\)| Build)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(?:ZOPO_C2_MOD|ZP998)(?:[);/ ]|$)" , model : "C2 II" , } , Model { regex : "ZOPO 9xxQuad(?:[);/ ]|$)" , model : "9XX Quad" , } , Model { regex : "(?:ZOPO_)?ZP980[+](?:[);/ ]|$)" , model : "ZP980+" , } , Model { regex : "(?:ZOPO_)?ZP980(?:[);/ ]|$)" , model : "Scorpio" , } , Model { regex : "ZP952(?:[);/ ]|$)" , model : "Speed 7 Plus" , } , Model { regex : "ZP951(?:[);/ ]|$)" , model : "Speed 7" , } , Model { regex : "ZP955(?:[);/ ]|$)" , model : "Speed 8" , } , Model { regex : "ZP950[+h]?(?:[);/ ]|$)" , model : "Leader Max" , } , Model { regex : "ZP(?:900H?|910)(?:[);/ ]|$)" , model : "Leader" , } , Model { regex : "ZP(?:800H|810)(?:[);/ ]|$)" , model : "Libero HD" , } , Model { regex : "ZP500[+]?(?:[);/ ]|$)" , model : "Libero" , } , Model { regex : "ZP330(?:[);/ ]|$)" , model : "Color C" , } , Model { regex : "ZP370(?:[);/ ]|$)" , model : "Color S" , } , Model { regex : "ZP5(63|86)(?:[);/ ]|$)" , model : "Color X" , } , Model { regex : "ZP567(?:[);/ ]|$)" , model : "Color C5i" , } , Model { regex : "ZP300[S+]?(?:[);/ ]|$)" , model : "Field" , } , Model { regex : "ZP200[+]?(?:[);/ ]|$)" , model : "Shining" , } , Model { regex : "ZP100(?:[);/ ]|$)" , model : "Pilot" , } , Model { regex : "ZP1790(?:[);/ ]|$)" , model : "Flash X2" , } , Model { regex : "ZP781(?:[);/ ]|$)" , model : "Flash G5 Plus" , } , Model { regex : "ZOPO[_ ]ONE[_ ]([YXTP])(?:[);/ ]|$)" , model : "One $1" , } , Model { regex : "(?:ZOPO_)?(Flash X3|X1i|ZP[0-9]{2,}[^/;)]+)(?: Build|\\))" , model : "$1" , } ,]) , }) , ("Senwa" , Brand { regex : "Senwa|(?:S\\-?(?:471|7[12]5|6[01]5|915|905TL|1000|5018)|V705B|LS50F| LS50?|LS5518H|LS5718)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "S-?471(?:[);/ ]|$)" , model : "Jazz" , } , Model { regex : "S-?605(?:[);/ ]|$)" , model : "City" , } , Model { regex : "S-?905TL(?:[);/ ]|$)" , model : "Odin" , } , Model { regex : "S-?1000(?:[);/ ]|$)" , model : "Odin" , } , Model { regex : "S-?5018(?:[);/ ]|$)" , model : "Inizio" , } , Model { regex : "S-?(615|7[12]5|915)(?:[);/ ]|$)" , model : "S$1" , } , Model { regex : "V705B(?:[);/ ]|$)" , model : "V705B" , } , Model { regex : "LS50F(?:[);/ ]|$)" , model : "Evolution" , } , Model { regex : " LS50(?:[);/ ]|$)" , model : "Pegasus" , } , Model { regex : " LS5(?:[);/ ]|$)" , model : "Thor" , } , Model { regex : "LS5518H(?:[);/ ]|$)" , model : "Sparkly" , } , Model { regex : "LS5718(?:[);/ ]|$)" , model : "Diamond" , } , Model { regex : "Senwa[ _-]*([^;/]+)(?: Build|[;)])" , model : "$1" , } ,]) , }) , ("Wieppo" , Brand { regex : "Wieppo (S6 Lite|S[658]|E1)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Nous" , Brand { regex : "(?:NS(?:[356]|500[2-68]|5511|5502)|NS 5511)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "NS 5511(?:[);/ ]|$)" , model : "NS5511" , } , Model { regex : "(NS[0-9]{1,4})(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Santin" , Brand { regex : "(?:SANTIN|BiTBiZ_V58|ACTOMA ACE|DREAMPLUS03A|Candy U7 Pro)[);/_ ]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "BiTBiZ_V58(?:[);/ ]|$)" , model : "BiTBiZ V58" , } , Model { regex : "Candy U7 Pro(?:[);/ ]|$)" , model : "Candy U7 Pro" , } , Model { regex : "DREAMPLUS03A(?:[);/ ]|$)" , model : "Dream Plus 03A" , } , Model { regex : "GreenOrange(?:[);/ ]|$)" , model : "Green Orange" , } , Model { regex : "halove(?:[);/ ]|$)" , model : "Halove" , } , Model { regex : "ACTOMA ACE(?:[);/ ]|$)" , model : "Actoma Ace" , } , Model { regex : "monica(?:[);/ ]|$)" , model : "Monica" , } , Model { regex : "POWER(?:[);/ ]|$)" , model : "Power" , } , Model { regex : "GALAZ(?:[);/ ]|$)" , model : "Galaz" , } , Model { regex : "NEWDUN(?:[);/ ]|$)" , model : "Newdun" , } , Model { regex : "SANTIN[ _][#]?(Dante|Candy U7|Armor|YSL-Y7|ANT.W|N[13]|JS|S6|V9|Life Shine)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Changhong" , Brand { regex : "Changhong" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Changhong[ ]?(X1-K|X6|R8|Z9S?|Z1S|S18)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "ChangHong Android TV" , model : "" , } , Model { regex : "(?:Opera TV.+)Changhong-([^);/]+)" , model : "$1" , } ,]) , }) , ("Blloc" , Brand { regex : "(Zero18)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Owwo" , Brand { regex : "(?:OWWO[ _]?(?:[1457]S|Q[78])|CARNIVAL B5)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "OWWO[ _]?([1457]S|Q[78])(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "CARNIVAL B5(?:[);/ ]|$)" , model : "Carnival B5" , } ,]) , }) , ("MLS" , Brand { regex : "IQ(?:0705|L550|1010w?|1012N?|1019N|1025|1380|1401|1436|1452a|1453|1470|1502a|1511|1552|1553|1568|1570|1805N|1806|1808|1810B_M|1832|1850|1890|5017|9610|181011N|E[12]00|EL41|G550|GW516|L30|L5[01]|M801|M1001|N700|P50|R300|S300|S1001|W503|W511T|W553N?|W60[38]|W626|M960|D700|9013_4N)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "IQ0705(?:[);/ ]|$)" , model : "iQTalk Twist" , } , Model { regex : "IQL550(?:[);/ ]|$)" , model : "Notch Lite" , } , Model { regex : "IQ1010W?(?:[);/ ]|$)" , model : "iQTab 10" , } , Model { regex : "IQ1012N?(?:[);/ ]|$)" , model : "iQTab Brave 3G" , } , Model { regex : "IQ1025(?:[);/ ]|$)" , model : "iQTab Action 4G" , } , Model { regex : "iQ9013_4N(?:[);/ ]|$)" , model : "Life 10.1\"" , } , Model { regex : "IQ1019N(?:[);/ ]|$)" , model : "Alu Plus 4G 10.1\"" , } , Model { regex : "iQ1805N(?:[);/ ]|$)" , model : "iQTab Ideal 8.0\"" , } , Model { regex : "iQ181011N(?:[);/ ]|$)" , model : "iQTab Care 8.0\"" , } , Model { regex : "IQ1380(?:[);/ ]|$)" , model : "Brain 3G" , } , Model { regex : "IQ1401(?:[);/ ]|$)" , model : "iQTalk Verse 4G" , } , Model { regex : "IQ1436(?:[);/ ]|$)" , model : "Color mini 4G" , } , Model { regex : "IQ1452a(?:[);/ ]|$)" , model : "TOP-S 4G" , } , Model { regex : "IQ1453(?:[);/ ]|$)" , model : "Trend 4G" , } , Model { regex : "IQ1470(?:[);/ ]|$)" , model : "iQTalk Onyx" , } , Model { regex : "IQ1502a(?:[);/ ]|$)" , model : "iQTalk Flame" , } , Model { regex : "IQ1511(?:[);/ ]|$)" , model : "iQTalk Spicy" , } , Model { regex : "IQ1552(?:[);/ ]|$)" , model : "iQTalk Titan 4G" , } , Model { regex : "IQ1553(?:[);/ ]|$)" , model : "Color 3 4G" , } , Model { regex : "IQ1568(?:[);/ ]|$)" , model : "Range 4G" , } , Model { regex : "IQ1570(?:[);/ ]|$)" , model : "iQTalk Color 5.5 4G" , } , Model { regex : "IQ1806(?:[);/ ]|$)" , model : "iQTab Rose" , } , Model { regex : "IQ1808(?:[);/ ]|$)" , model : "iQTab Master" , } , Model { regex : "IQ1810B_M(?:[);/ ]|$)" , model : "iQTab Novel 3G" , } , Model { regex : "IQ1832(?:[);/ ]|$)" , model : "Jet 3G" , } , Model { regex : "IQ1850(?:[);/ ]|$)" , model : "Diamond 5.2 4G" , } , Model { regex : "IQ1890(?:[);/ ]|$)" , model : "iQTalk Aura" , } , Model { regex : "IQ5017(?:[);/ ]|$)" , model : "Slice 4G" , } , Model { regex : "IQ9610(?:[);/ ]|$)" , model : "Angel 3G" , } , Model { regex : "iQM960(?:[);/ ]|$)" , model : "Angel 3G (2018)" , } , Model { regex : "IQG550(?:[);/ ]|$)" , model : "Style 4G" , } , Model { regex : "IQGW516(?:[);/ ]|$)" , model : "F5" , } , Model { regex : "IQE100(?:[);/ ]|$)" , model : "Energy 4G" , } , Model { regex : "iQE200(?:[);/ ]|$)" , model : "MX 4G" , } , Model { regex : "IQEL41(?:[);/ ]|$)" , model : "Fab 4G" , } , Model { regex : "IQL30(?:[);/ ]|$)" , model : "Status 4G" , } , Model { regex : "IQL50(?:[);/ ]|$)" , model : "More 4G" , } , Model { regex : "IQL51(?:[);/ ]|$)" , model : "Wave 4G" , } , Model { regex : "IQM801(?:[);/ ]|$)" , model : "Brace 2018 4G" , } , Model { regex : "IQM1001(?:[);/ ]|$)" , model : "Level 4G" , } , Model { regex : "IQN700(?:[);/ ]|$)" , model : "Inspire 4G" , } , Model { regex : "IQP50(?:[);/ ]|$)" , model : "Ruby 4G" , } , Model { regex : "IQS300(?:[);/ ]|$)" , model : "DX 4G" , } , Model { regex : "IQS1001(?:[);/ ]|$)" , model : "Vista 4G" , } , Model { regex : "IQR300(?:[);/ ]|$)" , model : "R3 4G" , } , Model { regex : "IQW608(?:[);/ ]|$)" , model : "Regal" , } , Model { regex : "iQW603(?:[);/ ]|$)" , model : "Phab 6.0\"" , } , Model { regex : "IQW626(?:[);/ ]|$)" , model : "D6 4G" , } , Model { regex : "IQW511T(?:[);/ ]|$)" , model : "Liberal" , } , Model { regex : "IQW553N?(?:[);/ ]|$)" , model : "Alu 5.5\"" , } , Model { regex : "IQW503(?:[);/ ]|$)" , model : "Flame 4G (2018)" , } , Model { regex : "iQD700(?:[);/ ]|$)" , model : "Color Fingerprint 4G" , } ,]) , }) , ("Thuraya" , Brand { regex : "Thuraya[ _](X5-Touch)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Boway" , Brand { regex : "(?:sprd-)?(BOWAY)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "BOWAY[ _-]([^/;]+)[ _]Build" , model : "$1" , } , Model { regex : "([^/;]+) Build/BOWAY" , model : "$1" , } , Model { regex : ".*BOWAY[ _-]([^/;]+)/" , model : "$1" , } ,]) , }) , ("Rover" , Brand { regex : "Rover ([0-9]+)" , device : Some ("feature phone") , model : Some ("$1") , models : None , }) , ("Beyond" , Brand { regex : "SURVE(10|[26-8]|[12] PRO)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "SURVE([12]) PRO" , model : "Surve $1 Pro" , } , Model { regex : "SURVE(10|[26-8])" , model : "Surve $1" , } ,]) , }) , ("NOBUX" , Brand { regex : "SMART_VOLT_NX5(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("Smart Volt NX5") , models : None , }) , ("Yes" , Brand { regex : "M631Y|M685Y4|M651G_MY|YES (MPY(?:48|54))" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "M631Y" , model : "Altitude" , } , Model { regex : "M651G_MY" , model : "Altitude 2" , } , Model { regex : "M685Y4" , model : "Altitude 3" , } , Model { regex : "YES (MPY(?:48|54))" , model : "$1" , } ,]) , }) , ("Palm" , Brand { regex : "(?:Pre|Pixi)/(\\d+)\\.(\\d+)|Palm|Treo|Xiino" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "((?:Pre|Pixi))/(\\d+\\.\\d+)" , model : "$1 $2" , } , Model { regex : "Palm(?:[ \\-])?((?!OS|Source|scape)[a-z0-9]+)" , model : "$1" , } , Model { regex : "Treo([a-z0-9]+)" , model : "Treo $1" , } , Model { regex : "Tungsten" , model : "Tungsten" , } , Model { regex : "Xiino|Palmscape" , model : "" , } ,]) , }) , ("BGH" , Brand { regex : "(?!Positivo )BGH ([^/;\\)]+)(?: Build|\\))" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Y([17]00|2[01]0|1010)" , model : "Y$1" , } , Model { regex : "BGH (\\+Simple|Mini)" , model : "$1" , } , Model { regex : "Y710 KIDS" , model : "Y710 Kids" , } , Model { regex : "JOY X2" , model : "Joy X2" , } , Model { regex : "BGH ([^/;\\)]+)(?: Build|\\))" , model : "$1" , } ,]) , }) , ("Western Digital" , Brand { regex : "Westerndigital|WDSimpleBrowser" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "Streamer2010" , model : "Streamer (2010)" , } ,]) , }) , ("Vorago" , Brand { regex : "VORAGO" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "CELL-500" , model : "CELL-500" , } ,]) , }) , ("Savio" , Brand { regex : " (TB-PO1|TB-B01|TB-G01)(?:[);/ ]|$)" , device : Some ("tv") , model : Some ("$1") , models : None , }) , ("Vivax" , Brand { regex : "VIVAX|(?:Fly5[_ ]Lite|Fun[_ ]S500|Point[_ ](?:X[12]|X501|X450)|PRO3|32LE77SM|40LE77SM|FUN S1|FUN_S20)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Fly5[_ ]Lite(?:[);/ ]|$)" , model : "Fly 5 Lite" , } , Model { regex : "Point_X([12])(?:[);/ ]|$)" , model : "Point X$1" , } , Model { regex : "Fun[_ ]S500(?:[);/ ]|$)" , model : "Fun S500" , } , Model { regex : "FUN[ _]S(1|20)(?:[);/ ]|$)" , model : "Fun S$1" , } , Model { regex : "VIVAX[ _]Fly3(?:[);/ ]|$)" , model : "Fly 3" , } , Model { regex : "VIVAX[ _]Fly[ _]V1(?:[);/ ]|$)" , model : "Fly V1" , } , Model { regex : "(?:VIVAX )?(Point[ _](?:X551|X501|X450))(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "SMART Point X5010(?:[);/ ]|$)" , model : "Smart Point X5010" , } , Model { regex : "VIVAX[_ ]PRO3" , model : "Pro 3" , } , Model { regex : "VIVAX TABLET TPC 802 3G(?:[);/ ]|$)" , model : "TPC-802 3G" , } , Model { regex : "(32LE77SM|40LE77SM)" , model : "$1" , } ,]) , }) , ("Mystery" , Brand { regex : "MYSTERY|(MID-(?:123G|72[12]|7[01348]3G|753G|8[23]3G))(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "MID-(123G|72[12]|7[01348]3G|753G|8[23]3G)(?:[);/ ]|$)" , model : "MID-$1" , } , Model { regex : "MYSTERY_TV_(D3155CH31)" , model : "$1" , } ,]) , }) , ("Reeder" , Brand { regex : "(?:reeder[_ ](?:3G_Tablet|A7iC|A[78]i[_ ]Quad|A8i Q2|M8 Plus|[TM]8|M10 Plus|P11SE)|P12Curve)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "reeder[_ ](3G_Tablet|A7iC|A[78]i[_ ]Quad|A8i Q2|M8 Plus|[TM]8|M10 Plus|P11SE)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "P12Curve" , model : "P12 Curve" , } ,]) , }) , ("Einstein" , Brand { regex : "Einstein(T3)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Vision Touch" , Brand { regex : "Vision ?Touch" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "VisionTouchLife" , model : "Life" , } , Model { regex : "Inspire" , model : "Inspire" , } ,]) , }) , ("DoCoMo" , Brand { regex : "DoCoMo|\\;FOMA|KGT/1\\.0" , device : Some ("feature phone") , model : None , models : Some (& [Model { regex : "DoCoMo/.+MST.+(SH2101V)" , model : "$1" , } , Model { regex : "DoCoMo/[12]\\.0[/ ]([a-z0-9]+)" , model : "$1" , } , Model { regex : "([a-z0-9]+)(?:_W)?\\;FOMA" , model : "$1" , } , Model { regex : "KGT/1\\.0 ([a-z0-9]+)" , model : "$1" , } ,]) , }) , ("Asus" , Brand { regex : "Asus|Transformer|ZenFone Max|TF300T|Slider SL101|PadFone|ME302(?:C|KL)|ME301T|ME371MG|ME17(?:1|2V|3X)|(?:K0[01][0-9a-z]|P(?:00[18ACIL]|01[MTVWYZ]|01MA|01T_1|02[13478])(?: Build|\\))|X015D|X018D|X003|X00[7ABT]D|Z00D|Z00[MTY]D|Z01[7FGHKMR]D)(?:[);/ ]|$)|G55[023]KL|ZB(631|602|633|55[135]|50[01])KL|ZC(55[134]|520|600)KL|ZA550KL|ZE(5[02]0|620|55[2345])KL|ZD55[23]KL|ZS6(?:61|7[01])KS|ZS(6[0236]0|55[10])KL|ZB(500KG|601KL)|MeMo Pad FHD 10 LTE|Z00[SV]D" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "ME171(?:[);/ ]|$)" , model : "Eee Pad MeMO 171" , } , Model { regex : "ASUS Z906(?:[);/ ]|$)" , model : "Z906 10.1\"" , } , Model { regex : "ME172V" , model : "MeMO Pad" , } , Model { regex : "ME302C(?:[);/ ]|$)" , model : "MeMO Pad FHD 10" , } , Model { regex : "(ME302KL|MeMo Pad FHD 10 LTE)(?:[);/ ]|$)" , model : "MeMO Pad FHD 10 LTE" , } , Model { regex : "ME301T(?:[);/ ]|$)" , model : "MeMO Pad Smart 10" , } , Model { regex : "Z101(?:[);/ ]|$)" , model : "Z101" , } , Model { regex : "X Pad 10 LTE(?:[);/ ]|$)" , model : "X Pad 10 LTE" , } , Model { regex : "(?:K01[3A]|K007|K00R)(?:[);/ ]|$)|MeMO Pad 7" , model : "MeMO Pad 7" , } , Model { regex : "K01E(?:[);/ ]|$)" , model : "MeMO Pad 10 ME103K" , } , Model { regex : "K00U|ME173X(?:[);/ ]|$)" , model : "MeMO Pad HD 7" , } , Model { regex : "(?:K011|K00L)(?:[);/ ]|$)" , model : "MeMO Pad 8" , } , Model { regex : "K014(?:[);/ ]|$)" , model : "MeMO Pad 8.9" , } , Model { regex : "K00S(?:[);/ ]|$)" , model : "MeMO Pad HD 7 Dual SIM" , } , Model { regex : "K00F(?:[);/ ]|$)" , model : "MeMO Pad 10" , } , Model { regex : "K00C(?:[);/ ]|$)" , model : "Transformer Pad TF701T" , } , Model { regex : "K010(?:[);/ ]|$)" , model : "Transformer Pad TF103C" , } , Model { regex : "K018(?:[);/ ]|$)" , model : "Transformer Pad TF103CG" , } , Model { regex : "TF300T(?:[);/ ]|$)" , model : "Transformer Pad TF300T" , } , Model { regex : "K01B(?:[);/ ]|$)" , model : "Transformer Pad TF303K" , } , Model { regex : "Slider SL101" , model : "Eee Pad Slider SL101" , } , Model { regex : "P01[YZ]" , model : "ZenPad C 7.0" , } , Model { regex : "P008 Build" , model : "ZenPad Z8" , } , Model { regex : "P001" , model : "ZenPad Z10" , } , Model { regex : "(?:ASUS_)?P00J" , model : "ZenPad Z8s" , } , Model { regex : "P01[VW]" , model : "ZenPad 7.0" , } , Model { regex : "(?:P024|P00A)(?:[);/ ]|$)" , model : "ZenPad 8.0" , } , Model { regex : "P01MA?(?:[);/ ]|$)" , model : "ZenPad S 8.0" , } , Model { regex : "ASUS_(w706)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "P027" , model : "ZenPad 3S 10" , } , Model { regex : "(?:ASUS_)?P00I" , model : "ZenPad 3S 10 LTE" , } , Model { regex : "(?:ASUS_)?P00C|P02[138]|P00L|P01T_1" , model : "ZenPad 10" , } , Model { regex : "ASUS Tablet P1801-T" , model : "Transformer AiO P1801 18.4\"" , } , Model { regex : "ASUS TAB A8" , model : "TAB A8" , } , Model { regex : "ME371MG(?:[);/ ]|$)" , model : "Fonepad" , } , Model { regex : "K00G(?:[);/ ]|$)" , model : "Fonepad Note 6" , } , Model { regex : "(?:K012|K00E)(?:[);/ ]|$)" , model : "Fonepad 7" , } , Model { regex : "K00Z(?:[);/ ]|$)" , model : "Fonepad 7 Dual SIM" , } , Model { regex : "K016(?:[);/ ]|$)" , model : "Fonepad 8" , } , Model { regex : "(?:ASUS_)?T00N" , model : "PadFone S" , } , Model { regex : "(?:ASUS_)?T00[CE]" , model : "PadFone Mini" , } , Model { regex : "(?:ASUS[-_])?T00T" , model : "PadFone X Mini" , } , Model { regex : "PadFone T008" , model : "PadFone E" , } , Model { regex : "PadFone T004" , model : "PadFone Infinity" , } , Model { regex : "(?:ASUS_)?A002(A)?" , model : "ZenFone AR" , } , Model { regex : "(?:ASUS_)?A006" , model : "ZenFone V" , } , Model { regex : "(?:ASUS_)?A009" , model : "ZenFone V Live" , } , Model { regex : "(?:ASUS_)?Z007" , model : "ZenFone C" , } , Model { regex : "(?:ASUS_)?(X00P[SD]|ZB555KL)" , model : "ZenFone Max M1" , } , Model { regex : "(?:ASUS_)?(?:ZB60[12]KL)|ZenFone Max Pro M1" , model : "ZenFone Max Pro M1" , } , Model { regex : "(?:ASUS_)?(X01([AB]D)|ZB633KL)(?:[);/ ]|$)" , model : "ZenFone Max M2" , } , Model { regex : "(?:ASUS_)?(?:Z00[AD]|Z008D|Z008|Z00AD[AB]?|ZE551ML)" , model : "ZenFone 2" , } , Model { regex : "(?:ASUS_)?(?:ZenFone 2E)" , model : "ZenFone 2E" , } , Model { regex : "(?:ASUS_)?(?:A007|Z00YD|ZA550KL|ZB553KL|ZB501KL)(?:[);/ ]|$)" , model : "ZenFone Live" , } , Model { regex : "(?:ASUS_)?(?:X00RD|G552KL)" , model : "ZenFone Live L1" , } , Model { regex : "G553KL" , model : "ZenFone Lite L1" , } , Model { regex : "(?:ASUS_)?(?:Z00[ERLMTW]D|Z011D|ZE500KL)" , model : "ZenFone 2 Laser" , } , Model { regex : "(?:ASUS_)?(?:T00[IQ1]|Z01KD)" , model : "ZenFone 4" , } , Model { regex : "(?:ASUS_)?(?:T00[JF]|X00QD|X00QSA|ZE620KL)" , model : "ZenFone 5" , } , Model { regex : "(?:ASUS_)?T00P" , model : "ZenFone 5 LTE" , } , Model { regex : "(?:ASUS_)?(?:T00K|X017DA|X017D|ZC600KL)" , model : "ZenFone 5 Lite" , } , Model { regex : "(?:ASUS_)?(?:Z01RD|ZS620KL)" , model : "ZenFone 5Z" , } , Model { regex : "(?:ASUS_)?(?:T00G|Z002|ZS630KL|I01WD[X]?)" , model : "ZenFone 6" , } , Model { regex : "(?:ASUS_)?ZS671KS" , model : "ZenFone 7 Pro" , } , Model { regex : "(?:ASUS_)?(?:ZS670KS|I002D)(?:[);/ ]|$)" , model : "ZenFone 7" , } , Model { regex : "(?:ASUS_)?Z010D" , model : "ZenFone Max" , } , Model { regex : "(?:ASUS_)?X018D" , model : "ZenFone Max Plus M1" , } , Model { regex : "(?:ASUS_)?X00TD?" , model : "ZenFone Max Pro M1" , } , Model { regex : "(?:ASUS_)?(?:X01BDA|ZB631KL|Zenfone Max Pro M2)" , model : "ZenFone Max Pro M2" , } , Model { regex : "(?:ASUS_)?X014D" , model : "ZenFone Go Plus" , } , Model { regex : "(?:ASUS_)?(L001|X00[7AB]D|X009[DB][DA]|X009D|Z00[SV]D|ZB500K[LG]|ZB551KL)" , model : "ZenFone Go" , } , Model { regex : "(?:ASUS_)?X013D" , model : "ZenFone Go Life" , } , Model { regex : "(?:ASUS_)?G550KL" , model : "ZenFone Go TV" , } , Model { regex : "(?:ASUS_)?Z00[SV]D" , model : "ZenFone Go" , } , Model { regex : "(?:ASUS_)?(X00[23])" , model : "ZenFone Pegasus" , } , Model { regex : "(?:ASUS_)?X005" , model : "ZenFone Pegasus 5000" , } , Model { regex : "(?:ASUS_)?X550" , model : "ZenFone Pegasus 2 Plus" , } , Model { regex : "(?:ASUS_)?(X00GD)" , model : "ZenFone Pegasus 3S Max" , } , Model { regex : "(?:ASUS_)?(?:X00D[DS]|X008D)|ZC553KL" , model : "ZenFone 3 Max" , } , Model { regex : "(?:ASUS_)?(X008)" , model : "ZenFone 3 Pegasus" , } , Model { regex : "(?:ASUS_)?(ZE553KL|Z01HD)" , model : "ZenFone 3 Zoom" , } , Model { regex : "(?:ASUS_)?ZS550KL" , model : "ZenFone 3 Deluxe" , } , Model { regex : "(?:ASUS_)?Z00UD" , model : "ZenFone Selfie" , } , Model { regex : "(?:ASUS_)?(Z016[DS]|Z01FD)" , model : "ZenFone 3 Deluxe" , } , Model { regex : "(?:ASUS_)?(Z017DA|ZE520KL|ZE552KL|Z017D|Z012(D|S))" , model : "ZenFone 3" , } , Model { regex : "(?:ASUS_)?Z01B[DS]|ZC551KL" , model : "ZenFone 3 Laser" , } , Model { regex : "(?:ASUS_)?A001" , model : "ZenFone 3 Ultra" , } , Model { regex : "(?:ASUS_)?(?:ZD552KL|Z01MDA?)(?:[);/ ]|$)" , model : "ZenFone 4 Selfie Pro" , } , Model { regex : "(?:ASUS_)?(?:X00LDA|ZD553KL)" , model : "ZenFone 4 Selfie" , } , Model { regex : "(?:ASUS_)?(?:X00LD|Z01KS|Z01KDA|ZE554KL)" , model : "ZenFone 4" , } , Model { regex : "(?:ASUS_)?X00(?:[HIK]D|IS)|ZC554KL|ZC520KL" , model : "ZenFone 4 Max" , } , Model { regex : "(?:ASUS_)?X015D" , model : "ZenFone 4 Max Plus" , } , Model { regex : "(?:ASUS_)?(:?Z01G[DS]|ZS551KL)" , model : "ZenFone 4 Pro" , } , Model { regex : "(?:ASUS_)?Z00XS" , model : "ZenFone Zoom" , } , Model { regex : "(?:ASUS_)?(?:Z01QD|ZS600KL)" , model : "ROG Phone" , } , Model { regex : "(?:ASUS_)?(?:I001D[ABCE]?|ZS660KL)" , model : "ROG Phone 2" , } , Model { regex : "(?:ASUS_)?(?:I003DD?|ZS661KS)" , model : "ROG Phone 3" , } , Model { regex : "(?:ASUS_)?(?:I005DA)" , model : "ROG Phone 5" , } , Model { regex : "ZN220IC" , model : "Zen AiO ZN220IC" , } , Model { regex : "(?:ASUS_)?ZenWatch( 2)?" , model : "ZenWatch$1" , } , Model { regex : "Asus(?:-|;)?([a-z0-9]+)" , model : "$1" , } , Model { regex : "(PadFone(?: [^;/]+)?) Build" , model : "$1" , } , Model { regex : "(PadFone(?: [a-z0-9]+)?)" , model : "$1" , } , Model { regex : "(?:Asus|Transformer) ((?:Pad |Prime )?TF[0-9a-z]+)" , model : "Transformer $1" , } , Model { regex : "Chromebook Flip (C10[01]PA|C302)" , model : "Chromebook Flip $1" , } ,]) , }) , ("Newland" , Brand { regex : "(?:NLS-MT90)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("MT90 Orca") , models : None , }) , ("Huawei" , Brand { regex : "(HW-)?(?:Huawei(?!Browser)|MediaPad T1|Ideos|Honor[ _]?|(?:(?:AGS|AGS2|ALE|ALP|AMN|ANA|ANE|ARE|ARS|ASK|ATH|ATU|AUM|BAC|BAH[23]?|BG2|BGO|B[ZK]K|BKL|BL[ALN]|BND|BTV|CA[GMNZ]|CH[CM]|CHE[12]?|CLT|CMR|COL|COR|CPN|CRO|CRR|CUN|DIG|DLI|DRA|DUA|DUB|DUK|EDI|ELE|EML|EVA|EVR|FDR|FIG|FLA|FRD|FRL|GEM|GRA|HDN|HLK|HMA|Hol|HRY|HWI|H[36]0|INE|JAT|JEF|JDN|JDN2|JKM|JMM|JSN|KII|KIW|KNT|KOB|KSA|LDN|LEO|LIO|LLD|LND|LON|LRA|LUA|LY[AO]|MAR|MHA|MRD|MYA|NCE|NEM|NEO|NXT|PAR|PCT|PIC|PLE|PLK|POT|PPA|PRA|RIO|RNE|RVL|SCC|SCL|SCM|SEA|SHT|SLA|SNE|SPN|STF|STK|TAG|TIT|TNY|TRT|VCE|VEN|VIE|VKY|VNS|VOG|VRD|VTR|WAS|YAL|G(?:527|620S|621|630|735)|Y(?:221|330|550|6[23]5))-(?:[A-Z]{0,2}[0-9]{1,4}[A-Z]{0,3}?)|H1711|U(?:8230|8500|8661|8665|8667|8800|8818|8860|9200|9508))(?:[);/ ]|$))|hi6210sft|PE-(UL00|TL[12]0|TL00M)|T1-(A21[Lw]|A23L|701u|823L)|G7-(?:L01|TL00)|HW-01K|JNY-(LX[12]|AL10)|OXF-AN[01]0|TAS-(A[LN]00|L29|TL00)|WLZ-(AL10|AN00)|YOK-AN00|NIC-LX1A|MRX-(AL09|W09)|CDY-(?:[AT]N00|AN[29]0|NX9[AB])|GLK-(?:[AT]L00|LX1U)|JER-(?:AN20|[AT]N10)|ELS-(?:[AT]N[10]0|NX9|N39|N04)|AKA-(AL10|L29)|MON-(W|AL)19|BMH-AN[12]0|AQM-([AT]L[01]0|LX1)|MOA-(AL[02]0|LX9N)|NTS-AL00|ART-(?:[AT]L00[xm]|L29N?|L28)|MED-(?:[AT]L00|LX9N?)|EBG-(?:AN[01]0|TN00)|ANA-(?:[AT]N00|NX9)|BZ[AK]-W00|BZT-(W09|AL[01]0)|HDL-(AL09|W09)|HWV3[123]|HW-02L|TEL-[AT]N(?:00a?|10)|KKG-AN00|MXW-[AT]N00|JKM-AL00[ab]|TAH-(?:N29|AN00)m|C8817D|T1-821W|d-01[JK]|d-02[HK]|KRJ-W09|HWT31|Y320-U10|Y541-U02|VAT-L19|70[14]HW|60[58]HW|NOH-(?:NX9|AN00)|TNNH-AN00|LIO-(?:[TA]L00|[LN]29|AN00)|KOB2-[LW]09|AGS3-[WL]09|DNN-LX9|NEY-NX9|LON-AL00|HLK-L41|503HW|AGR-[LW]09|PPA-LX[12]|ANG-AN00|NOP-AN00|ALA-AN70|DVC-[AT]N20|302HW" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "POT-[TA]L00a(?:[);/ ]|$)" , model : "9S" , } , Model { regex : "U9500(?:[);/ ]|$)" , model : "Ascend D1" , } , Model { regex : "Z100-UL00(?:[);/ ]|$)" , model : "Ascend D3" , } , Model { regex : "Y320-(?:U10|T00|U05)(?:[);/ ]|$)" , model : "Ascend Y320" , } , Model { regex : "Y330-U05(?:[);/ ]|$)" , model : "Ascend Y330" , } , Model { regex : "Y541-U02(?:[);/ ]|$)" , model : "Ascend Y5C" , } , Model { regex : "U8818(?:[);/ ]|$)" , model : "Ascend G300" , } , Model { regex : "G527-U081(?:[);/ ]|$)" , model : "Ascend G527" , } , Model { regex : "(G620S-L0[13]|C8817D)(?:[);/ ]|$)" , model : "Ascend G620S" , } , Model { regex : "G630-U251(?:[);/ ]|$)" , model : "Ascend G630" , } , Model { regex : "G7-(?:L01|TL00)(?:[);/ ]|$)" , model : "Ascend G7" , } , Model { regex : "P7-L10(?:[);/ ]|$)" , model : "Ascend P7" , } , Model { regex : "G730-C00(?:[);/ ]|$)" , model : "Ascend G730" , } , Model { regex : "U9200(?:[);/ ]|$)" , model : "Ascend P1" , } , Model { regex : "H1711(?:[);/ ]|$)" , model : "Ascend XT2" , } , Model { regex : "Y221-U(?:[12]2|[0345]3)(?:[);/ ]|$)" , model : "Ascend Y221" , } , Model { regex : "Y550-L03(?:[);/ ]|$)" , model : "Ascend Y550" , } , Model { regex : "ART-[AT]L00[xm](?:[);/ ]|$)" , model : "Enjoy 10" , } , Model { regex : "STK-[AT]L00(?:[);/ ]|$)" , model : "Enjoy 10 Plus" , } , Model { regex : "MED-[AT]L00(?:[);/ ]|$)" , model : "Enjoy 10E" , } , Model { regex : "AQM-[AT]L00(?:[);/ ]|$)" , model : "Enjoy 10S" , } , Model { regex : "TAG-[ACT]L00(?:[);/ ]|$)" , model : "Enjoy 5S" , } , Model { regex : "NCE-(AL[10]0|TL10)(?:[);/ ]|$)" , model : "Enjoy 6" , } , Model { regex : "DIG-(?:TL10|AL00)(?:[);/ ]|$)" , model : "Enjoy 6S" , } , Model { regex : "SLA-(?:AL00|TL10)(?:[);/ ]|$)" , model : "Enjoy 7" , } , Model { regex : "FIG-(?:[AT]L[10]0)(?:[);/ ]|$)" , model : "Enjoy 7S" , } , Model { regex : "(?:TRT-AL00[A]?|TRT-TL10A)(?:[);/ ]|$)" , model : "Enjoy 7 Plus" , } , Model { regex : "LDN-(?:AL[12]0|TL[02]0)(?:[);/ ]|$)" , model : "Enjoy 8" , } , Model { regex : "FLA-AL10(?:[);/ ]|$)" , model : "Enjoy 8 Plus" , } , Model { regex : "ATU-[AT]L10(?:[);/ ]|$)" , model : "Enjoy 8e" , } , Model { regex : "MRD-[TA]L00(?:[);/ ]|$)" , model : "Enjoy 9e" , } , Model { regex : "DVC-[AT]N20(?:[);/ ]|$)" , model : "Enjoy 20 Pro" , } , Model { regex : "U8665(?:[);/ ]|$)" , model : "Fusion 2" , } , Model { regex : "MED-LX9N?(?:[);/ ]|$)" , model : "Y6p" , } , Model { regex : "G735-L(?:03|12|23)(?:[);/ ]|$)" , model : "G Play" , } , Model { regex : "CHC-U(?:0[13]|23)(?:[);/ ]|$)" , model : "G Play Mini" , } , Model { regex : "(?:Honor_|HW-)?G621-TL00M?(?:[);/ ]|$)" , model : "G621" , } , Model { regex : "DIG-L2[12](?:[);/ ]|$)" , model : "GR3 (2017)" , } , Model { regex : "KII-L21(?:[);/ ]|$)" , model : "GR5" , } , Model { regex : "BLL-L2[12](?:[);/ ]|$)" , model : "GR5 (2017)" , } , Model { regex : "RIO-L03(?:[);/ ]|$)" , model : "GX8" , } , Model { regex : "U8860(?:[);/ ]|$)" , model : "Honor" , } , Model { regex : "COL-(?:AL[01]0|TL[01]0|L29)(?:[);/ ]|$)" , model : "Honor 10" , } , Model { regex : "HRY-(?:[AT]L00[A]?|LX[12]|LX1MEB)(?:[);/ ]|$)" , model : "Honor 10 Lite" , } , Model { regex : "HRY-LX1T(?:[);/ ]|$)" , model : "Honor 10I" , } , Model { regex : "U9508(?:[);/ ]|$)" , model : "Honor 2" , } , Model { regex : "YAL-(?:L21|[AT]L00)(?:[);/ ]|$)" , model : "Honor 20" , } , Model { regex : "LRA-AL00(?:[);/ ]|$)" , model : "Honor 20 Lite" , } , Model { regex : "(HRY-AL00T[a]?)(?:[);/ ]|$)" , model : "Honor 20I" , } , Model { regex : "YAL-(L41|AL10)(?:[);/ ]|$)" , model : "Honor 20 Pro" , } , Model { regex : "(MAR-LX1H|YAL-AL50)(?:[);/ ]|$)" , model : "Honor 20S" , } , Model { regex : "(?:BMH-AN[12]0)(?:[);/ ]|$)" , model : "Honor 30" , } , Model { regex : "EBG-[AT]N00(?:[);/ ]|$)" , model : "Honor 30 Pro" , } , Model { regex : "EBG-AN10(?:[);/ ]|$)" , model : "Honor 30 Pro Plus" , } , Model { regex : "CDY-(?:AN90|NX9A)(?:[);/ ]|$)" , model : "Honor 30S" , } , Model { regex : "LRA-LX1(?:[);/ ]|$)" , model : "Honor 30I" , } , Model { regex : "MXW-[AT]N00(?:[);/ ]|$)" , model : "Honor 30 Lite" , } , Model { regex : "(?:Honor_|HW-)?H30-(?:C00|L01M?|L02|U10|T00|T10)(?:_TD)?(?:[);/ ]|$)" , model : "Honor 3C" , } , Model { regex : "Hol-U19(?:[);/ ]|$)" , model : "Honor 3C Lite" , } , Model { regex : "G750-T01(?:[);/ ]|$)" , model : "Honor 3X" , } , Model { regex : "(?:Honor_|HW-)?SCL-(?:AL00|CL00|TL00H?)(?:_TD)?(?:[);/ ]|$)" , model : "Honor 4A" , } , Model { regex : "(?:Honor_|HW-)?CHM-U01(?:_TD)?(?:[);/ ]|$)" , model : "Honor 4C" , } , Model { regex : "Honor 4c Pro(?:[);/ ]|$)" , model : "Honor 4C Pro" , } , Model { regex : "AQM-AL10(?:[);/ ]|$)" , model : "Honor 4T Pro" , } , Model { regex : "(CHE2?-[UT]L00[HM]?|CHE1-CL[12]0|CHE2-L(?:1[12]|23)|Che1-L04|CHE-TL00)(?:[);/ ]|$)" , model : "Honor 4X" , } , Model { regex : "(?:Honor_|HW-)?CUN-[AT]L00(?:[);/ ]|$)" , model : "Honor 5 Play" , } , Model { regex : "(?:Honor_|HW-)?CAM-(?:AL00|TL00H|TL00)(?:_TD)?(?:[);/ ]|$)" , model : "Honor 5A" , } , Model { regex : "(?:Honor_|HW-)?NEM-(?:AL10|L51|UL10|TL00)(?:[);/ ]|$)" , model : "Honor 5C" , } , Model { regex : "(?:Honor_|HW-)?NEM-(?:L22|TL00H)(?:[);/ ]|$)" , model : "Honor 5C Dual SIM" , } , Model { regex : "(?:Honor_|HW-)?KIW-(?:AL10|TL00H|[TC]L00|L2[1-4]|UL00)(?:_TD)?(?:[);/ ]|$)" , model : "Honor 5X" , } , Model { regex : "((?:Honor_|HW-)?H60-L(?:01|02|03|04|11|12)(?:_TD)?|HW-H60-J1)(?:[);/ ]|$)" , model : "Honor 6" , } , Model { regex : "MYA-TL10(?:[);/ ]|$)" , model : "Honor 6 Play" , } , Model { regex : "PE-(UL00|TL[12]0|TL00M)(?:[);/ ]|$)" , model : "Honor 6 Plus" , } , Model { regex : "(?:HONOR[ _]?)?DLI-(?:AL10|L[24]2|TL20)(?:[);/ ]|$)" , model : "Honor 6A" , } , Model { regex : "DIG-L21HN(?:[);/ ]|$)" , model : "Honor 6C" , } , Model { regex : "JMM-L22(?:[);/ ]|$)" , model : "Honor 6C Pro" , } , Model { regex : "(?:HONOR[ _]?)?BLN-(?:L2[124]|AL[1234]0|TL[01]0(?:[);/ ]|$))" , model : "Honor 6X" , } , Model { regex : "(?:Honor[_]?|HW-)?PLK-(?:AL10|CL00|TL00|TL01H?|UL00|L01)(?:[);/ ]|$)" , model : "Honor 7" , } , Model { regex : "(?:Honor_|HW-)?NEM-L21(?:[);/ ]|$)" , model : "Honor 7 Lite" , } , Model { regex : "AUM-(?:AL[20]0|L33[A]?|TL20)(?:[);/ ]|$)" , model : "Honor 7A" , } , Model { regex : "AUM-L29(?:[);/ ]|$)" , model : "Honor 7A Pro" , } , Model { regex : "(?:Honor_|HW-)?(?:LND-(?:AL[34]0|L29|TL40)|AUM-L41)(?:[);/ ]|$)" , model : "Honor 7C" , } , Model { regex : "ATH-(?:[CAU]L00|TL00H)(?:[);/ ]|$)" , model : "Honor 7i" , } , Model { regex : "(?:Honor_|HW-)?DUA-(?:L22|LX3)(?:[);/ ]|$)" , model : "Honor 7S" , } , Model { regex : "(?:HONOR[ _]?)?BND-(?:AL[01]0|TL10|L2[14]|L31)(?:[);/ ]|$)" , model : "Honor 7X" , } , Model { regex : "(?:FRD-(?:AL[01]0|L0[249]|L1[49]|DL00)|VAT-L19)(?:[);/ ]|$)" , model : "Honor 8" , } , Model { regex : "PRA-(?:AL00X|AL00|TL10)(?:[);/ ]|$)" , model : "Honor 8 Lite" , } , Model { regex : "DUK-(?:L09|TL30)(?:[);/ ]|$)" , model : "Honor 8 Pro" , } , Model { regex : "VEN-L22(?:[);/ ]|$)" , model : "Honor 8 Smart" , } , Model { regex : "JAT-L(29|X[13])(?:[);/ ]|$)" , model : "Honor 8A" , } , Model { regex : "JAT-L41(?:[);/ ]|$)" , model : "Honor 8A Pro" , } , Model { regex : "BKK-(?:AL[10]0|L21|L22|LX2|TL00)(?:[);/ ]|$)" , model : "Honor 8C" , } , Model { regex : "KSA-(LX[239]|AL00)(?:[);/ ]|$)" , model : "Honor 8S" , } , Model { regex : "JSN-L(?:2[123]|42)|JSN-[TA]L00[a]?(?:[);/ ]|$)" , model : "Honor 8X" , } , Model { regex : "ARE-(?:AL[10]0|L22(?:HN)?|TL00)(?:[);/ ]|$)" , model : "Honor 8X Max" , } , Model { regex : "STF-(?:AL[10]0|L09S?|TL10)(?:[);/ ]|$)" , model : "Honor 9" , } , Model { regex : "MOA-LX9N(?:[);/ ]|$)" , model : "Honor 9A" , } , Model { regex : "AKA-L29(?:[);/ ]|$)" , model : "Honor 9C" , } , Model { regex : "LLD-(?:AL[01]0|L[23]1|TL10)(?:[);/ ]|$)" , model : "Honor 9 Lite" , } , Model { regex : "LLD-AL[23]0(?:[);/ ]|$)" , model : "Honor 9i" , } , Model { regex : "DUA-LX9(?:[);/ ]|$)" , model : "Honor 9S" , } , Model { regex : "HLK-AL00a?(?:[);/ ]|$)" , model : "Honor 9X" , } , Model { regex : "HLK-(?:AL10|L4[12])(?:[);/ ]|$)" , model : "Honor 9X Pro" , } , Model { regex : "CAM-UL00(?:[);/ ]|$)" , model : "Honor Holly 3" , } , Model { regex : "NTS-AL00(?:[);/ ]|$)" , model : "Honor Magic" , } , Model { regex : "TNY-[AT]L00(?:[);/ ]|$)" , model : "Honor Magic 2" , } , Model { regex : "RVL-AL09(?:[);/ ]|$)" , model : "Honor Note 10" , } , Model { regex : "EDI-AL10(?:[);/ ]|$)" , model : "Honor Note 8" , } , Model { regex : "VKY-TL00(?:[);/ ]|$)" , model : "Honor P10 Plus" , } , Model { regex : "VOG-AL00(?:[);/ ]|$)" , model : "Honor P30 Pro" , } , Model { regex : "ANA-(?:[AT]N00|NX9)(?:[);/ ]|$)" , model : "Honor P40" , } , Model { regex : "COR-(?:AL[01]0|L29|TL10)(?:[);/ ]|$)" , model : "Honor Play" , } , Model { regex : "ASK-AL(00x|20)(?:[);/ ]|$)" , model : "Honor Play 3" , } , Model { regex : "KSA-AL10(?:[);/ ]|$)" , model : "Honor Play 3E" , } , Model { regex : "TNNH-AN00(?:[);/ ]|$)" , model : "Honor Play 4" , } , Model { regex : "CHM-[CUT]L00[HM]?(?:[);/ ]|$)" , model : "Honor Play 4C" , } , Model { regex : "AKA-AL10(?:[);/ ]|$)" , model : "Honor Play 4T" , } , Model { regex : "DUA-[TA]L00(?:[);/ ]|$)" , model : "Honor Play 7" , } , Model { regex : "JAT-[AT]L00(?:[);/ ]|$)" , model : "Honor Play 8A" , } , Model { regex : "MOA-AL[02]0(?:[);/ ]|$)" , model : "Honor Play 9A" , } , Model { regex : "BKL-(?:AL00|AL20|AL30|L09|TL10)(?:[);/ ]|$)" , model : "Honor V10" , } , Model { regex : "PCT-[TA]L10(?:[);/ ]|$)" , model : "Honor V20" , } , Model { regex : "YOK-AN10(?:[);/ ]|$)" , model : "Honor V40" , } , Model { regex : "KNT-(?:AL[12]0|[TU]L10)(?:[);/ ]|$)" , model : "Honor V8" , } , Model { regex : "DUK-AL20(?:[);/ ]|$)" , model : "Honor V9" , } , Model { regex : "JMM-[AT]L[01]0(?:[);/ ]|$)" , model : "Honor V9 Play" , } , Model { regex : "BKL-L04(?:[);/ ]|$)" , model : "Honor View 10" , } , Model { regex : "PCT-L29(?:[);/ ]|$)" , model : "Honor View 20" , } , Model { regex : "OXF-AN00(?:[);/ ]|$)" , model : "Honor View 30" , } , Model { regex : "OXF-AN10(?:[);/ ]|$)" , model : "Honor View 30 Pro" , } , Model { regex : "(?:Honor_|HW-)?SCL-L(01|32)(?:_TD)?(?:[);/ ]|$)" , model : "Honor Y6" , } , Model { regex : "(?:Honor_|HW-)?LYO-L21(?:[);/ ]|$)" , model : "Honor Y6 II Compact" , } , Model { regex : "TEL-(?:AN(?:00a?|10)|TN00)(?:[);/ ]|$)" , model : "Honor X10" , } , Model { regex : "KKG-AN00(?:[);/ ]|$)" , model : "Honor X10 Max" , } , Model { regex : "DNN-LX9(?:[);/ ]|$)" , model : "Honor X10 Lite" , } , Model { regex : "ALA-AN70(?:[);/ ]|$)" , model : "Honor V40 Lite" , } , Model { regex : "U8500(?:[);/ ]|$)" , model : "Ideos X2" , } , Model { regex : "U8510(?:[);/ ]|$)" , model : "Ideos X3" , } , Model { regex : "U8800(?:[);/ ]|$)" , model : "Ideos X5" , } , Model { regex : "MLA-AL10(?:[);/ ]|$)" , model : "Maimang 5" , } , Model { regex : "POT-AL10(?:[);/ ]|$)" , model : "Maimang 8" , } , Model { regex : "TAH-(?:N29|AN00)m(?:[);/ ]|$)" , model : "Mate XS" , } , Model { regex : "ALP-(?:[TA]L00|L[02]9)(?:[);/ ]|$)" , model : "Mate 10" , } , Model { regex : "RNE-(?:AL00|L(?:01|03|21|23))(?:[);/ ]|$)" , model : "Mate 10 Lite" , } , Model { regex : "BLA-(?:A09|L[02]9|[TA]L00)(?:[);/ ]|$)" , model : "Mate 10 Pro" , } , Model { regex : "HMA-(?:[AT]L00|L[02]9)(?:[);/ ]|$)" , model : "Mate 20" , } , Model { regex : "SNE-(?:AL00|LX[0-3])(?:[);/ ]|$)" , model : "Mate 20 Lite" , } , Model { regex : "LYA-(?:AL[01]0|L[02]9|L0C|TL00)(?:[);/ ]|$)" , model : "Mate 20 Pro" , } , Model { regex : "LYA-AL00P(?:[);/ ]|$)" , model : "Mate 20 RS" , } , Model { regex : "EVR-(?:[TA]L00|L29|N29|AN00)(?:[);/ ]|$)" , model : "Mate 20 X" , } , Model { regex : "TAS-([AT]L00|L29)(?:[);/ ]|$)" , model : "Mate 30" , } , Model { regex : "TAS-AN00(?:[);/ ]|$)" , model : "Mate 30 5G" , } , Model { regex : "SPN-AL00(?:[);/ ]|$)" , model : "Mate 30 Lite" , } , Model { regex : "LIO-(?:[TA]L00|L29|AN00)(?:[);/ ]|$)" , model : "Mate 30 Pro" , } , Model { regex : "LIO-N29(?:[);/ ]|$)" , model : "Mate 30 Pro 5G" , } , Model { regex : "NOH-(?:NX9|AN00)(?:[);/ ]|$)" , model : "Mate 40 Pro" , } , Model { regex : "NOP-AN00(?:[);/ ]|$)" , model : "Mate 40 Pro+" , } , Model { regex : "NXT-(?:AL10|L29)(?:[);/ ]|$)" , model : "Mate 8" , } , Model { regex : "MHA-(?:L[02]9|[AT]L00)(?:[);/ ]|$)" , model : "Mate 9" , } , Model { regex : "BLL-L23(?:[);/ ]|$)" , model : "Mate 9 Lite" , } , Model { regex : "LON-(?:AL00(?:-PD)?|L29)(?:[);/ ]|$)" , model : "Mate 9 Pro" , } , Model { regex : "NEO-AL00(?:[);/ ]|$)" , model : "Mate RS" , } , Model { regex : "NEO-L29(?:[);/ ]|$)" , model : "Mate RS Porsche Design" , } , Model { regex : "CRR-(?:L09|UL00)(?:[);/ ]|$)" , model : "Mate S" , } , Model { regex : "BND-L34(?:[);/ ]|$)" , model : "Mate SE" , } , Model { regex : "(CAZ-(?:AL[01]0|TL[12]0)|CAN-L[01][1-3])(?:[);/ ]|$)" , model : "Nova" , } , Model { regex : "608HW(?:[);/ ]|$)" , model : "Nova Lite" , } , Model { regex : "(?:PIC-(?:[AT]L00|LX9)|HWV31)(?:[);/ ]|$)" , model : "Nova 2" , } , Model { regex : "704HW(?:[);/ ]|$)" , model : "Nova 2 Lite" , } , Model { regex : "BAC-(?:L01|TL00)(?:[);/ ]|$)" , model : "Nova 2 Plus" , } , Model { regex : "BAC-(?:AL00|L2[12])(?:[);/ ]|$)" , model : "Nova 2 Plus Dual SIM" , } , Model { regex : "RNE-L[02]2(?:[);/ ]|$)" , model : "Nova 2I" , } , Model { regex : "HWI-[AT]L00(?:[);/ ]|$)" , model : "Nova 2S" , } , Model { regex : "PAR-(?:[AT]L00|LX[19]|LX1M|TL20)(?:[);/ ]|$)" , model : "Nova 3" , } , Model { regex : "ANE-AL00(?:[);/ ]|$)" , model : "Nova 3e" , } , Model { regex : "INE-(?:AL00|LX[12]r|LX[12]|TL00)(?:[);/ ]|$)" , model : "Nova 3i" , } , Model { regex : "VCE-(L22|[AT]L00)(?:[);/ ]|$)" , model : "Nova 4" , } , Model { regex : "MAR-AL00(?:[);/ ]|$)" , model : "Nova 4e" , } , Model { regex : "SEA-AL00(?:[);/ ]|$)" , model : "Nova 5" , } , Model { regex : "SEA-AL10(?:[);/ ]|$)" , model : "Nova 5 Pro" , } , Model { regex : "GLK-(?:[AT]L00|LX1U)(?:[);/ ]|$)" , model : "Nova 5i" , } , Model { regex : "SPN-TL00(?:[);/ ]|$)" , model : "Nova 5i Pro" , } , Model { regex : "WLZ-AL10(?:[);/ ]|$)" , model : "Nova 6" , } , Model { regex : "WLZ-AN00(?:[);/ ]|$)" , model : "Nova 6 5G" , } , Model { regex : "JNY-AL10(?:[);/ ]|$)" , model : "Nova 6 SE" , } , Model { regex : "JEF-(?:[AT]N00|AN20|NX9)(?:[);/ ]|$)" , model : "Nova 7 5G" , } , Model { regex : "JER-(?:[AT]N10|AN20)(?:[);/ ]|$)" , model : "Nova 7 Pro 5G" , } , Model { regex : "CDY-(?:[AT]N00|NX9B|AN20)(?:[);/ ]|$)" , model : "Nova 7 SE 5G" , } , Model { regex : "JNY-LX2(?:[);/ ]|$)" , model : "Nova 7i" , } , Model { regex : "ANG-AN00(?:[);/ ]|$)" , model : "Nova 8 5G" , } , Model { regex : "DIG-L01(?:[);/ ]|$)" , model : "Nova Smart" , } , Model { regex : "WAS-AL00(?:[);/ ]|$)" , model : "Nova Youth" , } , Model { regex : "FIG-L(?:A1|X[123])(?:[);/ ]|$)" , model : "P smart" , } , Model { regex : "POT-(?:LX(?:[13]|1T|2J|1AF)|AL00)(?:[);/ ]|$)" , model : "P smart (2019)" , } , Model { regex : "POT-LX1A(?:[);/ ]|$)" , model : "P smart (2020)" , } , Model { regex : "PPA-LX[12](?:[);/ ]|$)" , model : "P smart (2021)" , } , Model { regex : "STK-LX1(?:[);/ ]|$)" , model : "P smart Z" , } , Model { regex : "VTR-(?:L[02]9|AL00|TL00)(?:[);/ ]|$)" , model : "P10" , } , Model { regex : "WAS-(?:L(?:X1|X1A|X2|X2J|X3|03T)|TL10)(?:[);/ ]|$)" , model : "P10 Lite" , } , Model { regex : "VKY-(?:AL00|L09|L29)(?:[);/ ]|$)" , model : "P10 Plus" , } , Model { regex : "BAC-L[02]3(?:[);/ ]|$)" , model : "P10 Selfie" , } , Model { regex : "EML-(?:[TA]L00|L[02]9)(?:[);/ ]|$)" , model : "P20" , } , Model { regex : "(?:ANE-(?:LX[123]|LX2J|TL00)|HWV32)(?:[);/ ]|$)" , model : "P20 Lite" , } , Model { regex : "(?:CLT-(?:AL0[01]|TL0[01]|L(?:04|[02]9))|HW-01K)(?:[);/ ]|$)" , model : "P20 Pro" , } , Model { regex : "(ELE-L(?:04|09|29)|ELE-[AT]L00)(?:[);/ ]|$)" , model : "P30" , } , Model { regex : "(?:MAR-(?:LX(?:1[BM]|2B|[13]Am?|2J?|3BM)|TL00)|NIC-LX1A|HWV33)(?:[);/ ]|$)" , model : "P30 Lite" , } , Model { regex : "(?:VOG-(?:L(?:04|09|29)|TL00|AL10)|HW-02L)(?:[);/ ]|$)" , model : "P30 Pro" , } , Model { regex : "ANA-LX4(?:[);/ ]|$)" , model : "P40" , } , Model { regex : "JNY-LX1(?:[);/ ]|$)" , model : "P40 Lite" , } , Model { regex : "ART-L29(?:[);/ ]|$)" , model : "P40 Lite E" , } , Model { regex : "ART-L29N(?:[);/ ]|$)" , model : "P40 Lite E NFC" , } , Model { regex : "(?:ELS-(?:[AT]N00|NX9|N04)|NEY-NX9)(?:[);/ ]|$)" , model : "P40 Pro" , } , Model { regex : "ELS-(?:AN10|N39)(?:[);/ ]|$)" , model : "P40 Pro Plus" , } , Model { regex : "GRA-(?:L09|UL00)(?:[);/ ]|$)" , model : "P8" , } , Model { regex : "(?:ALE-L(?:02|21|23)|ALE-UL00|ALE-TL00|503HW)(?:[);/ ]|$)" , model : "P8 Lite (2015)" , } , Model { regex : "(?:PRA-L(?:A1|X2|X1|X3)|hi6210sft)(?:[);/ ]|$)" , model : "P8 Lite (2017)" , } , Model { regex : "EVA-(?:AL[10]0|L[012]9|[TCD]L00)(?:[);/ ]|$)" , model : "P9" , } , Model { regex : "VNS-L(?:[23]1|[26]2)(?:[);/ ]|$)" , model : "P9 Lite" , } , Model { regex : "SLA-L(?:02|03|22|23)(?:[);/ ]|$)" , model : "P9 Lite Mini" , } , Model { regex : "DIG-L(?:03|23)(?:[);/ ]|$)" , model : "P9 Lite Smart" , } , Model { regex : "VIE-(?:AL10|L[02]9)(?:[);/ ]|$)" , model : "P9 Plus" , } , Model { regex : "ATH-UL0[16](?:[);/ ]|$)" , model : "ShotX" , } , Model { regex : "U(8230|8661|8667)(?:[);/ ]|$)" , model : "U$1" , } , Model { regex : "ARS-([AT]L00|L22)(?:[);/ ]|$)" , model : "Y Max" , } , Model { regex : "CRO-(?:L[02]2|U00)(?:[);/ ]|$)" , model : "Y3 (2017)" , } , Model { regex : "CAG-L[02]2(?:[);/ ]|$)" , model : "Y3 (2018)" , } , Model { regex : "LUA-(U22|L2[12]|U03)(?:[);/ ]|$)" , model : "Y3II" , } , Model { regex : "MYA-(?:L(?:02|03|2[23])|U29)(?:[);/ ]|$)" , model : "Y5 (2017)" , } , Model { regex : "DRA-L(?:01|03|21|23|X3)(?:[);/ ]|$)" , model : "Y5 (2018)" , } , Model { regex : "AMN-LX[1239](?:[);/ ]|$)" , model : "Y5 (2019)" , } , Model { regex : "DRA-LX5(?:[);/ ]|$)" , model : "Y5 lite" , } , Model { regex : "DRA-LX9(?:[);/ ]|$)" , model : "Y5p" , } , Model { regex : "CRO-L[02]3(?:[);/ ]|$)" , model : "Y5 Lite (2017)" , } , Model { regex : "CAG-L[02]3(?:[);/ ]|$)" , model : "Y5 Lite (2018)" , } , Model { regex : "DRA-(?:LX2|[AT]L00)(?:[);/ ]|$)" , model : "Y5 Prime (2018)" , } , Model { regex : "MYA-L13(?:[);/ ]|$)" , model : "Y5 Pro (2017)" , } , Model { regex : "CUN-(?:L(?:0[123]|2[123]|33)|U29)(?:[);/ ]|$)" , model : "Y5II" , } , Model { regex : "(?:SCC-U21|SCL-U31)(?:[);/ ]|$)" , model : "Y6" , } , Model { regex : "MYA-L11(?:[);/ ]|$)" , model : "Y6 (2016)" , } , Model { regex : "MYA-(L41|AL10)(?:[);/ ]|$)" , model : "Y6 (2017)" , } , Model { regex : "ATU-L(?:11|21|22|X3)(?:[);/ ]|$)" , model : "Y6 (2018)" , } , Model { regex : "MRD-L(?:X1[NF]?|X3)(?:[);/ ]|$)" , model : "Y6 (2019)" , } , Model { regex : "ATU-L(?:31|42)(?:[);/ ]|$)" , model : "Y6 Prime (2018)" , } , Model { regex : "TIT-(?:AL00|L01|U02)(?:[);/ ]|$)" , model : "Y6 Pro" , } , Model { regex : "MRD-LX2(?:[);/ ]|$)" , model : "Y6 Pro (2019)" , } , Model { regex : "Y625-U03(?:[);/ ]|$)" , model : "Y625" , } , Model { regex : "Y635-L0[123](?:[);/ ]|$)" , model : "Y635" , } , Model { regex : "Y635-L21(?:[);/ ]|$)" , model : "Y635 Dual SIM" , } , Model { regex : "CAM-L(?:03|21|23|32)(?:[);/ ]|$)" , model : "Y6II" , } , Model { regex : "TRT-LX[123](?:[);/ ]|$)" , model : "Y7 (2017)" , } , Model { regex : "LDN-L(?:01|X3)(?:[);/ ]|$)" , model : "Y7 (2018)" , } , Model { regex : "(?:HUAWEI[ _]?)?DUB-(?:LX[13]|TL00)(?:[);/ ]|$)" , model : "Y7 (2019)" , } , Model { regex : "(LDN-(?:AL00|L21)|TRT-TL10)(?:[);/ ]|$)" , model : "Y7 Prime" , } , Model { regex : "(LDN-(?:LX2|TL10)|TRT-(?:L21A|L53))(?:[);/ ]|$)" , model : "Y7 Prime (2018)" , } , Model { regex : "DUB-(?:LX2|AL00)(?:[);/ ]|$)" , model : "Y7 Pro (2019)" , } , Model { regex : "DUB-AL00a(?:[);/ ]|$)" , model : "Enjoy 9" , } , Model { regex : "DUB-AL20(?:[);/ ]|$)" , model : "Y7 Pro (2019)" , } , Model { regex : "PPA-LX3(?:[);/ ]|$)" , model : "Y7a" , } , Model { regex : "ART-L28(?:[);/ ]|$)" , model : "Y7p" , } , Model { regex : "AQM-LX1(?:[);/ ]|$)" , model : "Y8p" , } , Model { regex : "FLA-(LX[123]|AL20|TL10)(?:[);/ ]|$)" , model : "Y9 (2018)" , } , Model { regex : "JKM-(?:[TA]L00[ab]?|LX[123])(?:[);/ ]|$)" , model : "Y9 (2019)" , } , Model { regex : "STK-(L2[12]|LX3)(?:[);/ ]|$)" , model : "Y9 Prime (2019)" , } , Model { regex : "FRL-L2[23](?:[);/ ]|$)" , model : "Y9a" , } , Model { regex : "302HW(?:[);/ ]|$)" , model : "Stream S" , } , Model { regex : "HWT31(?:[);/ ]|$)" , model : "Qua Tab 02 10.1\"" , } , Model { regex : "HDN-[LW]09(?:[);/ ]|$)" , model : "Honor Water Play 10.1" , } , Model { regex : "BAH3-(?:AL00|[LW]09)(?:[);/ ]|$)" , model : "MatePad 10.4\"" , } , Model { regex : "BAH3-W59(?:[);/ ]|$)" , model : "MatePad 10.4\" WiFi" , } , Model { regex : "AGS3-[WL]09(?:[);/ ]|$)" , model : "MatePad T10s" , } , Model { regex : "HDL-(?:W09|AL09)(?:[);/ ]|$)" , model : "Honor Water Play 8.0" , } , Model { regex : "JDN-(?:AL00|W09)(?:[);/ ]|$)" , model : "Honor Pad 2" , } , Model { regex : "KRJ-W09(?:[);/ ]|$)" , model : "Honor Pad V6" , } , Model { regex : "MON-(W|AL)19(?:[);/ ]|$)" , model : "MatePad C5 8" , } , Model { regex : "BZA-W00(?:[);/ ]|$)" , model : "C3 9.6" , } , Model { regex : "M2-801L(?:[);/ ]|$)" , model : "MediaPad M2 8.0\"" , } , Model { regex : "MRX-(AL09|W09)(?:[);/ ]|$)" , model : "MatePad Pro" , } , Model { regex : "CMR-(?:AL[01]9|W09)(?:[);/ ]|$)" , model : "MediaPad M5 10.8" , } , Model { regex : "CMR-W19(?:[);/ ]|$)" , model : "MediaPad M5 Pro 10.8" , } , Model { regex : "SCM-AL09(?:[);/ ]|$)" , model : "MediaPad M5 Pro" , } , Model { regex : "GEM-70[1-3]L(?:[);/ ]|$)" , model : "MediaPad X2" , } , Model { regex : "(?:JDN2-(:?[WL]09|AL[50]0)|BAH2-(?:AL[01]0|L09|W[01]9))(?:[);/ ]|$)" , model : "MediaPad M5 Lite" , } , Model { regex : "SHT-(?:AL|W)09(?:[);/ ]|$)" , model : "MediaPad M5 8.4" , } , Model { regex : "VRD-(?:(AL|W)09|AL10|W10)(?:[);/ ]|$)" , model : "MediaPad M6 8.4" , } , Model { regex : "SCM-W09(?:[);/ ]|$)" , model : "MediaPad M6 10" , } , Model { regex : "BTV-W09(?:[);/ ]|$)" , model : "MediaPad M3 8" , } , Model { regex : "(BAH-W09|CPN-(?:L|W)09|CPN-AL00|701HW)(?:[);/ ]|$)" , model : "MediaPad M3 Lite" , } , Model { regex : "BAH-(?:L09|AL00)(?:[);/ ]|$)" , model : "MediaPad M3 Lite 10" , } , Model { regex : "BTV-DL09" , model : "MediaPad M3" , } , Model { regex : "(AGS2-AL00|JDN2-W09)HN(?:[);/ ]|$)" , model : "Honor Tab 5" , } , Model { regex : "AGS2-(?:[LW]09|W19|L03)(?:[);/ ]|$)" , model : "MediaPad T5 10" , } , Model { regex : "KOB2-[LW]09(?:[);/ ]|$)" , model : "MediaPad T 8.0\"" , } , Model { regex : "AGR-[LW]09(?:[);/ ]|$)" , model : "MediaPad T 10" , } , Model { regex : "AGS-(?:L0[39]|W09)(?:[);/ ]|$)" , model : "MediaPad T3 10" , } , Model { regex : "(KOB-(?:L|W)09|BZK-[LW]00)(?:[);/ ]|$)" , model : "MediaPad T3 8" , } , Model { regex : "BG2-(?:U0[13]|W09)(?:[);/ ]|$)" , model : "MediaPad T3 7" , } , Model { regex : "BGO-L03(?:[);/ ]|$)" , model : "MediaPad T2 7.0" , } , Model { regex : "(?:BGO-DL09|PLE-70[13]L)(?:[);/ ]|$)" , model : "MediaPad T2 7.0 Pro" , } , Model { regex : "JDN-L01(?:[);/ ]|$)" , model : "MediaPad T2 8.0 Pro" , } , Model { regex : "(?:FDR-(A01[LW]|A03L)|605HW)(?:[);/ ]|$)" , model : "MediaPad T2 10.0\" Pro" , } , Model { regex : "T1-(?:A21[LW]|A23L)(?:[);/ ]|$)" , model : "MediaPad T1 10" , } , Model { regex : "T1-701u(?:[);/ ]|$)" , model : "MediaPad T1 7" , } , Model { regex : "(?:T1-82(?:3L|1W)|MediaPad T1 8.0)(?:[);/ ]|$)" , model : "MediaPad T1 8" , } , Model { regex : "AGS2-AL00(?:[);/ ]|$)" , model : "Enjoy Tablet 10.1" , } , Model { regex : "BZT-(W09|AL[01]0)(?:[);/ ]|$)" , model : "MediaPad C5 10.1" , } , Model { regex : "(?:d-01J|d-02[HK])(?:[);/ ]|$)" , model : "D Tab Compact" , } , Model { regex : "(d-01K)(?:[);/ ]|$)" , model : "dtab d-01K" , } , Model { regex : "LEO-BX9(?:[);/ ]|$)" , model : "Smart Watch 2" , } , Model { regex : "(MediaPad[^/;]*) Build" , model : "$1" , } , Model { regex : "Ideos([^;/]*) Build" , model : "Ideos$1" , } , Model { regex : "(?:HUAWEI )?MT([0-9]+)" , model : "Ascend Mate $1" , } , Model { regex : "Huawei[ _\\-]?([^/;]*) Build" , model : "$1" , } , Model { regex : "(?:HW-)?Huawei(?!Browser)(?:/1\\.0/0?(?:Huawei))?[_\\- /]?([a-z0-9\\-_]+)" , model : "$1" , } , Model { regex : "Huawei; ([a-z0-9 \\-]+)" , model : "$1" , } ,]) , }) , ("Vitelcom" , Brand { regex : "Vitelcom|portalmmm/[12].0 TSM" , device : Some ("feature phone") , model : None , models : Some (& [Model { regex : "TSM-([a-z0-9]+)" , model : "$1" , } , Model { regex : "TSM([a-z0-9\\-]+)" , model : "$1" , } , Model { regex : "portalmmm/[12].0 (TSM[a-z0-9 ]+)" , model : "$1" , } ,]) , }) , ("AT&T" , Brand { regex : "(?:U304AA|QS5509A|U705AA|U318AA)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "U304AA(?:[);/ ]|$)" , model : "Radiant Core" , } , Model { regex : "U705AA(?:[);/ ]|$)" , model : "Radiant Max" , } , Model { regex : "QS5509A(?:[);/ ]|$)" , model : "Axia" , } , Model { regex : "U318AA(?:[);/ ]|$)" , model : "Calypso" , } ,]) , }) , ("FarEasTone" , Brand { regex : "Smart ?(601|550|50[59])(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("Smart $1") , models : None , }) , ("Kalley" , Brand { regex : "KALLEY|(?:ELEMENT (?:MAX|Q)|ELEMENT_PRO_2|K-BOOK(?:8MG|73G))(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "ELEMENT MAX" , model : "Element Max" , } , Model { regex : "ELEMENT Q" , model : "Element Q" , } , Model { regex : "ELEMENT_PRO_2" , model : "Element Pro 2" , } , Model { regex : "K-BOOK(8MG|73G)" , model : "K-BOOK$1" , } , Model { regex : "KALLEY,(55D1240)" , model : "$1" , } ,]) , }) , ("Newsday" , Brand { regex : "Newsday[_ ](E1|A[12])(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Gradiente" , Brand { regex : "GRADIENTE" , device : Some ("feature phone") , model : None , models : Some (& [Model { regex : "GRADIENTE-([a-z0-9]+)" , model : "$1" , } , Model { regex : "GRADIENTE ([a-z0-9\\-]+)" , model : "$1" , } ,]) , }) , ("Land Rover" , Brand { regex : "Land[ ]?Rover[d]?[ _-](?:X1[0-9]|Explore|T878|L15\\+|V18|V[168]|X)(?:[);/ ]|$)|Polar3" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Land[ ]?Rover[d]?[ _-](X1[0-9]|Explore|T878|L15\\+|V18|V[168]|X)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Polar3" , model : "Ioutdoor Polar 3" , } ,]) , }) , ("ProScan" , Brand { regex : "PLT([^;/]+) Build|PLT(?:777[45]|9774|1074)G(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "PLT([^;/]+) Build" , model : "PLT$1" , } , Model { regex : "PLT(777[45]|9774|1074)G" , model : "PLT$1G" , } ,]) , }) , ("Alfawise" , Brand { regex : "(?:Alfawise (?:A9)|(?:A95X_R1|Z28Pro))(?:[);/ ]|$)" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "(A95X_R1)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Z28Pro(?:[);/ ]|$)" , model : "Z28 Pro" , } , Model { regex : "Alfawise (A9)" , model : "$1" , } ,]) , }) , ("Easypix" , Brand { regex : "EasyPad|EasyPhone" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(EasyPhone[^/;]+) Build" , model : "$1" , } , Model { regex : "EasyPad ([^/;)]+)(?: Build|[;)])" , model : "EasyPad $1" , } ,]) , }) , ("iHunt" , Brand { regex : "iHunt|One_ Love_|TITAN_P11000_PRO|Like_(3|4U|3_Pro)|X300 Elite|S10_Tank_2019|S60_Discovery_2019|AlienXLite2020|Alien X Lite|Alien_X|S20 Ultra ApeX 2021" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "iHunt_Like" , model : "Like" , } , Model { regex : "S10_Tank_2019" , model : "S10 Tank (2019)" , } , Model { regex : "One_ Love_" , model : "One Love" , } , Model { regex : "TITAN_P11000_PRO" , model : "Titan P11000 Pro" , } , Model { regex : "Like_3_Pro" , model : "Like 3 Pro" , } , Model { regex : "Like_3" , model : "Like 3" , } , Model { regex : "Like_4U" , model : "Like 4U" , } , Model { regex : "X300 Elite" , model : "X300 Elite" , } , Model { regex : "S60_Discovery_2019" , model : "S60 Discovery (2019)" , } , Model { regex : "AlienXLite2020" , model : "Alien X Lite (2020)" , } , Model { regex : "Alien X Lite PRO" , model : "Alien X Lite Pro" , } , Model { regex : "Alien X Lite" , model : "Alien X Lite" , } , Model { regex : "Alien_X_ApeX" , model : "Alien X ApeX" , } , Model { regex : "Alien_X" , model : "Alien X" , } , Model { regex : "S20 Ultra ApeX 2021" , model : "S20 Ultra ApeX (2021)" , } ,]) , }) , ("Nuvo" , Brand { regex : "Nuvo[_ ](NS35|Blue ND40|Green[_ ]ND[_ ]45)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Nuvo[_ ](NS35)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Blue (ND40)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Green[_ ]ND[_ ]45(?:[);/ ]|$)" , model : "ND45" , } ,]) , }) , ("Kzen" , Brand { regex : "(?:Ureki_U1|Victor V1|DART KZ07)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Ureki_U1" , model : "Ureki U1" , } , Model { regex : "Victor V1" , model : "Victor V1" , } , Model { regex : "DART KZ07" , model : "Dart KZ07" , } ,]) , }) , ("Top House" , Brand { regex : "Coto[_ ]|X1013" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Coto W418" , model : "Coto W418" , } , Model { regex : "COTO_T117" , model : "Coto T117" , } , Model { regex : "X1013" , model : "X1013" , } , Model { regex : "COTO_T40017" , model : "T40017" , } ,]) , }) , ("Ugoos" , Brand { regex : "UGOOS-AM6(?:[);/ ]|$)" , device : Some ("tv") , model : Some ("AM6") , models : None , }) , ("Myros" , Brand { regex : "(E70 Ultra)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("NextTab" , Brand { regex : "TAB (A40[13]0)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Linnex" , Brand { regex : "LI(22)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("Li $1") , models : None , }) , ("O2" , Brand { regex : "Xda|(?<!FBCR/)O2[ \\-]|COCOON" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(Xda[ _][a-z0-9_]+)" , model : "$1" , } , Model { regex : "(COCOON)" , model : "$1" , } , Model { regex : "O2 ([a-z0-9 ]+)" , model : "$1" , } , Model { regex : "O2-([a-z0-9]+)" , model : "$1" , } ,]) , }) , ("Wileyfox" , Brand { regex : "(?:Wileyfox [^/]+)|Swift 2(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Wileyfox Spark \\+" , model : "Spark +" , } , Model { regex : "Wileyfox Spark X" , model : "Spark X" , } , Model { regex : "Wileyfox (Spark|Swift)" , model : "$1" , } , Model { regex : "Wileyfox ([^/)]+)(?: Build|\\))" , model : "$1" , } , Model { regex : "Swift 2 (X|Plus)(?:[);/ ]|$)" , model : "Swift 2 $1" , } , Model { regex : "Swift 2(?:[);/ ]|$)" , model : "Swift 2" , } ,]) , }) , ("Rivo" , Brand { regex : "PHANTOM (?:PZ|RX)|RHYTHM RX" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "PHANTOM PZ ?(2[05]|[13]5|4|18)(?:[);/ ]|$)" , model : "Phantom PZ$1" , } , Model { regex : "PHANTOM RX ?(298|387)(?:[);/ ]|$)" , model : "Phantom RX$1" , } , Model { regex : "RHYTHM RX ?([15-9]0|[467]5|[12]80|150|[14]00)(?:[);/ ]|$)" , model : "Rhythm RX$1" , } ,]) , }) , ("Avenzo" , Brand { regex : "Avenzo(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "MOB4 4G(?:[);/ ]|$)" , model : "Mob 4 4G" , } , Model { regex : "MOB4PRO 4G(?:[);/ ]|$)" , model : "Mob 4 Pro 4G" , } ,]) , }) , ("MDC Store" , Brand { regex : "Prime_S(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Prime_S(?:[);/ ]|$)" , model : "Prime S" , } ,]) , }) , ("PCBOX" , Brand { regex : "Art-PCB-V116|Bee-PCB-V216|Clap-PCB-I316|PCB-T(103|715)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Art-PCB-V116" , model : "Art" , } , Model { regex : "Bee-PCB-V216" , model : "Bee" , } , Model { regex : "Clap-PCB-I316" , model : "Clap" , } , Model { regex : "PCB-T103" , model : "Curi Lite" , } , Model { regex : "PCB-T715" , model : "T715" , } ,]) , }) , ("Tambo" , Brand { regex : "(TA-(?:2[_ ](?:3G|Pro)|5[05][_ ]Power|[1-4]|[1246]0))(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("öwn" , Brand { regex : "OWN[ _]|(?:S4035[ _][34]G|Smart8|SMART PLUS LTE)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "FUN ([67])" , model : "Fun $1" , } , Model { regex : "FUN 5\\(4G\\)" , model : "Fun 5 4G" , } , Model { regex : "(?:OWN[ _])?(S3000D|S3010|S3020D|S4010|S4025|S4035[ _][34]G)" , model : "$1" , } , Model { regex : "One Plus" , model : "One Plus" , } , Model { regex : "One" , model : "One" , } , Model { regex : "SMART 9" , model : "Smart 9" , } , Model { regex : "Smart8(?:[);/ ]|$)" , model : "Smart 8" , } , Model { regex : "SMART PLUS LTE(?:[);/ ]|$)" , model : "Smart Plus LTE" , } ,]) , }) , ("Navon" , Brand { regex : "Navon[_ ]|(?:Vision_Tab_(?:7|10)|Superme_Max|Raptor3G8GB|Predator (?:10|3G)|Platinum[_ ]10[_ ]3G(?:_V2)?|Supreme[_ ](?:Fine(?:[_ ]Micro)?|Chief|Pure|Pro)(?:[_ ](?:Mini|Plus))?)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "M505 LTE(?:[);/ ]|$)" , model : "Mizu M505 LTE" , } , Model { regex : "(F552|D504)(?:[);/ ]|$)" , model : "Mizu $1" , } , Model { regex : "Superme_Max(?:[);/ ]|$)" , model : "Supreme Max" , } , Model { regex : "Supreme_Fine_Mini(?:[);/ ]|$)" , model : "Supreme Fine Mini" , } , Model { regex : "Supreme_Fine_Micro(?:[);/ ]|$)" , model : "Supreme Fine Micro" , } , Model { regex : "Supreme[_ ]Fine[_ ]Plus(?:[);/ ]|$)" , model : "Supreme Fine Plus" , } , Model { regex : "Supreme_Fine(?:[);/ ]|$)" , model : "Supreme Fine" , } , Model { regex : "Supreme[_ ]Chief(?:[);/ ]|$)" , model : "Supreme Chief" , } , Model { regex : "Supreme[_ ]Pure[ _]Plus(?:[);/ ]|$)" , model : "Supreme Pure Plus" , } , Model { regex : "Supreme Pure(?:[);/ ]|$)" , model : "Supreme Pure" , } , Model { regex : "Supreme[_ ]Pro(?:[);/ ]|$)" , model : "Supreme Pro" , } , Model { regex : "Navon[_ ]Infinity(?:[);/ ]|$)" , model : "Infinity" , } , Model { regex : "(?:Navon[_ ])?Platinum[ _]10[ _]3G(_V2)?(?:[);/ ]|$)" , model : "Platinum 10.1\" 3G$1" , } , Model { regex : "(?:Navon[_ ])?Orpheus[ _]3G(?:[);/ ]|$)" , model : "Orpheus 3G" , } , Model { regex : "Predator (3G|10)(?:[);/ ]|$)" , model : "Predator $1" , } , Model { regex : "Raptor3G8GB(?:[);/ ]|$)" , model : "Raptor 3G 8GB" , } , Model { regex : "Vision_Tab_(7|10)(?:[);/ ]|$)" , model : "Vision Tab $1" , } ,]) , }) , ("TTEC" , Brand { regex : "(Magictab (?:9GX|7GE|718))(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("iBerry" , Brand { regex : "AUXUS ([^/;]+) Build" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "AUXUS (Core[^/;]+) Build" , model : "$1" , } , Model { regex : "AUXUS ([^/;]+) Build" , model : "$1" , } ,]) , }) , ("Tanix" , Brand { regex : "TX5 MAX(?:[);/ ]|$)" , device : Some ("tv") , model : Some ("TX5 Max") , models : None , }) , ("Voyo" , Brand { regex : "(?:VOYO[_ ](?:A15)|i8-Max|Q101-4G)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "i8-Max(?:[);/ ]|$)" , model : "i8 Max" , } , Model { regex : "(Q101)-4G(?:[);/ ]|$)" , model : "$1 4G" , } , Model { regex : "VOYO[_ ](A15)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("AOC" , Brand { regex : "AOC," , device : Some ("tv") , model : None , models : Some (& [Model { regex : "(LE(?:32|43)S5970(?:s)?-20|LE55U7970-30|LE43S5977-20|U60856)" , model : "$1" , } ,]) , }) , ("Torex" , Brand { regex : "TOREX[- ](?:PS12|S18|S27)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "TOREX-(PS12)" , model : "$1" , } , Model { regex : "TOREX[- ](S18|S27)" , model : "$1" , } ,]) , }) , ("Digiland" , Brand { regex : "(?:DL1008M|DL(?:1023|9002|[78]006))(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "DL1008M" , model : "DL1008M" , } , Model { regex : "DL(1023|9002|[78]006)" , model : "DL$1" , } ,]) , }) , ("Huskee" , Brand { regex : "VULKANO(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("Vulkano") , models : None , }) , ("JAY-Tech" , Brand { regex : "TPC-[A-Z0-9]+|TPCY-TX[TE][^);/ ]+" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "TPC-([A-Z0-9]+)" , model : "Tablet PC $1" , } , Model { regex : "(TPCY-TX[TE][^);/ ]+)" , model : "$1" , } ,]) , }) , ("Thomson" , Brand { regex : "(?:Primo(7|8)|QM73[45]-8G|QM734-2|QM736-8G\\(HD\\)|(?<!\\.)8950|MID1002|5014G|TEO7RK|Friendly_TH101|Delight TH201)(?:[);/ ]|$)|(?:Tlink|Every)[0-9]+|THOMSON," , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "Primo(7|8)" , model : "Primo $1" , } , Model { regex : "QM734-2" , model : "QM734-2" , } , Model { regex : "QM734-8G" , model : "QM734-8G" , } , Model { regex : "QM735-8G" , model : "QM735-8G" , } , Model { regex : "QM736-8G\\(HD\\)" , model : "QM736-8G (HD)" , } , Model { regex : "(?<!\\.)8950(?:[);/ ]|$)" , model : "3G 8950" , } , Model { regex : "TEO7RK(?:[);/ ]|$)" , model : "TEO7RK" , } , Model { regex : "5014G(?:[);/ ]|$)" , model : "5014G" , } , Model { regex : "Tlink([0-9]+)" , model : "Tlink$1" , } , Model { regex : "Every([0-9]+)" , model : "Every$1" , } , Model { regex : "Delight TH201" , model : "Delight TH201" , } , Model { regex : "Friendly_TH101" , model : "Friendly TH101" , } , Model { regex : "((?:49|55)UC6306|55UC63|32HD55|40FD54|55UD63)" , model : "$1" , } ,]) , }) , ("ZYQ" , Brand { regex : "ZYQ-Q88|(Q(?:2602|262[436]|638|2688|272[89]|3022|3623|TAB Tab4|328 m9|328|668)|J77|Q[._](?:Up|Boss P99|Dee R09|Good M9|Hi|Hot|Me|Mate R99|Next|TOP-X8|You))(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Q638" , model : "I7" , } , Model { regex : "Q2624" , model : "Cheer 3G" , } , Model { regex : "Q2602" , model : "TV Next" , } , Model { regex : "Q2728" , model : "Zone 3G" , } , Model { regex : "Q2729" , model : "Q2729" , } , Model { regex : "Q2688" , model : "Q2688" , } , Model { regex : "Q2623" , model : "Win 3G" , } , Model { regex : "Q2626" , model : "Care 3G" , } , Model { regex : "Q3623" , model : "Braw 3G" , } , Model { regex : "Q3022" , model : "Q3022" , } , Model { regex : "Q328 m9" , model : "Q328 M9" , } , Model { regex : "Q328" , model : "Speed 3G" , } , Model { regex : "Q668" , model : "TV I4" , } , Model { regex : "J77" , model : "Q.Dee" , } , Model { regex : "Q\\.Up C5" , model : "Q.Up C5" , } , Model { regex : "Q\\.Up" , model : "Q.Up" , } , Model { regex : "Q\\.Boss P99" , model : "Q.Boss P99" , } , Model { regex : "Q[._]Dee R09" , model : "Q.Dee R09" , } , Model { regex : "Q\\.Good M9" , model : "Q.Good M9" , } , Model { regex : "Q[._]Hi S1" , model : "Q.Hi S1" , } , Model { regex : "Q[._]Hi" , model : "Q.Hi" , } , Model { regex : "Q[._]Hot P7 3G" , model : "Q.Hot P7 3G" , } , Model { regex : "Q[._]Hot" , model : "Q.Hot" , } , Model { regex : "Q[._]Me Phone7 3G" , model : "Q.Me Phone 7 3G" , } , Model { regex : "Q[._]Me Plus7" , model : "Q.Me Plus 7" , } , Model { regex : "Q[._]Me" , model : "Q.Me" , } , Model { regex : "Q[._]Mate R99" , model : "Q.Mate R99" , } , Model { regex : "Q[._]Next B7" , model : "Q.Next B7" , } , Model { regex : "Q[._]Next J2" , model : "Q.Next J2" , } , Model { regex : "Q[._]TOP-X8" , model : "Q.Top X8" , } , Model { regex : "Q[._]You" , model : "Q.You" , } , Model { regex : "QTAB Tab4" , model : "QTab Tab4" , } , Model { regex : "ZYQ-Q88" , model : "Q88" , } ,]) , }) , ("Amoi" , Brand { regex : "Amoi|(?:A862W|Clever[ -]?(?:Gem S52|Gleam S45|Pad P7|Wave S50|Touch S46|JOY S40|Lite S41))(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Clever Pad P7" , model : "Clever Pad P7" , } , Model { regex : "A862W" , model : "A862W" , } , Model { regex : "CLEVER JOY S40" , model : "Clever Joy S40" , } , Model { regex : "Clever[ -]?(Gleam S45|Gem S52|Wave S50|Touch S46|Lite S41)" , model : "Clever $1" , } , Model { regex : "Amoi[\\- /]([a-z0-9]+)" , model : "$1" , } , Model { regex : "Amoisonic-([a-z0-9]+)" , model : "$1" , } ,]) , }) , ("Inkti" , Brand { regex : "intki[ _]([^/;]*)[ _]Build" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("phoneOne" , Brand { regex : "phoneOne[ \\-]?([a-z0-9]+)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("3Q" , Brand { regex : "AC0731B|AC1024C|AC7803C|BC9710AM|EL72B|LC0720C|LC0723B|LC0725B|LC0804B|LC0808B|LC0809B|LC0810C|LC0816C|LC0901D|LC1016C|MT0724B|MT0729[BD]|MT0811B|OC1020A|RC0709B|RC0710B|RC0718C|RC0719H|RC0721B|RC0722C|RC0726B|RC0734H|RC0743H|RC0817C|RC1018C|RC1019G|RC1025F|RC1301C|RC780[24]F|RC9711B|RC9712C|RC9716B|RC9717B|RC9724C|RC9726C|RC9727F|RC9730C|RC9731C|TS0807B|TS1013B|VM0711A|VM1017A|RC0813C|QS9719D|QS9718C|QS9715F|QS1023H|QS0815C|QS0730C|QS0728C|QS0717D|QS0716D|QS0715C|MT7801C|TS9708B|AC0732C|MT0739D|MT0812E|(?:3Q_)?ER71B" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "MT0724B|LC0901D|LC0816C|LC0810C|LC0809B|LC0808B|LC0804B|LC0725B|LC0723B" , model : "Qoo! P-Pad" , } , Model { regex : "VM1017A|TS1013B|TS0807B|RC9731C|RC9730C|RC9727F|RC9726C|RC9724C|RC9717B|RC9716B|RC9712C|RC9711B|RC1301C|RC1025F|RC1019G|RC1018C|RC0817C|RC0813C|RC0743H|RC0734H|RC0726B|RC0722C|RC0721B|RC0719H|RC0718C|RC0710B|RC0709B|QS9715F|QS1023H|QS0815C|QS0730C|QS0728C|QS0717D|QS0716D|QS0715C|MT0811B|MT0739D|MT0729[BD]|LC1016C|LC0720C|BC9710AM|AC1024C|AC0731B" , model : "Qoo! Q-Pad" , } , Model { regex : "MT7801C|QS9718C|QS9719D|VM0711A|OC1020A" , model : "Qoo! Surf" , } , Model { regex : "TS9708B" , model : "Surf TS1009B" , } , Model { regex : "AC7803C|AC0732C" , model : "Qoo! Lite" , } , Model { regex : "MT0812E|RC7802F" , model : "Qoo! Meta" , } , Model { regex : "EL72B|(?:3Q_)?ER71B" , model : "Qoo! Q-Book" , } , Model { regex : "(RC7804F)" , model : "Qoo! Glaze" , } ,]) , }) , ("Enot" , Brand { regex : "Enot[ _-](E102|J101)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("ComTrade Tesla" , Brand { regex : "Tesla|Impulse 7.85 3G|Impulse 10.1 OCTA|Smartphone_6.1|SP(?:6.2|6.2_Lite)|TTL(?:713G|8)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "TeslaEvo5.0" , model : "Evo 5.0" , } , Model { regex : "(Gravity 9.7 SHD)" , model : "$1" , } , Model { regex : "(Impulse 7.85 3G)" , model : "$1" , } , Model { regex : "Impulse 10.1 OCTA" , model : "Impulse 10.1\" OCTA" , } , Model { regex : "Tesla_SP([^/;]+)L Build" , model : "Smartphone $1 Lite" , } , Model { regex : "Smartphone_6.1" , model : "Smartphone 6.1" , } , Model { regex : "SP6.2_Lite" , model : "Smartphone 6.2 Lite" , } , Model { regex : "Tesla_SP([^/;]+) Build" , model : "Smartphone $1" , } , Model { regex : "SP([^/;]+) Build" , model : "Smartphone $1" , } , Model { regex : "Smartphone ([36])" , model : "Smartphone $1" , } , Model { regex : "Tesla_Tablet_785" , model : "7.85\"" , } , Model { regex : "TTH7" , model : "H7" , } , Model { regex : "TTL7 Build" , model : "L7" , } , Model { regex : "Tesla_Tablet_L7_3G" , model : "L7 3G" , } , Model { regex : "(L7.1)" , model : "$1" , } , Model { regex : "TTL713G" , model : "L7.1 3G" , } , Model { regex : "(L7 Quad) Build" , model : "$1" , } , Model { regex : "(L7 Quad Lite)" , model : "$1" , } , Model { regex : "TTL8 Build" , model : "L8" , } , Model { regex : "(L8.1)" , model : "$1" , } , Model { regex : "TESLA_TABLET_M7" , model : "M7" , } , Model { regex : "Tesla_Tablet_M8" , model : "M8" , } ,]) , }) , ("P-UP" , Brand { regex : "MD-04P(?:[);/ ]|$)" , device : Some ("phablet") , model : Some ("Mode 1 RR") , models : None , }) , ("Xiaomi" , Brand { regex : "Xiaomi(?!/(?:Miui|Mint[ ])Browser)|Mi9 Pro 5G|(?:MI [a-z0-9]+|Mi-4c|MI-One[ _]?[a-z0-9]+|MIX(?: 2S?)?)(?:[);/ ]|$)|HM (?:[^/;]+) (?:Build|MIUI)|(?:2014501|2014011|201481[12378]|201302[23]|2013061) Build|Redmi|POCOPHONE|(?:SHARK )?(KLE|MBU)-[AH]0|SKR-[AH]0|SKW-[AH]0|POCO F1|DLT-[AH]0|MIBOX[234]([_ ]PRO)?|MiTV4[CSX]?|MiTV-(MSSP[01]|AXSO0)|AWM-A0|MI CC 9 Meitu Edition|MiBOX1S|MiTV4A|M2006J10C|M2006C3(?:L[IGC]|LVG|MN?G|MT)|M2007J1(?:7[CGI]|SC)|M2002J9[EG]|HM2014819|WT88047|M2004J(?:7[AB]|19)C|M2012K11C|M2011K2[CG]|M2012K11AC|M2006C3[ML]II|M2003J15SC|M2007J3S[ICYGP]|M2007J22[CG]|M2101K6[GIR]|M2103K19G|M2101K(?:[79]AG|7AI)|M2010J19S[CGYI]|M2102(?:K1G|J2SC)|HM NOTE 1(?:LTE|W)|MI[_ ]PLAY|XIG01|Qin 1s\\+|MI_(NOTE_Pro|5X|4i|(?:A2|8)_Lite)|A001XM" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "SKR-[AH]0" , model : "Black Shark" , } , Model { regex : "AWM-A0" , model : "Black Shark Helo" , } , Model { regex : "SKW-[AH]0" , model : "Black Shark 2" , } , Model { regex : "DLT-[AH]0" , model : "Black Shark 2 Pro" , } , Model { regex : "(?:SHARK )?KLE-A0" , model : "Black Shark 3" , } , Model { regex : "(?:SHARK )?KLE-H0" , model : "Black Shark 3 5G" , } , Model { regex : "(?:SHARK )?MBU-H0" , model : "Black Shark 3 Pro 5G" , } , Model { regex : "(?:SHARK )?MBU-A0" , model : "Black Shark 3 Pro" , } , Model { regex : "Xiaomi_2014501|2014501 Build" , model : "Hongmi 4G" , } , Model { regex : "Xiaomi_2014011|2014011 Build" , model : "Hongmi 1S" , } , Model { regex : "Xiaomi_201302[23]|201302[23] Build" , model : "Hongmi" , } , Model { regex : "Xiaomi[_-]2014818|2014818 Build" , model : "Hongmi 2 3G" , } , Model { regex : "Xiaomi_2014817|2014817 Build" , model : "Hongmi 2" , } , Model { regex : "Xiaomi[_-]201481[123]|201481[123] Build" , model : "Hongmi 2 4G" , } , Model { regex : "MI[_ ]PLAY(?:[);/ ]|$)" , model : "MI Play" , } , Model { regex : "Mi 9 SE(?:[);/ ]|$)" , model : "MI 9 SE" , } , Model { regex : "MI CC 9 Meitu Edition(?:[);/ ]|$)" , model : "MI CC 9" , } , Model { regex : "Xiaomi_M2001J2E_TD-LTE(?:[);/ ]|$)" , model : "MI 10" , } , Model { regex : "M2011K2[CG](?:[);/ ]|$)" , model : "MI 11" , } , Model { regex : "M2007J3S[CYP](?:[);/ ]|$)" , model : "MI 10T 5G" , } , Model { regex : "M2007J3S[GI](?:[);/ ]|$)" , model : "MI 10T Pro 5G" , } , Model { regex : "M2007J17G(?:[);/ ]|$)" , model : "MI 10T Lite 5G" , } , Model { regex : "M2007J1SC(?:[);/ ]|$)" , model : "MI 10 Ultra 5G" , } , Model { regex : "M2102J2SC(?:[);/ ]|$)" , model : "MI 10S" , } , Model { regex : "(?:M2002J9[EG]|XIG01)(?:[);/ ]|$)" , model : "MI 10 Lite 5G" , } , Model { regex : "M2007J17I(?:[);/ ]|$)" , model : "MI 10i" , } , Model { regex : "M2101K9AG(?:[);/ ]|$)" , model : "MI 11 Lite" , } , Model { regex : "M2102K1G(?:[);/ ]|$)" , model : "MI 11 Ultra" , } , Model { regex : "MI[ _]8[ _]Lite(?:[);/ ]|$)" , model : "MI 8 Lite" , } , Model { regex : "Mi 9T Pro(?:[);/ ]|$)" , model : "MI 9T Pro" , } , Model { regex : "Mi9 Pro 5G(?:[);/ ]|$)" , model : "MI 9 Pro 5G" , } , Model { regex : "MI ([89]) Lite(?:[);/ ]|$)" , model : "MI $1 Lite" , } , Model { regex : "MI 5s Plus(?:[);/ ]|$)" , model : "MI 5s Plus" , } , Model { regex : "Xiaomi_MDT2" , model : "MI 5X" , } , Model { regex : "Xiaomi_2013061|2013061 Build" , model : "MI 3" , } , Model { regex : "Mi-4c(?:[);/ ]|$)" , model : "MI 4C" , } , Model { regex : "MI 4W(?:[);/ ]|$)" , model : "MI 4W" , } , Model { regex : "Mi_4i(?:[);/ ]|$)" , model : "MI 4i" , } , Model { regex : "MI MAX 3(?:[);/ ]|$)" , model : "MI MAX 3" , } , Model { regex : "MI MAX 2(?:[);/ ]|$)" , model : "MI MAX 2" , } , Model { regex : "Mi[ _]A2[ _]Lite(?:[);/ ]|$)" , model : "MI A2 Lite" , } , Model { regex : "MIX 3(?:[);/ ]|$)" , model : "MI MIX 3" , } , Model { regex : "MIX 2S(?:[);/ ]|$)" , model : "MI MIX 2S" , } , Model { regex : "MIX 2(?:[);/ ]|$)" , model : "MI MIX 2" , } , Model { regex : "MIX(?:[);/ ]|$)" , model : "MI MIX" , } , Model { regex : "POCOPHONE[ _]F1|POCO F1" , model : "Pocophone F1" , } , Model { regex : "Redmi 5 Plus" , model : "Redmi 5 Plus" , } , Model { regex : "WT88047(?:[);/ ]|$)" , model : "Redmi 2" , } , Model { regex : "HM2014819(?:[);/ ]|$)" , model : "Redmi 2 Pro" , } , Model { regex : "HM 2A(?:[);/ ]|$)" , model : "Redmi 2A" , } , Model { regex : "HM 1S[CW]?(?:[);/ ]|$)" , model : "Redmi 1S" , } , Model { regex : "HM 1(?:[);/ ]|$)" , model : "Redmi 1" , } , Model { regex : "M2004J7AC(?:[);/ ]|$)" , model : "Redmi 10X" , } , Model { regex : "(?:M2004J19C|M2006C3MII)(?:[);/ ]|$)" , model : "Redmi 9" , } , Model { regex : "M2010J19SI(?:[);/ ]|$)" , model : "Redmi 9 Power" , } , Model { regex : "M2006C3L[GCI](?:[);/ ]|$)" , model : "Redmi 9A" , } , Model { regex : "M2006C3LII(?:[);/ ]|$)" , model : "Redmi 9i" , } , Model { regex : "M2006C3M[GT](?:[);/ ]|$)" , model : "Redmi 9C" , } , Model { regex : "M2006C3LVG(?:[);/ ]|$)" , model : "Redmi 9AT" , } , Model { regex : "M2010J19S[GY](?:[);/ ]|$)" , model : "Redmi 9T" , } , Model { regex : "M2006C3MNG(?:[);/ ]|$)" , model : "Redmi 9C NFC" , } , Model { regex : "M2004J7BC(?:[);/ ]|$)" , model : "Redmi 10X Pro" , } , Model { regex : "Redmi K20 Pro(?:[);/ ]|$)" , model : "Redmi K20 Pro" , } , Model { regex : "Redmi K30 5G(?:[);/ ]|$)" , model : "Redmi K30 5G" , } , Model { regex : "M2012K11AC(?:[);/ ]|$)" , model : "Redmi K40" , } , Model { regex : "M2012K11C(?:[);/ ]|$)" , model : "Redmi K40 Pro" , } , Model { regex : "M2006J10C(?:[);/ ]|$)" , model : "Redmi K30 Ultra" , } , Model { regex : "Redmi Y1 Lite(?:[);/ ]|$)" , model : "Redmi Y1 Lite" , } , Model { regex : "MI PAD 4 PLUS(?:[);/ ]|$)" , model : "Mi Pad 4 Plus" , } , Model { regex : "MI PAD 4(?:[);/ ]|$)" , model : "Mi Pad 4" , } , Model { regex : "MI PAD 3(?:[);/ ]|$)" , model : "Mi Pad 3" , } , Model { regex : "MI PAD 2(?:[);/ ]|$)" , model : "Mi Pad 2" , } , Model { regex : "MI PAD(?:[);/ ]|$)" , model : "Mi Pad" , } , Model { regex : "MIBOX3[ _]Pro(?:[);/ ]|$)" , model : "Mi Box 3 Pro" , } , Model { regex : "MIBOX([234])(?:[);/ ]|$)" , model : "Mi Box $1" , } , Model { regex : "MiBOX1S(?:[);/ ]|$)" , model : "Mi Box 1S" , } , Model { regex : "MiTV-MSSP1(?:[);/ ]|$)" , model : "MiTV 4S" , } , Model { regex : "(?:MiTV-AXSO0|MiTV4(?:A|-ANSM0)|MiTV-MSSP0)(?:[);/ ]|$)" , model : "MiTV 4A" , } , Model { regex : "(MiTV)(4[CSX]|4)(?:[);/ ]|$)" , model : "$1 $2" , } , Model { regex : "HM NOTE 1W(?:[);/ ]|$)" , model : "Redmi Note" , } , Model { regex : "HM NOTE 1TD (?:Build|MIUI)" , model : "Hongmi Note 1TD" , } , Model { regex : "HM NOTE 1(?:LTE|S)(?:W|GLOBAL|TD)? (?:Build|MIUI)|HM NOTE 1LTE" , model : "Redmi Note 4G" , } , Model { regex : "Redmi Note 5A Prime" , model : "Redmi Note 5A Prime" , } , Model { regex : "M2010J19SC(?:[);/ ]|$)" , model : "Redmi Note 9" , } , Model { regex : "M2003J15SC(?:[);/ ]|$)" , model : "Redmi Note 10X" , } , Model { regex : "(?:M2007J22G|A001XM)(?:[);/ ]|$)" , model : "Redmi Note 9T 5G" , } , Model { regex : "M2007J22C(?:[);/ ]|$)" , model : "Redmi Note 9 5G" , } , Model { regex : "M2007J17C(?:[);/ ]|$)" , model : "Redmi Note 9 Pro 5G" , } , Model { regex : "M2101K7A[GI]" , model : "Redmi Note 10" , } , Model { regex : "M2103K19G" , model : "Redmi Note 10 5G" , } , Model { regex : "M2101K6[GIR]" , model : "Redmi Note 10 Pro" , } , Model { regex : "Redmi Note ([5-9]) Pro(?:[);/ ]|$)" , model : "Redmi Note $1 Pro" , } , Model { regex : "Redmi[ _]Note[ _]([^;/) ]+)?" , model : "Redmi Note $1" , } , Model { regex : "Redmi[ _]([^;/) ]+)?" , model : "Redmi $1" , } , Model { regex : "MI_NOTE_Pro" , model : "MI Note Pro" , } , Model { regex : "Mi Note 10 Pro" , model : "Mi Note 10 Pro" , } , Model { regex : "MI[ _]Note[ _]([^;/) ]+)?" , model : "MI Note $1" , } , Model { regex : "Qin 1s\\+" , model : "Qin 1s+" , } , Model { regex : "(MI(?:-One)?[ _](?:[^;/]*))Build" , model : "$1" , } , Model { regex : "(MI[ _][a-z0-9]+|MI-One[ _]?[a-z0-9]+)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "HM Note ([^/;]+) (?:Build|MIUI)" , model : "Note" , } , Model { regex : "HM ([^/;]+) (?:Build|MIUI)" , model : "HM $1" , } , Model { regex : "Xiaomi[ _-]([^/;]+)(?: Build|$)" , model : "$1" , } ,]) , }) , ("Rikomagic" , Brand { regex : "MK(80[28][^/;]*) Build" , device : Some ("tv") , model : Some ("MK$1") , models : None , }) , ("Ezio" , Brand { regex : "EZIO-([a-z0-9]+)" , device : Some ("feature phone") , model : Some ("$1") , models : None , }) , ("Sagem" , Brand { regex : "SAGEM|portalmmm/2.0 (?:SG|my)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "SAGEM-(my[a-z0-9\\-]+)" , model : "$1" , } , Model { regex : "SAGEM ([a-z0-9]+)" , model : "$1" , } , Model { regex : "SAGEM-([a-z0-9\\-]+)" , model : "$1" , } , Model { regex : "portalmmm/2.0 ((?:SG|my)[a-z0-9]+)" , model : "$1" , } ,]) , }) , ("Ghia" , Brand { regex : "GHIA|QS702|VECTOR10\\.1" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "QS702" , model : "QS702" , } , Model { regex : "GHIA_ZEUS_3G" , model : "Zeus 3G" , } , Model { regex : "GHIA_AXIS7" , model : "Axis 7" , } , Model { regex : "VECTOR10\\.1" , model : "Vector 10.1\"" , } ,]) , }) , ("Kuliao" , Brand { regex : "KULIAO (K10)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Hoffmann" , Brand { regex : "(HOFFMANN|Neo[_ ]A[1379]00)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Neo[_ ](A[1379]00)" , model : "Neo $1" , } , Model { regex : "HOFFMANN[ _]X[-_ ](Prime|Twist|Max)" , model : "X $1" , } ,]) , }) , ("A1" , Brand { regex : "A1 (?:Alpha|Alpha 20\\+)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "A1 Alpha 20\\+" , model : "Alpha 20 Plus" , } , Model { regex : "A1 Alpha" , model : "Alpha" , } ,]) , }) , ("UZ Mobile" , Brand { regex : "Uzbekistan(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("Uzbekistan") , models : None , }) , ("Le Pan" , Brand { regex : "Le ?Pan|TC970 ([^;/]+)Build" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "TC802A" , model : "Le Pan Mini" , } , Model { regex : "TC970 ([^;/]+)Build" , model : "TC970 $1" , } , Model { regex : "Le ?Pan ?(II|S)(?:[);/ ]|$)" , model : "Le Pan $1" , } , Model { regex : "Le ?Pan ?([^;/]+) Build" , model : "$1" , } ,]) , }) , ("Doro" , Brand { regex : "Doro" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Doro[ _-]?([^;/)]+) Build" , model : "$1" , } , Model { regex : "Doro[ _-]([0-9a-z]+)" , model : "$1" , } ,]) , }) , ("Timovi" , Brand { regex : "Tmovi[ _]|(?:Infinit_Lite_2|Vision_PRO|VISION ULTRA|Epix)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Tmovi[ _]Prime" , model : "Prime" , } , Model { regex : "TMOVI_YEAH_BEAT" , model : "Yeah Beat" , } , Model { regex : "YeahLIVE" , model : "Yeah LIVE" , } , Model { regex : "Infinit Lite" , model : "Infinit Lite" , } , Model { regex : "Infinit_Lite_2" , model : "Infinit Lite 2" , } , Model { regex : "Vision_PRO" , model : "Vision Pro" , } , Model { regex : "VISION ULTRA" , model : "Vision Ultra" , } , Model { regex : "Epix" , model : "Epix" , } ,]) , }) , ("Selfix" , Brand { regex : "SELFIX" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "SELFIX_SLASH6" , model : "Slash 6" , } , Model { regex : "VOYAGER-V45" , model : "Voyager V45" , } ,]) , }) , ("Echo Mobiles" , Brand { regex : "ECHO[ _](HOLI|HORIZON|MAX|MOSS|NOTE|POWER|SMART|DUNE|JAVA|FUSION)|HORIZON_M|Stellar 3G|FEELING" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "ECHO_HORIZON_LITE" , model : "HORIZON Lite" , } , Model { regex : "(HORIZON_M|FEELING)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "STELLAR 3G" , model : "STELLAR 3G" , } , Model { regex : "ECHO_SMART_4G" , model : "SMART 4G" , } , Model { regex : "ECHO[ _](HOLI|MAX|MOSS|NOTE|POWER|SMART|DUNE|JAVA|FUSION)" , model : "$1" , } ,]) , }) , ("Newgen" , Brand { regex : "NEWGEN\\-([a-z0-9]+)" , device : Some ("feature phone") , model : Some ("$1") , models : None , }) , ("S-TELL" , Brand { regex : "S-TELL" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(?:S-TELL[ _])?M4(61|77|80)" , model : "M4$1" , } ,]) , }) , ("Okapia" , Brand { regex : "Signature (?:L|Pro|Touch)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Signature (L|Pro|Touch)" , model : "Signature $1" , } ,]) , }) , ("Sansui" , Brand { regex : "Sansui[_ ]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Sansui[_ ](Switch|Play|Fun|SA4[01]|U4[56]|U3[02]|Nova)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("BBK" , Brand { regex : "([65]5|4[03]|3[29]|28)LEX[-_](81(?:27|39|45|58|61)|71(?:[23]7|4[345]|5[45]|6[368]|[57]8))[_/]([FU]?TS2C)(?:[);/ ]|$)" , device : Some ("tv") , model : Some ("$1LEX-$2/$3") , models : None , }) , ("PPTV" , Brand { regex : "(KING 7S?)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Nabi" , Brand { regex : "(?:DMTAB-(?:IN08A|NV08B|NV2[04]A)|NBTY07SMKG|NBFP07PMKG|SNB02-NV7A|NABI2-NV7A)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "DMTAB-(?:IN08A|NV08B)" , model : "Dream Tab HD 8.0\"" , } , Model { regex : "DMTAB-NV(2[04])A" , model : "Big Tab HD $1.0\"" , } , Model { regex : "NBTY07SMKG" , model : "Barbie Tab 7.0\"" , } , Model { regex : "NBFP07PMKG" , model : "Fisher Price Learning Tab 7.0\"" , } , Model { regex : "SNB02-NV7A" , model : "2S Tab" , } , Model { regex : "NABI2-NV7A" , model : "2 Tab" , } ,]) , }) , ("Eks Mobility" , Brand { regex : "S5LS|X4UPlus" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "S5LS" , model : "S5LS" , } , Model { regex : "X4UPlus" , model : "X4U Plus" , } ,]) , }) , ("Philco" , Brand { regex : "PHILCO |(PCS01|PH350B|PTB7R|PTB7PAP_PTB7PAB_PTB7PAR)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(PCS01|PH350B)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "(PTB7R)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "PHILCO Android TV(?:[);/ ]|$)" , model : "" , } , Model { regex : "PTB7PAP_PTB7PAB_PTB7PAR(?:[);/ ]|$)" , model : "PTB7PA" , } ,]) , }) , ("IQM" , Brand { regex : "IQM (?:picasso|vivaldi|newton)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "IQM picasso(?:[);/ ]|$)" , model : "Picasso" , } , Model { regex : "IQM vivaldi(?:[);/ ]|$)" , model : "Vivaldi" , } , Model { regex : "IQM newton(?:[);/ ]|$)" , model : "Newton" , } ,]) , }) , ("Fondi" , Brand { regex : "Fondi[- _]([^;/)]+)|(T702|Q008B|Q010B|Q718B|Q902|T602B|T707G|T708B|T725B|T725B1|T907B)(?:\\)| Build)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(T702|T602B)" , model : "$1" , } , Model { regex : "(Q008B|Q010B|Q718B|Q902|T707G|T708B|T725B|T725B1|T907B)" , model : "$1" , } , Model { regex : "Fondi[- _]([^;/)]+)" , model : "$1" , } ,]) , }) , ("Impression" , Brand { regex : "(?:Impression[ _\\-]?([^/;]+)|A502|I10\\-LE|ImPad[ _]?(.*)|ImSmart[ _]?(.*))(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "(A502)" , model : "$1" , } , Model { regex : "ImSmart[ _]?([^/;)]+)(?: Build|\\))" , model : "ImSmart $1" , } , Model { regex : "ImPad[ _]?([^/;)]+)(?: Build|\\))" , model : "ImPad $1" , } , Model { regex : "(I10\\-LE)" , model : "$1" , } , Model { regex : "Impression[ _\\-]?([^/;)]+)(?: Build|\\))" , model : "$1" , } ,]) , }) , ("Ruio" , Brand { regex : "Ruio[ _]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Ruio[ _](S4)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Ruio[ _](S5)Plus(?:[);/ ]|$)" , model : "$1 Plus" , } ,]) , }) , ("BenQ" , Brand { regex : "BENQ(?:[ \\-])?([a-z0-9]+)|F52_09(?:[);/ ]|$)" , device : Some ("feature phone") , model : None , models : Some (& [Model { regex : "F52_09(?:[);/ ]|$)" , model : "F52" , } , Model { regex : "BENQ(?:[ \\-])?([a-z0-9]+)" , model : "$1" , } ,]) , }) , ("Qumo" , Brand { regex : "QUMO[ _]?|(?:Quest[ _]?(?:408|410|45[56]|50[679])|Vega[ _]?78[23]|Sirius[ _]?(?:1001|890))(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "(?:QUMO[ _]?)?Vega[ _]?(78[23]|8002)(?:[);/ ]|$)" , model : "Vega $1" , } , Model { regex : "Yooda(?:[);/ ]|$)" , model : "Yooda" , } , Model { regex : "Sirius[ _]?(1001|890)(?:[);/ ]|$)" , model : "Sirius $1" , } , Model { regex : "(?:QUMO)?(Sirius 101-4G 8GB Black|Altair 701 8GB Black|Altair 71 4GB Black|Altair 700[24]|Altair 706)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "(?:QUMO[ _])?Quest[ _]?(35[34]|40[268]|410|45[2568]|47[46]|50[679]|5[17]0|600)(?:[);/ ]|$)" , model : "Quest $1" , } ,]) , }) , ("Tunisie Telecom" , Brand { regex : "StarTrail TT(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("StarTrail by TT") , models : None , }) , ("Goly" , Brand { regex : "Goly[ _-]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Goly[ _-]([^;/]+) Build" , model : "$1" , } , Model { regex : "Goly[ _-]([^;/)]+)(?:[;/)]|$)" , model : "$1" , } ,]) , }) , ("Telego" , Brand { regex : "TELEGO" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "TELEGO-W503" , model : "W503" , } , Model { regex : "Telego_JOY2" , model : "Joy 2" , } , Model { regex : "Telego[ _]Mate" , model : "Mate" , } ,]) , }) , ("Extrem" , Brand { regex : "Rock X9+|ROCK_X11" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Rock X9+" , model : "Rock X9+" , } , Model { regex : "ROCK_X11" , model : "Rock X11" , } ,]) , }) , ("Uhans" , Brand { regex : "(A101S)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Kodak" , Brand { regex : "KODAK|(?:IM5|KD50|Ektra|Smartway_T1)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "IM5" , model : "IM5" , } , Model { regex : "KD50" , model : "Seren KD50" , } , Model { regex : "Ektra(?:[);/ ]|$)" , model : "Ektra" , } , Model { regex : "(?:KODAK[_ ])?SMARTWAY[_ ]([MTX]1|T3)" , model : "Smartway $1" , } , Model { regex : "Tablet (7|10)" , model : "Tablet $1" , } ,]) , }) , ("Yota" , Brand { regex : "(YD20[16]|YOTA 3[+])(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "YD20[16](?:[);/ ]|$)" , model : "Phone 2" , } , Model { regex : "YOTA 3[+](?:[);/ ]|$)" , model : "Phone 3 Plus" , } ,]) , }) , ("eTouch" , Brand { regex : "eTouch ?([a-z0-9]+)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Digma" , Brand { regex : "Digma[_ ]([^;/]+) Build|HIT HT707[10]MG|CITI (?:7 E401 4G|8 E400 4G|ATL 4G|Kids|Octa [178]0|1902 3G|10 E402|Z530 3G)|(CITI[_ ](?:[A-Z0-9]+)[_ ][34]G)[ _][TC][ST](606[32]ML|111[46]ML|11[459]4MG|1117PG|1207MG|1210MG|1195MG|1196ML|3001ML|4024PG|5009PL|5021ML|5026PL|500[67]PG|7052PG|706[56]MG|709[68]PL|7097MG|720[48]MG|7140ML|7141MG|7113PL|7193MG|820[69]MG|7153MG|8139ML|8143MG|8152ML|1050PL|8205PG|7203MG|106[24]ML|1115MG)|HIT 4G|HT7074ML|IDX5|(iDx10|iDx7)|MVM900H(?:WZ|C)|MVM908HCZ|(iDxD8 3G|iDxD10 3G|iDrQ10 3G|iDxD[45]|iDxQ5|iD[nx]D7(?:[_ ]3G)?)|PS604M|PT452E|LINX B510 3G LT5037MG|LINX A452 3G LT4030PG|LINX A453 3G LT4038PG|LINX A420 3G LS4019PG|LINX A450 3G LT4028PG|Linx A400 3G LT4001PG|Linx C500 3G LT5001PG|Linx PS474S|LS504[01]PL|LT40(47|54)MG|PS1043MG|LS405[01]MG|LS5053ML|LT5048MG|HT7071MG|LT5052ML|HT5035PG|HT4039PG|LT4049PG|NS6902QL|NS9797MG|TS7854M|TS1012E 3G|TT1004PG|TT702[045]MG|TT1002MG|TT7026MW|VRL42|((?:Optima|Platina|Plane)[ _](?:[EM])?(?:[0-9\\.ST]+|Prime)(?:[ _][43]G)?)|(VOX[ _](?:[0-9\\.A-Z]+)[_ ][43]G)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "HIT(?: 3G)? HT707[10]MG" , model : "HIT 3G" , } , Model { regex : "iDx5" , model : "iDx5" , } , Model { regex : "HT5035PG" , model : "HIT Q500 3G" , } , Model { regex : "HT4039PG" , model : "HIT Q401 3G" , } , Model { regex : "(VOX[ _](?:[0-9\\.A-Z]+)[_ ][43]G)" , model : "$1" , } , Model { regex : "PS604M" , model : "Linx 6.0" , } , Model { regex : "LT4049PG" , model : "Linx Atom 3G" , } , Model { regex : "LT5048MG" , model : "Linx Joy 3G" , } , Model { regex : "LT5052ML" , model : "Linx Base 4G" , } , Model { regex : "LT4047MG" , model : "Linx Alfa 3G" , } , Model { regex : "LS4050MG" , model : "Linx X1 3G" , } , Model { regex : "LS4051MG" , model : "Linx X1 Pro 3G" , } , Model { regex : "LT4054MG" , model : "Linx Argo 3G" , } , Model { regex : "LS5041PL" , model : "Linx Trix 4G" , } , Model { regex : "LS5040PL" , model : "Linx Rage 4G" , } , Model { regex : "LS5053ML" , model : "Linx Pay 4G" , } , Model { regex : "Linx ([A-Z][0-9]{3}) 3G (?:LT4028PG|LS4019PG|LT4001PG|LT5001PG|LT4038PG|LT5037MG|LT4030PG)" , model : "Linx $1 3G" , } , Model { regex : "(Linx PS474S)" , model : "$1" , } , Model { regex : "PT452E" , model : "Linx 4.5" , } , Model { regex : "CITI ATL 4G CS5029ML" , model : "CITI ATL 4G" , } , Model { regex : "(CITI Z530 3G)" , model : "$1" , } , Model { regex : "(CITI [A-Z0-9]+ [34]G) C[ST](?:606[32]ML|4024PG|5009PL|5021ML|5026PL)" , model : "$1" , } , Model { regex : "TS7854M" , model : "Plane 8.1\" 3G" , } , Model { regex : "PS1043MG" , model : "Plane 10.3\" 3G" , } , Model { regex : "TS1012E 3G" , model : "Plane 10.1\" 3G" , } , Model { regex : "MVM900H(?:WZ|C)" , model : "iDx8" , } , Model { regex : "MVM908HCZ" , model : "iDx9" , } , Model { regex : "(iD(?:xD10|rQ10|xD7)[_ ]3G)" , model : "$1" , } , Model { regex : "(iDx10|iDx7)" , model : "$1" , } , Model { regex : "(iDxD[45]|iDxQ5)" , model : "$1" , } , Model { regex : "HIT 4G HT7074ML" , model : "HIT 4G" , } , Model { regex : "CITI[_ ](1902 3G|Kids|8527_4G|Octa [178]0|10 E402 4G|8 E400 4G|7 E401 4G)" , model : "CITI $1" , } , Model { regex : "(CITI[ _](?:[A-Z0-9]+)[ _][34]G)[ _][TC][ST](?:106[24]ML|111[46]ML|1115MG|1117PG|1207MG|1210MG|3001ML|500[67]PG|7052PG|706[567]MG|7097MG|720[48]MG|820[69]MG|11[459]4MG|1195MG|1196ML|3001ML|8152ML|1050PL|709[68]PL|7113PL|7193MG|7216MG|8205PG|7203MG|8143MG|7153MG|7141MG|7140ML)" , model : "$1" , } , Model { regex : "iDxD8 3G" , model : "D-Plane2 8" , } , Model { regex : "(iDnD7)" , model : "$1" , } , Model { regex : "NS6902QL" , model : "Platina 7.2 4G" , } , Model { regex : "NS9797MG" , model : "Platina 7.2 3G" , } , Model { regex : "TT1004PG" , model : "Optima 10.4\" 3G" , } , Model { regex : "TT1002MG" , model : "Optima D 10.4\" 3G" , } , Model { regex : "TT7025MG" , model : "Optima 7.5\" 3G" , } , Model { regex : "TT7026MW" , model : "Optima 7.6\" 3G" , } , Model { regex : "TT7020MG" , model : "Optima 7.3\" 3G" , } , Model { regex : "TT7024MG" , model : "Optima 7.4\" 3G" , } , Model { regex : "((?:Optima|Platina|Plane)[ _](?:[EM])?(?:[0-9\\.STNM]+|Prime)(?:[ _][43]G)?)" , model : "$1" , } , Model { regex : "Digma[_ ]([^;/]+) Build" , model : "$1" , } , Model { regex : "VRL42(?:[);/ ]|$)" , model : "VR L42" , } ,]) , }) , ("NYX Mobile" , Brand { regex : "NYX[ _]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "NYX_A1" , model : "A1" , } , Model { regex : "NYX_Blink" , model : "Blink" , } , Model { regex : "NYX_EGO" , model : "Ego" , } , Model { regex : "NYX_FENIX" , model : "Fenix" , } , Model { regex : "NYX_FLY_II" , model : "Fly II" , } , Model { regex : "NYX_FLY_MINI" , model : "Fly Mini" , } , Model { regex : "NYX_FLY" , model : "Fly" , } , Model { regex : "NYX_HIT" , model : "Hit" , } , Model { regex : "NYX_JAK" , model : "Jak" , } , Model { regex : "NYX_JOIN" , model : "Join" , } , Model { regex : "NYX_NOBA_II" , model : "Noba II" , } , Model { regex : "NYX_NOBA" , model : "Noba" , } , Model { regex : "NYX_ORBIS" , model : "Orbis" , } , Model { regex : "NYX[ _]REX" , model : "Rex" , } , Model { regex : "NYX_SHADE" , model : "Shade" , } , Model { regex : "NYX_SKY" , model : "Sky" , } , Model { regex : "NYX_SPARK" , model : "Spark" , } , Model { regex : "NYX_VOX" , model : "Vox" , } , Model { regex : "NYX_ZEUZ_HD" , model : "Zeus HD" , } ,]) , }) , ("Casio" , Brand { regex : "(C811|C7[57]1)(?: 4G)?(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "C751(?:[);/ ]|$)" , model : "G'zOne Ravine" , } , Model { regex : "C771(?:[);/ ]|$)" , model : "G'zOne Commando" , } , Model { regex : "C811 4G(?:[);/ ]|$)" , model : "G'zOne Commando 4G LTE" , } ,]) , }) , ("Crescent" , Brand { regex : "WING 5|WING9|Venus[ _][14]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "WING 5" , model : "Wing 5" , } , Model { regex : "WING9" , model : "Wing 9" , } , Model { regex : "Venus[ _]([14])" , model : "Venus $1" , } ,]) , }) , ("Genesis" , Brand { regex : "(SK-Mtek GT730[15])(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Geotel" , Brand { regex : "GEOTEL[ _]?" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "G1" , model : "G1" , } , Model { regex : "GEOTEL[ _]?Note" , model : "Note" , } , Model { regex : "GEOTEL[ _]AMIGO" , model : "Amigo" , } ,]) , }) , ("Wolder" , Brand { regex : "miSmart|miTab|WIAM \\#24|WOLDER" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "WIAM \\#24" , model : "Wiam #24" , } , Model { regex : "WOLDER_WIAM_65" , model : "Wiam #65" , } , Model { regex : "miSmart[ \\-_]?([^/]+) Build" , model : "miSmart $1" , } , Model { regex : "miTab[ \\-_]?([^/)]+)(?: Build|\\))" , model : "miTab $1" , } ,]) , }) , ("Zebra" , Brand { regex : " (TC5[16]|TC2[05]|TC75|TC7[05]x|TC700H)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Solone" , Brand { regex : "SOLONE|(?:E1457|W145[02])(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "E1457" , model : "Earth Iron E1457" , } , Model { regex : "W1450" , model : "Wind Breeze W1450" , } , Model { regex : "W1452" , model : "Wind Air W1452" , } , Model { regex : "SOLONE A47" , model : "SL-A47" , } , Model { regex : "SOLONE[ _]Elite[ _]L5501" , model : "Elite L5501" , } , Model { regex : "SOLONE[ _]SUMO[_ ]S5001" , model : "Sumo S5001" , } , Model { regex : "SOLONE[ _](SL-K40|S5002)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Vinsoc" , Brand { regex : "(XA Pro) Build" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("VVETIME" , Brand { regex : "ZYVV1(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("V1") , models : None , }) , ("Gionee" , Brand { regex : "(?:GIO-)?GIONEE[ _-]?[a-z0-9]+|(?:Dream_D1|V188S?|GN[0-9]{3,4}[a-z]?)(?:[);/ ]|$)|F103(?: Pro)?(?: Build|\\))|P5 mini Build|P7 Max Build|(M7 Power|F106L|F100A|F103S|F103 Pro)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "GN810(?:[);/ ]|$)" , model : "GN810" , } , Model { regex : "GN([0-9]{3,4}[a-z]?)(?:[);/ ]|$)" , model : "GN$1" , } , Model { regex : "(F106L|F100A|V188S|V188|F103S)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "M7 Power(?:[);/ ]|$)" , model : "M7 Power" , } , Model { regex : "P5 mini Build" , model : "P5 mini" , } , Model { regex : "P7 Max Build" , model : "P7 Max" , } , Model { regex : "(S11) Lite(?:[);/ ]|$)" , model : "$1 Lite" , } , Model { regex : "F103( Pro)?( BUILD|\\))" , model : "F103$1" , } , Model { regex : "(?:(?:GIO-)?GIONEE[ _-])?Dream_D1(?:[);/ ]|$)" , model : "Dream D1" , } , Model { regex : "(?:GIO-)?GIONEE[ _-]([a-z0-9_-]+).*Android" , model : "$1" , } , Model { regex : "Android.*(?:GIO-)?GIONEE[ _-]([a-z0-9_-]+)" , model : "$1" , } , Model { regex : "(?:GIO-)?GIONEE[ _-]?([a-z0-9]+)" , model : "$1" , } ,]) , }) , ("RoyQueen" , Brand { regex : "RQ (Regal R8)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Xshitou" , Brand { regex : "Xshitou[_ ](P7)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("PULID" , Brand { regex : "PULID[ _]|F1[01357]\\+? Build" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "F(1[01357]\\+?) Build" , model : "F$1" , } , Model { regex : "PULID[ _]([^;/]+) Build" , model : "$1" , } , Model { regex : "PULID[ _]([a-z0-9_]+)\\)" , model : "$1" , } ,]) , }) , ("NUU Mobile" , Brand { regex : "NUU_|(?:(?:N(5702|5001)L|S6001L)|A6L-[CG])(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "NUU_A([13])" , model : "A$1" , } , Model { regex : "NUU_M([32])(?:[);/ ]|$)" , model : "M$1" , } , Model { regex : "NUU_X5(?:[);/ ]|$)" , model : "X5" , } , Model { regex : "S6001L" , model : "G2" , } , Model { regex : "N5702L" , model : "G3" , } , Model { regex : "(N5001L|A6L-[CG])(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Qtek" , Brand { regex : "Qtek[ _]?([a-z0-9]+)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("PCD" , Brand { regex : "PH4001" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "PH4001" , model : "PH4001" , } ,]) , }) , ("Premio" , Brand { regex : "(?:186HS2080531|186HS1050531|186HS1050232|186FT1080231|185FT5050231|PREMIO[ _](?:S50|P420|P451))(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "186HS2080531" , model : "X1" , } , Model { regex : "186HS1050531" , model : "P541" , } , Model { regex : "185FT5050231" , model : "P511" , } , Model { regex : "186FT1080231" , model : "P571" , } , Model { regex : "186HS1050232" , model : "P630" , } , Model { regex : "PREMIO[ _](S50|P420|P451)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Lark" , Brand { regex : "(Lark|Cumulus|Evolution|FreeMe|Ultimate (?:X4|7i))[ _-]|Build/Lark|Bjorn[_ ]SP-500|FreeBird 5WiFi" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "Cumulus[ _](5\\.5|[56])[ _]HD" , model : "Cumulus $1 HD" , } , Model { regex : "FreeMe X2 ([79]) (?:ver|v)?\\.([23])" , model : "FreeMe X2 $1 Version $2" , } , Model { regex : "FreeMe X4 7 3G HD" , model : "FreeMe X4 7HD 3G" , } , Model { regex : "FreeMe[ _]X2[ _]([7-9])" , model : "FreeMe X2 $1" , } , Model { regex : "FreeMe X4[ _]7[_ ]HD" , model : "FreeMe X4 7HD" , } , Model { regex : "FreeMe X4[ _]9" , model : "FreeMe X4 9" , } , Model { regex : "FreeBird 5WiFi" , model : "FreeBird 5 WiFi" , } , Model { regex : "(?:Lark[ _-])?Evolution[ _](X2 7 3G-GPS|X4[_ ]10\\.1|10|X4[_ ]7[ _]IPS)" , model : "Evolution $1" , } , Model { regex : "Ul(?:ti|it)mate (X4 10\\.1 3G IPS|X4 8s 3G|7i)" , model : "Ultimate $1" , } , Model { regex : "PHABLET 7" , model : "Phablet 7" , } , Model { regex : "Phablet 6\\.0" , model : "Phablet 6.0" , } , Model { regex : "Bjorn[_ ]SP-500" , model : "Bjorn SP-500" , } , Model { regex : "Cirrus[ _](4\\.5|[45])" , model : "Cirrus $1" , } , Model { regex : "Lark[ _](Stratus[_ ]5)" , model : "$1" , } ,]) , }) , ("TD Systems" , Brand { regex : "(K32DLX9HS|K40DLM8FS|K40DLX9FS)(?:[);/ ]|$)" , device : Some ("tv") , model : Some ("$1") , models : None , }) , ("altron" , Brand { regex : "(AL-555|GI-626|OB[_-](?:421|728|627))(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "AL-555" , model : "AL-555" , } , Model { regex : "OB[_-](421|728|627)" , model : "OB-$1" , } , Model { regex : "GI-626" , model : "GI-626" , } ,]) , }) , ("Revo" , Brand { regex : "Revo[_ ](?:Youplus|555)|RevoYou" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Revo_Youplus" , model : "You Plus" , } , Model { regex : "Revo[ _]?(You|555)" , model : "$1" , } ,]) , }) , ("Grape" , Brand { regex : "(?:Grape[ _])?GTM-5([^;/]+) Build" , device : Some ("smartphone") , model : Some ("GTM-5$1") , models : None , }) , ("8848" , Brand { regex : "8848 (M[3-6])(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Hafury" , Brand { regex : "HAFURY" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(MIX|UMAX)" , model : "$1" , } ,]) , }) , ("Famoco" , Brand { regex : "(FX[123]00)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Point of View" , Brand { regex : "POV_TV|POV_TAB|MOB-5045" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "POV_TV-HDMI-KB-01" , model : "HDMI Smart TV Dongle" , } , Model { regex : "POV_TV-HDMI-200BT" , model : "Mini PC HDMI Dongle" , } , Model { regex : "MOB-5045" , model : "Mobii Phone 5045" , } , Model { regex : "POV_TAB-P506" , model : "ONYX 506 Navi" , } , Model { regex : "POV_TAB[_-]NAVI7[_-]3G[_-]M" , model : "ONYX 507 Navi" , } , Model { regex : "POV_TAB-P527S" , model : "ONYX 527S" , } , Model { regex : "POV_TAB-P547" , model : "ONYX 547 Navi" , } , Model { regex : "POV_TAB-PROTAB26" , model : "ProTab 26 XXL IPS" , } , Model { regex : "POV_TAB-PROTAB25XXL8?" , model : "ProTab 25XXL" , } , Model { regex : "POV_TAB-PL1015" , model : "Mobii 1015" , } , Model { regex : "POV_TAB-PROTAB([a-z0-9]+)" , model : "ProTab $1" , } , Model { regex : "POV_TAB-P?([a-z0-9]+)" , model : "Mobii $1" , } ,]) , }) , ("Clementoni" , Brand { regex : "(?:CLEMPAD[_ ](?:6_XL|HR_Plus|HR|[68]|7_S|201[89])|ClemPhone_7|MFC_(?:2018|8))(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "CLEMPAD_(201[89])" , model : "Clempad ($1)" , } , Model { regex : "MFC_2018" , model : "Clempad (2018)" , } , Model { regex : "MFC_8" , model : "Clempad 8" , } , Model { regex : "CLEMPAD_7_S" , model : "Clempad 7S" , } , Model { regex : "Clempad[_ ](6_XL|HR_Plus|HR|[68])" , model : "Clempad $1" , } , Model { regex : "ClemPhone[ _](7)" , model : "Clemphone $1" , } ,]) , }) , ("Ziox" , Brand { regex : "ZIOX[_ ]|(?:Astra Viva 4G|Astra NXT Pro|Duopix F9)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "ZIOX[_ ]F9[_ ]PRO(?:[);/ ]|$)" , model : "F9 Pro" , } , Model { regex : "Astra Viva 4G(?:[);/ ]|$)" , model : "Astra Viva 4G" , } , Model { regex : "Astra NXT Pro(?:[);/ ]|$)" , model : "Astra NXT Pro" , } , Model { regex : "Duopix F9(?:[);/ ]|$)" , model : "Duopix F9" , } ,]) , }) , ("Sanyo" , Brand { regex : "Sanyo|MobilePhone[ ;]" , device : Some ("feature phone") , model : None , models : Some (& [Model { regex : "SCP-?6750" , model : "Katana Eclipse X" , } , Model { regex : "SCP-?6760" , model : "Incognito" , } , Model { regex : "SCP-?6780" , model : "Innuendo" , } , Model { regex : "SANYO[ /_-]([a-z0-9\\-]+)" , model : "$1" , } , Model { regex : "MobilePhone ([a-z0-9\\-]+)" , model : "$1" , } ,]) , }) , ("meanIT" , Brand { regex : "meanIT[ _](?:C[12]|X10|X[126]|MG430|Q[145])(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "meanIT[ _]Q1 plus(?:[);/ ]|$)" , model : "Q1 Plus" , } , Model { regex : "meanIT[ _](C[12]|X[126]|MG430|Q[145])(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "meanIT[ _]X10(?:[);/ ]|$)" , model : "X10" , } ,]) , }) , ("OpelMobile" , Brand { regex : " OpelMobile_(SmartJX)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("iZotron" , Brand { regex : "(Mi7_HERO_(?:BETA|TAB))(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "Mi7[_ ]HERO[_ ]BETA(?:[);/ ]|$)" , model : "MI7 Hero Beta" , } , Model { regex : "Mi7[_ ]HERO[_ ]TAB(?:[);/ ]|$)" , model : "MI7 Hero Tab" , } ,]) , }) , ("Sonim" , Brand { regex : "Sonim[ -]|XP(?:[67]7|88)00(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Sonim-XP3400" , model : "XP3400" , } , Model { regex : "XP6700(?:[);/ ]|$)" , model : "XP6700" , } , Model { regex : "XP7700(?:[);/ ]|$)" , model : "XP7700" , } , Model { regex : "XP8800(?:[);/ ]|$)" , model : "XP8" , } ,]) , }) , ("Soundmax" , Brand { regex : "((?:SM-LED32M(?:11|04)S)(?:_-Ver01)?|SM-LED40M04S)(?:[);/ ]|$)" , device : Some ("tv") , model : Some ("$1") , models : None , }) , ("Kooper" , Brand { regex : "Kooper-mobile-W502(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("Mobile W502") , models : None , }) , ("Aoson" , Brand { regex : "aoson(?:R10[1-3]|S[78]|M707TG)(?:[_ ]?Pro)?(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "aosonR10([1-3])(?:[);/ ]|$)" , model : "R10$1 10.1\"" , } , Model { regex : "aosonS7_Pro(?:[);/ ]|$)" , model : "S7 Pro 7.0\"" , } , Model { regex : "aosonS7(?:[);/ ]|$)" , model : "S7 7.0\"" , } , Model { regex : "aosonS8Pro(?:[);/ ]|$)" , model : "S8 Pro 8.0\"" , } , Model { regex : "aoson(M707TG)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Maxtron" , Brand { regex : "Maxtron[ _-](V[327]|S[89]|T1)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Maxtron[ _-](V[327]|S[89])(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Maxtron[ _-](T1)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Mobiistar" , Brand { regex : "Mobiistar|Zumbo[ _]S|PRIME X MAX|X1 Notch|E1 Selfie" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "X1 Notch(?:[);/ ]|$)" , model : "X1 Notch" , } , Model { regex : "E1 Selfie(?:[);/ ]|$)" , model : "E1 Selfie" , } , Model { regex : "mobiistar_LAI_Zumbo(?:[);/ ]|$)" , model : "Zumbo" , } , Model { regex : "Zumbo[_ ]S[_ ]2017[_ ]Lite(?:[);/ ]|$)" , model : "Lai Zumbo S Lite (2017)" , } , Model { regex : "Zumbo[_ ]S[_ ]2017(?:[);/ ]|$)" , model : "Lai Zumbo S (2017)" , } , Model { regex : "mobiistar ZUMBO S2( Dual)" , model : "Zumbo S2" , } , Model { regex : "Mobiistar_LAI_Zumbo_J_2017(?:[);/ ]|$)" , model : "Lai Zumbo J (2017)" , } , Model { regex : "Mobiistar_LAI_Zumbo_J(?:[);/ ]|$)" , model : "Lai Zumbo J" , } , Model { regex : "Mobiistar_Zumbo_J2" , model : "Lai Zumbo J2" , } , Model { regex : "Mobiistar[_ ]Zumbo[_ ]S2" , model : "Zumbo S2" , } , Model { regex : "mobiistar ZUMBO Power" , model : "Zumbo Power" , } , Model { regex : "mobiistar[ _]LAI[ _]YUNA[ _]([1XCS])" , model : "Lai Yuna $1" , } , Model { regex : "mobiistar LAI Yuki" , model : "Lai Yuki" , } , Model { regex : "mobiistar[ _]LAI[ _]ZORO[ _]([23])" , model : "Lai Zoro $1" , } , Model { regex : "mobiistar[ _]LAI[ _]Zena" , model : "Lai Zena" , } , Model { regex : "mobiistar[ _]LAI[ _]Z([12])?" , model : "Lai Z$1" , } , Model { regex : "mobiistar_ZORO_4G" , model : "Zoro 4G" , } , Model { regex : "mobiistar touch LAI 512" , model : "Touch Lai 512" , } , Model { regex : "mobiistar LAI 504([KC])" , model : "Lai 504$1" , } , Model { regex : "mobiistar LAI Y" , model : "Lai Y" , } , Model { regex : "mobiistar PRIME X 2017" , model : "Prime X" , } , Model { regex : "mobiistar[ _]PRIME[ _](X1|558|X[ _]Plus|X[ _]Grand) Build" , model : "Prime $1" , } , Model { regex : "PRIME X MAX 2018" , model : "Prime X Max" , } , Model { regex : "mobiistar[ _]KOOL([ _]Lite)?" , model : "Kool$1" , } , Model { regex : "mobiistar KAT 452 Build" , model : "Kat 452" , } , Model { regex : "mobiistar_LAI_YOLLO Build" , model : "Lai Yollo" , } , Model { regex : "Mobiistar[ _]([^;/)]+)(?: Build|[;)])" , model : "$1" , } ,]) , }) , ("Naomi Phone" , Brand { regex : "NAOMIPHONE Ambar(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("Ambar") , models : None , }) , ("Condor" , Brand { regex : "Allure (?:M[13]|X)|Griffe T[2356789]|TFX712G|TRA-901G|TGW[-]?(710G|709)|(?:PGN\\-?[456][012][0-9]|PHS\\-601|PHQ519|PHQ52[056]|TB105L|TB717G|PKT\\-301|Plume (?:H1|L[1-468]|P8|P6 PRO LTE))(?:[);/ ]|$)|CTAB[^/;]+ Build" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "CTAB([^/;]+) Build" , model : "CTAB $1" , } , Model { regex : "(TGW)-?(710G|709)(?:[);/ ]|$)" , model : "$1 $2" , } , Model { regex : "(TFX712G|TB105L|TB717G)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "(TRA)-(901G)(?:[);/ ]|$)" , model : "$1 $2" , } , Model { regex : "PHS\\-601" , model : "C8" , } , Model { regex : "PGN\\-?403" , model : "C4+ Noir" , } , Model { regex : "PGN\\-?404" , model : "C7 Mini" , } , Model { regex : "PGN\\-?409" , model : "Plume P4" , } , Model { regex : "PKT\\-?301" , model : "C2" , } , Model { regex : "PGN\\-?504" , model : "C5" , } , Model { regex : "PGN\\-?505" , model : "C8S" , } , Model { regex : "PGN\\-?506" , model : "C7" , } , Model { regex : "(Allure (?:M[13]|X))" , model : "$1" , } , Model { regex : "PGN\\-?507" , model : "Allure A9" , } , Model { regex : "PGN\\-?508" , model : "C6+" , } , Model { regex : "PGN\\-?509" , model : "C6 Pro" , } , Model { regex : "PGN\\-?511" , model : "Allure A9 Plus" , } , Model { regex : "PGN\\-?513" , model : "Griffe G4" , } , Model { regex : "PHQ519" , model : "Griffe G4S" , } , Model { regex : "PHQ520" , model : "Griffe G5" , } , Model { regex : "PHQ525" , model : "Griffe G6" , } , Model { regex : "PHQ526" , model : "Griffe G6 Pro" , } , Model { regex : "PGN\\-?514" , model : "Plume P7" , } , Model { regex : "PGN\\-?515" , model : "Plume P4 Pro" , } , Model { regex : "PGN\\-?516" , model : "Plume P5" , } , Model { regex : "PGN\\-?51[78]" , model : "Plume P6" , } , Model { regex : "PGN\\-?521" , model : "Griffe G4 Plus" , } , Model { regex : "Griffe T3 ?pro" , model : "Griffe T3 Pro" , } , Model { regex : "Griffe T([0-9]) Plus" , model : "Griffe T$1 Plus" , } , Model { regex : "Griffe T([0-9])" , model : "Griffe T$1" , } , Model { regex : "PGN\\-?522" , model : "P6 Plus" , } , Model { regex : "PGN\\-?523" , model : "P7 Plus" , } , Model { regex : "PGN\\-?527" , model : "Plume P4 Plus" , } , Model { regex : "PGN\\-?528|PLUME P6 PRO LTE" , model : "Plume P6 Pro LTE" , } , Model { regex : "PGN\\-?605" , model : "Plume P8" , } , Model { regex : "PGN\\-?606" , model : "Allure A55" , } , Model { regex : "PGN\\-?607" , model : "Allure A100" , } , Model { regex : "PGN\\-?608" , model : "Allure A55 Slim" , } , Model { regex : "PGN\\-?609" , model : "Allure A100 Lite" , } , Model { regex : "PGN\\-?610" , model : "Plume P8 Lite" , } , Model { regex : "PGN\\-?611" , model : "Allure A8" , } , Model { regex : "PGN\\-?612" , model : "Allure A8 Plus" , } , Model { regex : "PGN\\-?613" , model : "Allure A55 Plus" , } , Model { regex : "Plume H1" , model : "Plume H1" , } , Model { regex : "Plume L([2468]) Pro" , model : "Plume L$1 Pro" , } , Model { regex : "Plume L3 Plus" , model : "Plume L3 Plus" , } , Model { regex : "Plume L3 Smart" , model : "Plume L3 Smart" , } , Model { regex : "Plume L([1-4])" , model : "Plume L$1" , } , Model { regex : "Plume P8 Pro" , model : "Plume P8 Pro" , } , Model { regex : "PGN\\-?([0-9]{3})" , model : "PGN-$1" , } ,]) , }) , ("Xion" , Brand { regex : "XI-CE(?:655|U[48])" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "XI-CE(655|U[48])" , model : "CE$1" , } ,]) , }) , ("Carrefour" , Brand { regex : "CT(?:10[0123]0|7[12]0|820)(?:W|FR)?(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "CT820" , model : "Touch Tablet Neo2" , } , Model { regex : "CT(10[0123]0(?:W|FR)?)" , model : "CT$1" , } , Model { regex : "CT(7[12]0(?:W|FR)?)" , model : "CT$1" , } ,]) , }) , ("Navcity" , Brand { regex : "NP-752Go(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "NP-752Go" , model : "NP-752 Go" , } ,]) , }) , ("Primux" , Brand { regex : "Primux" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Primux_ioxphone(?:[);/ ]|$)" , model : "IOX Phone" , } , Model { regex : "PrimuxDelta6(?:[);/ ]|$)" , model : "Delta 6" , } , Model { regex : "PrimuxKappa(P50[01])(?:[);/ ]|$)" , model : "Kappa $1" , } , Model { regex : "PrimuxKappa(?:[);/ ]|$)" , model : "Kappa" , } , Model { regex : "Primux_Beta2(?:[);/ ]|$)" , model : "Beta 2" , } , Model { regex : "Primux_?Omega([57])(?:[);/ ]|$)" , model : "Omega $1" , } , Model { regex : "PrimuxUP(?:[);/ ]|$)" , model : "UP" , } , Model { regex : " PrimuxZonda4(?:[);/ ]|$)" , model : "Zonda 4" , } , Model { regex : "Primux_Siroco6(?:[);/ ]|$)" , model : "Siroco 6" , } ,]) , }) , ("Sendo" , Brand { regex : "Sendo([a-z0-9]+)" , device : Some ("feature phone") , model : Some ("$1") , models : None , }) , ("AllCall" , Brand { regex : "AllCall_|Heat[34]|Rio_X(?:[);/ ]|$)|Hot ?[125][^;/]+ Build" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "AllCall_(Alpha|Atom|Bro|Madrid)" , model : "$1" , } , Model { regex : "AllCall_S1_X" , model : "S1 X" , } , Model { regex : "AllCall_S1" , model : "S1" , } , Model { regex : "AllCall_RIO_S" , model : "Rio S" , } , Model { regex : "AllCall_RIO_PRO" , model : "Rio Pro" , } , Model { regex : "AllCall_RIO" , model : "Rio" , } , Model { regex : "Heat([34])" , model : "Heat $1" , } , Model { regex : "Rio_X(?:[);/ ]|$)" , model : "Rio X" , } , Model { regex : "Hot ?([125][^;/]+) Build" , model : "Hot $1" , } ,]) , }) , ("iPro" , Brand { regex : "(?:Kylin[ _]5.[05]S?|KYLIN40|Jade[78]s|Amber[67]S?|Amber5S_Pro|Phonenix50S|Zafiro)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Kylin_5.0S" , model : "Kylin 5.0S" , } , Model { regex : "Kylin (5.[05])" , model : "Kylin $1" , } , Model { regex : "KYLIN40" , model : "Kylin 40" , } , Model { regex : "Jade([78])s" , model : "Jade $1s" , } , Model { regex : "Amber7S" , model : "Amber 7S" , } , Model { regex : "Amber5S_Pro" , model : "Amber 5S Pro" , } , Model { regex : "Amber6" , model : "Amber 6" , } , Model { regex : "Phonenix50S" , model : "Phonenix 50S" , } , Model { regex : "Zafiro" , model : "Zafiro" , } ,]) , }) , ("Smailo" , Brand { regex : "Smailo_(2GO)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Qilive" , Brand { regex : "Qilive [0-9][^;/]*|Q(7S5[5]?IN4G|7T10INP|8T10IN|8S55IN4G2|8S[56]IN4G|9T9IN|9T(?:7|10)IN4G|9S55IN4G|10S5[37]IN4G|10S[56]IN4G|10S[56]IN4GR|9S5IN4G|6T7IN)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Q7S5IN4G" , model : "Q7 5.0\" 4G" , } , Model { regex : "Q7S55IN4G" , model : "Q7 5.5\" 4G" , } , Model { regex : "Q8S55IN4G2" , model : "Q8 5.5\" 4G" , } , Model { regex : "Q8S6IN4G" , model : "Q8 6.0\" 4G" , } , Model { regex : "Q8S5IN4GP" , model : "Q8 5.1\" 4G" , } , Model { regex : "Q9S5IN4G" , model : "Q9 5.0\" 4G" , } , Model { regex : "Q9S55IN4G" , model : "Q9 5.5\" 4G" , } , Model { regex : "Q10S53IN4G" , model : "Q10 5.3\" 4G" , } , Model { regex : "Q10S57IN4G" , model : "Q10 5.7\" 4G" , } , Model { regex : "Q10S5IN4G[R]?" , model : "Q10 5.0\" 4G" , } , Model { regex : "Q10S6IN4G" , model : "Q10 6.0\" 4G" , } , Model { regex : "Q6T7IN" , model : "Q6" , } , Model { regex : "Q7T10INP" , model : "Q7 10.1\"" , } , Model { regex : "Q8T10IN" , model : "Q8 10.1\"" , } , Model { regex : "Q9T7IN4G" , model : "Q9 7.0\" 4G" , } , Model { regex : "Q9T9IN" , model : "Q9 9.0\"" , } , Model { regex : "Q9T10IN4G" , model : "Q9 10.1\" 4G" , } , Model { regex : "Qilive ([0-5][^;/]*) Build" , model : "$1" , } , Model { regex : "Qilive ([0-5][^;/]*)/" , model : "$1" , } , Model { regex : "Qilive ([6-9][^;/]*) Build" , model : "$1" , } , Model { regex : "Qilive ([6-9][^;/]*)/" , model : "$1" , } ,]) , }) , ("K-Touch" , Brand { regex : "K-?Touch[ _][a-z0-9]+" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "K-?Touch[ _]([^/;]*)[ _]Build" , model : "$1" , } , Model { regex : "K-?Touch[ _]([a-z0-9]+)" , model : "$1" , } ,]) , }) , ("Barnes & Noble" , Brand { regex : "Nook|BN[TR]V[0-9]+" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "Nook([a-z0-9]+)" , model : "Nook $1" , } , Model { regex : "Nook[ _]([^/;]+)[ _]Build" , model : "Nook $1" , } , Model { regex : "(BN[TR]V[0-9]+)" , model : "Nook $1" , } ,]) , }) , ("Gresso" , Brand { regex : "Gresso[ _]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Gresso[ _]Regal(?:[);/ ]|$)" , model : "Regal" , } ,]) , }) , ("Honeywell" , Brand { regex : "(EDA50K?|EDA70|EDA51)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("ScanPal $1") , models : None , }) , ("Vizio" , Brand { regex : "Vizio|VAP430|VTAB1008" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "VAP430" , model : "VAP430" , } , Model { regex : "VTAB1008" , model : "VTAB1008" , } ,]) , }) , ("Sunvell" , Brand { regex : "(?:T95ZPLUS|T95[KU]PRO)(?:[);/ ]|$)" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "T95ZPLUS" , model : "T95Z Plus" , } , Model { regex : "(T95[KU])PRO" , model : "$1 Pro" , } ,]) , }) , ("Winmax" , Brand { regex : "Winmax[ _](?:XC14|XC[46]|TX30)(?:[);/ ]|$)|MAUI.+Winmax_BD45" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Winmax[ _](XC14|XC[46])(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Winmax[ _](TX30)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "MAUI.+Winmax_(BD45)" , model : "$1" , } ,]) , }) , ("Azumi Mobile" , Brand { regex : "Azumi[_ -]|(?:SPEED55|A50_Style_Plus)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Azumi[_ -]([^/;]+) Build" , model : "$1" , } , Model { regex : "Azumi[_ -]([a-z0-9_]+)" , model : "$1" , } , Model { regex : "SPEED55" , model : "Speed 5.5\"" , } , Model { regex : "A50_Style_Plus" , model : "A50 Style Plus" , } ,]) , }) , ("Brondi" , Brand { regex : "Brondi[ _]|(?:CENTURION|GLADIATOR| GLORY|LUXURY|SENSUELLE|VICTORY)(?:[ _-]?[2-6])?(?:[);/ ]|$)|Surfing Tab|501 SZ" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(?:Brondi[ _])?(620 SZ|730_4G_HD|501 SZ)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "CENTURION(?:[ _-]?([2-6]))?(?:[);/ ]|$)" , model : "CENTURION $1" , } , Model { regex : "GLADIATOR(?:[ _-]?([2-6]))?(?:[);/ ]|$)" , model : "GLADIATOR $1" , } , Model { regex : "GLORY(?:[ _-]?([2-6]))?(?:[);/ ]|$)" , model : "GLORY $1" , } , Model { regex : "LUXURY(?:[ _-]?([2-6]))?(?:[);/ ]|$)" , model : "LUXURY $1" , } , Model { regex : "SENSUELLE(?:[ _-]?([2-6]))?(?:[);/ ]|$)" , model : "SENSUELLE $1" , } , Model { regex : "VICTORY(?:[ _-]?([2-6]))?(?:[);/ ]|$)" , model : "VICTORY $1" , } , Model { regex : "Surfing Tab ([^;/]+) Build" , model : "SURFING TAB $1" , } , Model { regex : "Surfing Tab ([^;/)]+)[;/)]" , model : "SURFING TAB $1" , } ,]) , }) , ("Woxter" , Brand { regex : "Woxter[ _]|Nimbus 101Q" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "Nimbus ?(101Q|115|1100RX)(?:[);/ ]|$)" , model : "Nimbus $1" , } , Model { regex : "WOXTER[ _]I-101(?:[);/ ]|$)" , model : "i-101" , } , Model { regex : "Woxter[ _]([SQ]X) ?([0-9A-Z]+)(?:[);/ ]|$)" , model : "$1 $2" , } , Model { regex : "Woxter[_ ](?:Zielo[ _])?(Q27|Z800|Z420)(?:[);/ ]|$)" , model : "Zielo $1" , } , Model { regex : "Woxter[ _]([^/;)]+)(?: Build|\\))" , model : "$1" , } ,]) , }) , ("EKT" , Brand { regex : "EK-(?:5040|5336|5540|5937|6020|8680|MII|T7020)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "EK-(MII|T7020)" , model : "EK-$1" , } , Model { regex : "EK-(5040|5336|5540|5937|6020|8680)" , model : "EK-$1" , } ,]) , }) , ("ARRIS" , Brand { regex : "ARRIS" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "ARRIS[,;] ([^),;/]+)" , model : "$1" , } ,]) , }) , ("TCL" , Brand { regex : "TCL,|TCL[_ -][a-z0-9]+|(?:TCL[_ -][^;/]+ Build)|(?:TCLGalaG60(?:\\(9108A\\))?|A502DL|T78[02]H|5199I|7040N|5133A|5159[AJ]|5152D|T770H|T671H|T790Y|T766H_EEA|T766A|T799[BH]|Percee TV)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "TCLGalaG60(?:\\(9108A\\))?(?:[);/ ]|$)" , model : "Gala G60" , } , Model { regex : "5199I(?:[);/ ]|$)" , model : "C9" , } , Model { regex : "5152D(?:[);/ ]|$)" , model : "C5" , } , Model { regex : "5133A(?:[);/ ]|$)" , model : "L5" , } , Model { regex : "T780H(?:[);/ ]|$)" , model : "Plex" , } , Model { regex : "T782H(?:[);/ ]|$)" , model : "10 Plus" , } , Model { regex : "T790Y(?:[);/ ]|$)" , model : "10 5G" , } , Model { regex : "TCL[_ -]([^;/]+) Build" , model : "$1" , } , Model { regex : "TCL[_ -]([a-z0-9]+)" , model : "$1" , } , Model { regex : "(7040N)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "A502DL(?:[);/ ]|$)" , model : "LX" , } , Model { regex : "5159[AJ](?:[);/ ]|$)" , model : "L9" , } , Model { regex : "T770H(?:[);/ ]|$)" , model : "10L" , } , Model { regex : "T766[HA](?:_EEA)?(?:[);/ ]|$)" , model : "10 SE" , } , Model { regex : "T671H(?:_EEA)?(?:[);/ ]|$)" , model : "20 SE" , } , Model { regex : "T799[BH](?:[);/ ]|$)" , model : "10 Pro" , } , Model { regex : "(Percee TV)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "((?:43|55)S62FS|(?:43|50)P65US|U(?:43|60)P60|65P4USM|(?:40|49)S62|L32S6|55P610|50P8S|55S62|(?:43|50)P6US|55DP60)" , model : "$1" , } ,]) , }) , ("Doov" , Brand { regex : "(?:Doov-)?Doov[ _]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(?:Doov-)?Doov[ _]([^;/]+) Build" , model : "$1" , } , Model { regex : "(?:Doov-)?Doov[ _]([^);/]+)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Ezze" , Brand { regex : "EZZE-|EZ(?!Browser)[a-z0-9]+" , device : Some ("feature phone") , model : None , models : Some (& [Model { regex : "EZZE-([a-z0-9]+)" , model : "$1" , } , Model { regex : "EZ([a-z0-9]+)" , model : "EZ$1" , } ,]) , }) , ("IMO Mobile" , Brand { regex : "IMO[ _]\\w" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "IMO[ _]Q([23]) Plus(?:[);/ ]|$)" , model : "Q$1 Plus" , } , Model { regex : "IMO[ _]Q2(?:[);/ ]|$)" , model : "Q2" , } , Model { regex : "IMO[ _]S2(?:[);/ ]|$)" , model : "S2" , } , Model { regex : "IMO[ _]FEEL A2(?:[);/ ]|$)" , model : "Feel A2" , } , Model { regex : "IMO[ _]S50(?:[);/ ]|$)" , model : "S50 Light" , } , Model { regex : "IMO[ _]S80(?:[);/ ]|$)" , model : "S80 Hero" , } , Model { regex : "IMO[ _]S89(?:[);/ ]|$)" , model : "S89 Miracle" , } , Model { regex : "IMO[ _]S88(?:[);/ ]|$)" , model : "S88 Discovery" , } , Model { regex : "IMO[ _]S99(?:[);/ ]|$)" , model : "S99 Ocean" , } , Model { regex : "IMO[ _]S98(?:[);/ ]|$)" , model : "S98 Champion" , } , Model { regex : "IMO[ _]S87(?:[);/ ]|$)" , model : "S87 Raptor" , } , Model { regex : "IMO[ _]S67(?:[);/ ]|$)" , model : "S67 Blast" , } , Model { regex : "IMO[ _]S78(?:[);/ ]|$)" , model : "S78 Glory" , } , Model { regex : "IMO[ _]Q8(?:[);/ ]|$)" , model : "Q8 Clarity" , } , Model { regex : "IMO[ _]Discovery II(?:[);/ ]|$)" , model : "Discovery II" , } , Model { regex : "IMO[ _]Q(?:[);/ ]|$)" , model : "Q" , } , Model { regex : "IMO[ _](Y5|Z[67])(?:[);/ ]|$)" , model : "Tab $1" , } , Model { regex : "IMO TAB X9(?:[);/ ]|$)" , model : "Tab X9" , } ,]) , }) , ("Pixus" , Brand { regex : "Pixus|(hiPower|Ride[_ ][34]G|Play[ _]Three[ _]v(?:[24].0|3.1))(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "Ride[_ ]([34])G" , model : "Ride $1G" , } , Model { regex : "Play[ _]Three[ _]v([24].0|3.1)" , model : "Play Three v$1" , } , Model { regex : "Play Two" , model : "Play Two" , } , Model { regex : "Play Five" , model : "Play Five" , } , Model { regex : "hiPower" , model : "hiPower" , } , Model { regex : "Pixus[ _]Sprint" , model : "Sprint" , } , Model { regex : "Touch 7 3G" , model : "Touch 7 3G" , } , Model { regex : "Pixus[ _]hiMax" , model : "HiMax 9.6\"" , } , Model { regex : "Pixus[ _]Blast" , model : "Blast 10.1\"" , } , Model { regex : "Pixus[ _]Joker" , model : "Joker 10.1\"" , } , Model { regex : "Pixus Blaze 10.1 3G" , model : "Blaze 10.1\" 3G" , } , Model { regex : "Raze" , model : "Raze" , } , Model { regex : "Pixus_Jet" , model : "Jet" , } , Model { regex : "pixus hit 2" , model : "Hit 2" , } ,]) , }) , ("UTOK" , Brand { regex : "UTOK (45[01]D)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Camfone" , Brand { regex : "(?:Camfone (?:SE)|Hero[_ ](?:H5\\+|SE2|H9|(?:H7|XR)_Plus|SX|1[123]|SE3[ _]Max)|Honey (?:Y1|Y2s))(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(Hero[_ ](?:H5\\+|SE2|H9|(?:H7|XR)_Plus|SX|1[123]|SE3[ _]Max)|Honey (?:Y1|Y2s))(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Camfone (SE)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("LYF" , Brand { regex : "(LYF[ _])?LS-[456][0-9]{3}|LYF/[^/]+/" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "LS-4004" , model : "Flame 2" , } , Model { regex : "LS-5501" , model : "Earth 1" , } , Model { regex : "LS-5021" , model : "Earth 2" , } , Model { regex : "LS-5505" , model : "Water F1" , } , Model { regex : "LS-4503" , model : "Flame LS-4503" , } , Model { regex : "LS-4001" , model : "Flame 3" , } , Model { regex : "LS-4003" , model : "Flame 4" , } , Model { regex : "LS-4002" , model : "Flame 5" , } , Model { regex : "LS-4005" , model : "Flame 6" , } , Model { regex : "(LYF[ _])?LS-4006" , model : "Flame 7" , } , Model { regex : "LS-4008" , model : "Flame 7S" , } , Model { regex : "LS-450[58]" , model : "Flame 8" , } , Model { regex : "LS-5002" , model : "Water 1" , } , Model { regex : "LS-5005" , model : "Water 4" , } , Model { regex : "LS-5006" , model : "Water 6" , } , Model { regex : "LS-5008" , model : "Water 2" , } , Model { regex : "LS-5009" , model : "Wind 6" , } , Model { regex : "LS-5013" , model : "Wind 5" , } , Model { regex : "LS-5014" , model : "Wind 4" , } , Model { regex : "LS-5010" , model : "Wind 1" , } , Model { regex : "LS-5015" , model : "Water 8" , } , Model { regex : "LS-5016" , model : "Wind 7" , } , Model { regex : "LS-5504" , model : "Water 7" , } , Model { regex : "LS-5507" , model : "Water 7S" , } , Model { regex : "LS-5017" , model : "Water 11" , } , Model { regex : "LS-5018" , model : "Wind 4S" , } , Model { regex : "LS-5020" , model : "Water 10" , } , Model { regex : "LS-5201" , model : "Water F1S" , } , Model { regex : "LS-5502" , model : "Wind 3" , } , Model { regex : "LS-5503" , model : "Water 3" , } , Model { regex : "LS-5506" , model : "Water 9" , } , Model { regex : "LS-6001" , model : "Wind 2" , } , Model { regex : "LYF/([^/]+)/" , model : "$1" , } ,]) , }) , ("Invin" , Brand { regex : "INVIN[ _-]|KM5PRO(?:[);/ ]|$)" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "INVIN[ _-](X[24]|KM[678])" , model : "$1" , } , Model { regex : "KM5PRO" , model : "KM5 Pro" , } ,]) , }) , ("Primepad" , Brand { regex : "PD\\-(3127NC|3127) Build" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "PD\\-3127NC Build" , model : "PD-3127NC" , } , Model { regex : "PD\\-3127 Build" , model : "PD-3127" , } ,]) , }) , ("G-TiDE" , Brand { regex : "G-TiDE" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Shining7" , model : "Shining 7" , } , Model { regex : "G-TiDE_(A1|S[34])" , model : "$1" , } , Model { regex : "G-TiDE V6" , model : "V6" , } , Model { regex : "E(57|60|66|72|77)" , model : "$1" , } ,]) , }) , ("Claresta" , Brand { regex : "Claresta[ _]|(?:AirPhoneS[56]|AirPhone K6)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "AirPhone ?(S[56]|K6)" , model : "AirPhone $1" , } , Model { regex : "Claresta (F3) PRO" , model : "$1 Pro" , } , Model { regex : "Claresta[ _](F4)" , model : "$1" , } ,]) , }) , ("Mediacom" , Brand { regex : "(?:SmartPad7503G|M-SP10MXA|M-PPAB500|SmartPad970s2(?:3G)?|M[_-][MPS]P[0-9a-z]+|M-IPRO[0-9a-z]+|1AEC)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "SmartPad7503G(?:[);/ ]|$)" , model : "SmartPad 750 3G" , } , Model { regex : "SmartPad970s23G(?:[);/ ]|$)" , model : "SmartPad 970 S2 3G" , } , Model { regex : "SmartPad970s2(?:[);/ ]|$)" , model : "SmartPad 970 S2" , } , Model { regex : "M-MP84[02]M(?:[);/ ]|$)" , model : "SmartPad 8.0\" Mobile" , } , Model { regex : "M-MP940M(?:[);/ ]|$)" , model : "SmartPad 9.7\" Mobile" , } , Model { regex : "M-SP10MXA(?:[);/ ]|$)" , model : "SmartPad MX 10.1\"" , } , Model { regex : "M-SP8MXA(?:[);/ ]|$)" , model : "SmartPad MX 8.0\"" , } , Model { regex : "M-SP7HXAH(?:[);/ ]|$)" , model : "SmartPad HX 7.0\"" , } , Model { regex : "M-SP8HXAH(?:[);/ ]|$)" , model : "SmartPad HX 8.0\" HD" , } , Model { regex : "M-MP(?:710|720|725|726|740)GOx?(?:[);/ ]|$)" , model : "SmartPad 7.0\" Go" , } , Model { regex : "M-MP876S2(?:[);/ ]|$)" , model : "SmartPad 8.0\" S2" , } , Model { regex : "M-MP8S2[AB]?3G(?:[);/ ]|$)" , model : "SmartPad 8.0\" S2 3G" , } , Model { regex : "M-MP(101|102|860|875)S2[BW]?(?:[);/ ]|$)" , model : "SmartPad $1 S2" , } , Model { regex : "M-MP85S23G(?:[);/ ]|$)" , model : "SmartPad 875 S2 3G" , } , Model { regex : "M-SP1AGO3G" , model : "SmartPad 10 Go 3G" , } , Model { regex : "M-SP7xGO3G" , model : "SmartPad 10.1\" iPro 3G" , } , Model { regex : "1AEC" , model : "SmartPad 10 Eclipse" , } , Model { regex : "M-MP10[45][01]S2(?:[);/ ]|$)" , model : "SmartPad 10.1\" S2" , } , Model { regex : "M-MP1S2[AB]3G(?:[);/ ]|$)" , model : "SmartPad 10.1\" S2 3G" , } , Model { regex : "M-MP8[24]S4(?:[);/ ]|$)" , model : "SmartPad 8.0\" S4" , } , Model { regex : "M-MP8S4[AB]3G(?:[);/ ]|$)" , model : "SmartPad 8.0\" S4 3G" , } , Model { regex : "M-MP9S4A3G(?:[);/ ]|$)" , model : "SmartPad 9.7\" S4 3G" , } , Model { regex : "M-MP1[02]S4(?:[);/ ]|$)" , model : "SmartPad 10.1\" S4" , } , Model { regex : "M-MP1040MC?(?:[);/ ]|$)" , model : "SmartPad 10.1\" HD S4 3G" , } , Model { regex : "M-MP1S4[AB]3G(?:[);/ ]|$)" , model : "SmartPad 10.1\" S4 3G" , } , Model { regex : "M-SP10HXxH(?:[);/ ]|$)" , model : "SmartPad 10.1\" HX HD" , } , Model { regex : "M-SP10MXHA(?:[);/ ]|$)" , model : "SmartPad 10.1\" MX" , } , Model { regex : "M-SP10MXHL(?:[);/ ]|$)" , model : "SmartPad 10.1\" MX Lite" , } , Model { regex : "M-MP8PA3G(?:[);/ ]|$)" , model : "SmartPad 8.0\" HD Pro 3G" , } , Model { regex : "M-MP10PA(?:[);/ ]|$)" , model : "SmartPad 10.1\" HD Pro" , } , Model { regex : "M-MP10PA3G(?:[);/ ]|$)" , model : "SmartPad 10.1\" HD Pro 3G" , } , Model { regex : "M-IPRO([18][01]0)[BW](?:[);/ ]|$)" , model : "SmartPad 8.0\" HD iPro$1 3G" , } , Model { regex : "(?:M-MP75S23G|M-MP72[01]M)(?:[);/ ]|$)" , model : "SmartPad 7.0\" Mobile" , } , Model { regex : "M-MP7S2[ABDK]3G(?:[);/ ]|$)" , model : "SmartPad 7.0\" S2 3G" , } , Model { regex : "M-MP5303G(?:[);/ ]|$)" , model : "SmartPad Mini Mobile" , } , Model { regex : "M-PPxB400(?:[);/ ]|$)" , model : "PhonePad Duo B400" , } , Model { regex : "M-PPAG550(?:[);/ ]|$)" , model : "PhonePad Duo G550" , } , Model { regex : "M-PPAB500(?:[);/ ]|$)" , model : "PhonePad Duo B500" , } , Model { regex : "M-PP2G530(?:[);/ ]|$)" , model : "PhonePad Duo G530" , } , Model { regex : "M-PPG700(?:[);/ ]|$)" , model : "PhonePad Duo G700" , } , Model { regex : "M-PPxS531(?:[);/ ]|$)" , model : "PhonePad Duo S531" , } , Model { regex : "M-PP2S550(?:[);/ ]|$)" , model : "PhonePad Duo S550" , } , Model { regex : "M-PP2S650C?(?:[);/ ]|$)" , model : "PhonePad Duo S650" , } , Model { regex : "M-PPxS551U(?:[);/ ]|$)" , model : "PhonePad Duo S551U" , } , Model { regex : "M-PPAG4(?:[);/ ]|$)" , model : "PhonePad Duo G4" , } , Model { regex : "M-PP[ABC]G500(?:[);/ ]|$)" , model : "PhonePad Duo G500" , } , Model { regex : "M-PP2S500[BC]?(?:[);/ ]|$)" , model : "PhonePad Duo S500" , } , Model { regex : "M[_-]PP[Ax]X(470|510|520)U(?:[);/ ]|$)" , model : "PhonePad Duo X$1U" , } , Model { regex : "M-PPxG(400|501|[457][PM]?)(?:[);/ ]|$)" , model : "PhonePad Duo G$1" , } , Model { regex : "M-PPxS(532[LU]|470|501|5P?|7P?)(?:[);/ ]|$)" , model : "PhonePad Duo S$1" , } , Model { regex : "M-PPxG(450)(?:[);/ ]|$)" , model : "PhonePad Duo G$1" , } , Model { regex : "M-MP([0-9a-z]+)" , model : "SmartPad $1" , } ,]) , }) , ("Samsung" , Brand { regex : "SAMSUNG(?! ?Browser)|Maple (?!III)|SC-(?:01[FGHKLM]|02[CGHJKLM]|03[JKL]|04[EJL]|05[GL]|(?:4[12]|5[1234])A)|N[57]100|N5110|N9100|S(?:CH|GH|PH|EC|AM|HV|HW|M)-|SMART-TV|GT-|(?<!GOG|GOG )Galaxy|(?:portalmmm|o2imode)/2\\.0 [SZ]|sam[rua]|vollo Vi86(?:[);/ ]|$)|(?:OTV-)?SMT-E5015|ISW11SC|40[34]SC|SC(?:V3[1-9]|V4[0-9]|51Aa|T21|G0[1-9]|G10|L2[234])(?:-[uj])?(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "GT-B9150" , model : "Home Sync" , } , Model { regex : "(?:OTV-)?SMT-E5015" , model : "SMT-E5015" , } , Model { regex : "Maple " , model : "" , } , Model { regex : "(?:SAMSUNG-)?(?:GT-)?N5100" , model : "Galaxy Note 8.0\"" , } , Model { regex : "(?:SAMSUNG-)?SM-T677(?:[ATV]|N[KL])?(?:[);/ ]|$)" , model : "Galaxy View 18.4\" LTE" , } , Model { regex : "(?:SAMSUNG-)?SM-T670(?:[);/ ]|$)" , model : "Galaxy View 18.4\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?(?:GT-)?N5110" , model : "Galaxy Note 8.0\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?GT-N5120" , model : "Galaxy Note 8.0\" LTE" , } , Model { regex : "(?:SAMSUNG-)?(?:GT|SM)-N8000" , model : "Galaxy Note 10.1\"" , } , Model { regex : "(?:SAMSUNG-)?GT-N8010" , model : "Galaxy Note 10.1\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?GT-N8020" , model : "Galaxy Note 10.1\" LTE" , } , Model { regex : "(?:SAMSUNG-)?GT-P1000M?|SCH-I800" , model : "Galaxy Tab" , } , Model { regex : "(?:SAMSUNG-)?GT-P3100B?" , model : "Galaxy Tab 2 7\"" , } , Model { regex : "(?:SAMSUNG-)?GT-P311[03]" , model : "Galaxy Tab 2 7\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?GT-P5100|SCH-I915" , model : "Galaxy Tab 2 10.1\"" , } , Model { regex : "(?:SAMSUNG-)?GT-P511[03]" , model : "Galaxy Tab 2 10.1\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-T217T" , model : "Galaxy Tab 3 7.0\" 4G" , } , Model { regex : "(?:SAMSUNG-)?GT-P5200" , model : "Galaxy Tab 3 10.1\"" , } , Model { regex : "(?:SAMSUNG-)?GT-P5210" , model : "Galaxy Tab 3 10.1\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?GT-P5220" , model : "Galaxy Tab 3 10.1\" LTE" , } , Model { regex : "(?:SAMSUNG-)?GT-P6200" , model : "Galaxy Tab 7\" Plus" , } , Model { regex : "(?:SAMSUNG-)?GT-P6201" , model : "Galaxy Tab 7\" Plus N" , } , Model { regex : "(?:SAMSUNG-)?GT-P6810" , model : "Galaxy Tab 7.7\"" , } , Model { regex : "(?:SAMSUNG-)?GT-P7100" , model : "Galaxy Tab 10.1v" , } , Model { regex : "(?:SAMSUNG-)?GT-P75[01]0" , model : "Galaxy Tab 10.1\"" , } , Model { regex : "(?:SAMSUNG-)?SM-P600" , model : "Galaxy Note 10.1\" 2014 Edition WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-P60[12]" , model : "Galaxy Note 10.1\" 2014 Edition" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:P605|P607T)" , model : "Galaxy Note 10.1\" 2014 Edition LTE" , } , Model { regex : "(?:SAMSUNG-)?SM-P900" , model : "Galaxy NotePRO 12.2\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-P901" , model : "Galaxy NotePRO 12.2\"" , } , Model { regex : "(?:SAMSUNG-)?SM-P905" , model : "Galaxy NotePRO 12.2\" LTE" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:P587|P588C)(?:[);/ ]|$)" , model : "Galaxy Tab A 10.1\" with S Pen (2016) LTE" , } , Model { regex : "(?:SAMSUNG-)?SM-P583(?:[);/ ]|$)" , model : "Galaxy Tab A 10.1\" with S Pen (2016) WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-P205(?:[);/ ]|$)" , model : "Galaxy Tab A 8.0\" with S Pen (2019) LTE" , } , Model { regex : "(?:SAMSUNG-)?SM-P200(?:[);/ ]|$)" , model : "Galaxy Tab A 8.0\" with S Pen (2019) WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-T307U(?:[);/ ]|$)" , model : "Galaxy Tab A 8.4\" (2020) LTE" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:T505[CN]?|T507)(?:[);/ ]|$)" , model : "Galaxy Tab A7 10.4\" (2020) LTE" , } , Model { regex : "(?:SAMSUNG-)?SM-T500(?:[);/ ]|$)" , model : "Galaxy Tab A7 10.4\" (2020) WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-T11[03]" , model : "Galaxy Tab 3 Lite 7.0\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:T830[X]?|T837R4)(?:[);/ ]|$)" , model : "Galaxy Tab S4 10.5\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-T837P(?:[);/ ]|$)" , model : "Galaxy Tab S4 10.5\" with S Pen" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:T835[CN]?|T837[VTA]?)(?:[);/ ]|$)" , model : "Galaxy Tab S4 10.5\"" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:T725[CN]?|T720X|T727(?:R4|[AUV])?)(?:[);/ ]|$)" , model : "Galaxy Tab S5e 10.5\"" , } , Model { regex : "(?:SAMSUNG-)?SM-T720(?:[);/ ]|$)" , model : "Galaxy Tab S5e 10.5\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-T865N?(?:[);/ ]|$)" , model : "Galaxy Tab S6 10.5\"" , } , Model { regex : "(?:SAMSUNG-)?SM-T867(?:R4|[VU])?(?:[);/ ]|$)" , model : "Galaxy Tab S6 10.5\" LTE" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:P615[CN]?|P617)(?:[);/ ]|$)" , model : "Galaxy Tab S6 Lite 10.4\"" , } , Model { regex : "(?:SAMSUNG-)?SM-P610X?(?:[);/ ]|$)" , model : "Galaxy Tab S6 Lite 10.4\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-T860(?:[);/ ]|$)" , model : "Galaxy Tab S6 10.5\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-T866N(?:[);/ ]|$)" , model : "Galaxy Tab S6 10.5\" 5G" , } , Model { regex : "(?:SAMSUNG-)?SM-T111[M]?(?:[);/ ]|$)" , model : "Galaxy Tab 3 Lite 7.0\"" , } , Model { regex : "(?:SAMSUNG-)?SM-T116(?:BU|NU|NY)?" , model : "Galaxy Tab 3 V" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:T2105|T212)" , model : "Galaxy Tab 3 7.0\" Kids" , } , Model { regex : "(?:SAMSUNG-)?SM-T210R?" , model : "Galaxy Tab 3 7.0\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-T21(?:[15]|7[AS])" , model : "Galaxy Tab 3 7.0\"" , } , Model { regex : "(?:SAMSUNG-)?SM-T230(?:NU)?" , model : "Galaxy Tab 4 7.0\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-T23[15]|403SC" , model : "Galaxy Tab 4 7.0\" 3G" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:T239|T237[PV])" , model : "Galaxy Tab 4 7.0\" LTE" , } , Model { regex : "(?:SAMSUNG-)?SM-T232(?:[);/ ]|$)" , model : "Galaxy Tab 4 7.0\" WiFi + 3G" , } , Model { regex : "(?:SAMSUNG-)?SM-T310" , model : "Galaxy Tab 3 8.0\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-T311" , model : "Galaxy Tab 3 8.0\"" , } , Model { regex : "(?:SAMSUNG-)?SM-T315" , model : "Galaxy Tab 3 8.0\" LTE" , } , Model { regex : "(?:SAMSUNG-)?SM-T330" , model : "Galaxy Tab 4 8.0\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:T33[215]|T337[AVT])" , model : "Galaxy Tab 4 8.0\" LTE" , } , Model { regex : "(?:SAMSUNG-)?SM-T520" , model : "Galaxy TabPRO 10.1\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:T53[15]|T537[AV])" , model : "Galaxy Tab 4 10.1\" LTE" , } , Model { regex : "(?:SAMSUNG-)?SM-T536(?:[);/ ]|$)" , model : "Galaxy Tab 4 10.1\" Advanced" , } , Model { regex : "(?:SAMSUNG-)?SM-T532(?:[);/ ]|$)" , model : "Galaxy Tab 4 10.1\"" , } , Model { regex : "(?:SAMSUNG-)?SM-T320" , model : "Galaxy TabPRO 8.4\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-T325" , model : "Galaxy TabPRO 8.4\" LTE" , } , Model { regex : "(?:SAMSUNG-)?SM-T525" , model : "Galaxy TabPRO 10.1\" LTE" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:T530(?:NU)?|T533)" , model : "Galaxy Tab 4 10.1\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-T700" , model : "Galaxy Tab S 8.4\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:T705|T707[AV])" , model : "Galaxy Tab S 8.4\" LTE" , } , Model { regex : "(?:SAMSUNG-)?SM-T800" , model : "Galaxy Tab S 10.5\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?(?:SM-(?:T805|T807[PV]?)|SCT21)" , model : "Galaxy Tab S 10.5\" LTE" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:T813|T810)" , model : "Galaxy Tab S2 9.7\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:T719[CY]?|T715(?:N0|[CY])?)(?:[);/ ]|$)" , model : "Galaxy Tab S2 8.0\" LTE" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:T71[03]|T710X)(?:[);/ ]|$)" , model : "Galaxy Tab S2 8.0\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:T815|T817[ATW]?|T818[ATVW]?|T819[Y]?)" , model : "Galaxy Tab S2 9.7\" LTE" , } , Model { regex : "(?:SAMSUNG-)?SM-T820" , model : "Galaxy Tab S3 9.7\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-T82[57]" , model : "Galaxy Tab S3 9.7\" LTE" , } , Model { regex : "(?:SAMSUNG-)?SM-T975N?(?:[);/ ]|$)" , model : "Galaxy Tab S7+ 12.4\" LTE" , } , Model { regex : "(?:SAMSUNG-)?SM-T970(?:[);/ ]|$)" , model : "Galaxy Tab S7+ 12.4\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:T976[BN]|T978U)(?:[);/ ]|$)" , model : "Galaxy Tab S7+ 12.4\" 5G" , } , Model { regex : "(?:SAMSUNG-)?SM-T870(?:[);/ ]|$)" , model : "Galaxy Tab S7 11.0\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-T875N?(?:[);/ ]|$)" , model : "Galaxy Tab S7 11.0\" LTE" , } , Model { regex : "(?:SAMSUNG-)?SM-T878U(?:[);/ ]|$)" , model : "Galaxy Tab S7 11.0\" 5G" , } , Model { regex : "(?:SAMSUNG-)?SM-T900" , model : "Galaxy TabPRO 12.2\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-T280" , model : "Galaxy Tab A 7.0\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-T285" , model : "Galaxy Tab A 7.0\" LTE" , } , Model { regex : "(?:SAMSUNG-)?SM-T3[58]0" , model : "Galaxy Tab A 8.0\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:P350|T3[58]5|T357[TW])" , model : "Galaxy Tab A 8.0\" LTE" , } , Model { regex : "(?:SAMSUNG-)?SM-T387(?:AA|R4|VK|[TVW])" , model : "Galaxy Tab A 8.0\" LTE (2018)" , } , Model { regex : "(?:SAMSUNG-)?SM-T295" , model : "Galaxy Tab A 8.0\" LTE (2019)" , } , Model { regex : "(?:SAMSUNG-)?SM-T290" , model : "Galaxy Tab A 8.0\" WiFi (2019)" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:P355([MY])?|T550)" , model : "Galaxy Tab A 9.7\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:P550|P555(M)?|T555)" , model : "Galaxy Tab A 9.7\" LTE" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:T58[05]|P58[05])" , model : "Galaxy Tab A 10.1\" WiFi (2016)" , } , Model { regex : "(?:SAMSUNG-)?SM-T587[P]?" , model : "Galaxy Tab A 10.1\" LTE (2016)" , } , Model { regex : "(?:SAMSUNG-)?SM-T59[057]" , model : "Galaxy Tab A 10.5\" LTE (2018)" , } , Model { regex : "(?:SAMSUNG-)?SM-T51(?:7P|[057])" , model : "Galaxy Tab A 10.1\" (2019)" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:T37[57]|T378[KLSV])" , model : "Galaxy Tab E 8.0\"" , } , Model { regex : "(?:SAMSUNG-)?SM-T56[02]" , model : "Galaxy Tab E 9.6\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-T561" , model : "Galaxy Tab E 9.6\" 3G" , } , Model { regex : "(?:SAMSUNG-)?SM-T567V" , model : "Galaxy Tab E 9.6\" 4G" , } , Model { regex : "(?:SAMSUNG-)?SM-T365(?:F0|[MY])?(?:[);/ ]|$)" , model : "Galaxy Tab Active 8.0\"" , } , Model { regex : "(?:SAMSUNG-)?SM-T360(?:[);/ ]|$)" , model : "Galaxy Tab Active 8.0\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:T395[CN]?|T397U)(?:[);/ ]|$)" , model : "Galaxy Tab Active 2 8.0\"" , } , Model { regex : "(?:SAMSUNG-)?SM-T390(?:[);/ ]|$)" , model : "Galaxy Tab Active 2 8.0\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:T575N?|T577U?)(?:[);/ ]|$)" , model : "Galaxy Tab Active 3 8.0\"" , } , Model { regex : "(?:SAMSUNG-)?SM-T570(?:[);/ ]|$)" , model : "Galaxy Tab Active 3 8.0\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:T545|T547U?)(?:[);/ ]|$)" , model : "Galaxy Tab Active Pro 10.1\"" , } , Model { regex : "(?:SAMSUNG-)?SM-T540(?:[);/ ]|$)" , model : "Galaxy Tab Active Pro 10.1\" WiFi" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:P902|P907A)(?:[);/ ]|$)" , model : "Galaxy Note Pro 12.2\"" , } , Model { regex : "(?:SAMSUNG[- ])?SM-T2519" , model : "Galaxy Tab Q" , } , Model { regex : "(?:SAMSUNG )?SM-R820" , model : "Galaxy Watch Active 2" , } , Model { regex : "(?:SAMSUNG-)?SM-G850(?:8S|[AFKLMSWXY])" , model : "Galaxy Alpha" , } , Model { regex : "(?:SAMSUNG-)?GT-B5330" , model : "Galaxy Chat" , } , Model { regex : "(?:SAMSUNG-)?SM-A605K" , model : "Galaxy Jean" , } , Model { regex : "(?:SAMSUNG-)?SM-A202K" , model : "Galaxy Jean 2" , } , Model { regex : "(?:SAMSUNG-)?GT-B5510" , model : "Galaxy Y Pro" , } , Model { regex : "(?:SAMSUNG-)?GT-B5512" , model : "Galaxy Y Pro Duos" , } , Model { regex : "(?:SAMSUNG-)?GT-B7510" , model : "Galaxy Pro" , } , Model { regex : "(?:SAMSUNG-)?GT-I5700" , model : "Galaxy Spica" , } , Model { regex : "(?:SAMSUNG-)?GT-I5801" , model : "Galaxy Apollo" , } , Model { regex : "(?:SAMSUNG-)?GT-I5800" , model : "Galaxy 3" , } , Model { regex : "(?:SAMSUNG-)?GT-I8000" , model : "Omnia II" , } , Model { regex : "(?:SAMSUNG-)?(?:GT-I8150|SM-T255S)" , model : "Galaxy W" , } , Model { regex : "SC-01H(?:[);/ ]|$)" , model : "Galaxy Active Neo" , } , Model { regex : "(?:SAMSUNG-)?GT-S5830" , model : "Galaxy Ace" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:G357(?:FZ|M)|G310HN)" , model : "Galaxy Ace Style" , } , Model { regex : "(?:SAMSUNG-)?GT-I8160" , model : "Galaxy Ace 2" , } , Model { regex : "(?:SAMSUNG-)?SM-G313(?:HY|M[LUY]|[FM])" , model : "Galaxy Ace 4" , } , Model { regex : "(?:SAMSUNG-)?SM-G316M" , model : "Galaxy Ace 4 Duos" , } , Model { regex : "(?:SAMSUNG-)?SM-G313[HU]" , model : "Galaxy Ace 4 Lite" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:G316U|G318(?:H|ML))(?:[);/ ]|$)" , model : "Galaxy Ace 4 Neo" , } , Model { regex : "(?:SAMSUNG-)?SM-G9100(?:[);/ ]|$)" , model : "Galaxy S II" , } , Model { regex : "(?:SAMSUNG-)?SHV-E120S(?:[);/ ]|$)" , model : "Galaxy S II HD LTE" , } , Model { regex : "(?:SAMSUNG-)?GT-I8190" , model : "Galaxy S III mini" , } , Model { regex : "(?:SAMSUNG-)?GT-I8200" , model : "Galaxy S III mini Value Edition" , } , Model { regex : "(?:SAMSUNG-)?GT-I826[02]" , model : "Galaxy Core" , } , Model { regex : "(?:SAMSUNG-)?SM-G386W" , model : "Galaxy Core LTE" , } , Model { regex : "(?:SAMSUNG-)?SM-G3589W" , model : "Galaxy Core Lite LTE" , } , Model { regex : "(?:SAMSUNG-)?GT-I8320" , model : "H1" , } , Model { regex : "(?:SAMSUNG-)?GT-I85[23]0" , model : "Galaxy Beam" , } , Model { regex : "(?:SAMSUNG-)?SM-G3858" , model : "Galaxy Beam 2" , } , Model { regex : "(?:SAMSUNG-)?SM-G600S" , model : "Galaxy Wide" , } , Model { regex : "(?:SAMSUNG-)?GT-I855[028]" , model : "Galaxy Win" , } , Model { regex : "(?:SAMSUNG-)?SM-G381[28]" , model : "Galaxy Win Pro" , } , Model { regex : "(?:SAMSUNG-)?GT-I8580" , model : "Galaxy Core Advance" , } , Model { regex : "(?:SAMSUNG-)?GT-I8730" , model : "Galaxy Express" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:E500(?:HQ|YZ|[0FHM])|S978L)" , model : "Galaxy E5" , } , Model { regex : "(?:SAMSUNG-)?SM-E700[09FHM]" , model : "Galaxy E7" , } , Model { regex : "(?:SAMSUNG-)?GT-I90(?:00|08|18|88)" , model : "Galaxy S" , } , Model { regex : "(?:SAMSUNG-)?GT-I9001" , model : "Galaxy S Plus" , } , Model { regex : "(?:SAMSUNG-)?GT-I9003" , model : "Galaxy SL" , } , Model { regex : "(?:SAMSUNG-)?GT-I9010" , model : "Galaxy S Giorgio Armani" , } , Model { regex : "(?:SAMSUNG-)?GT-I9070" , model : "Galaxy S Advance" , } , Model { regex : "(?:SAMSUNG-)?GT-I910[08]" , model : "Galaxy S II" , } , Model { regex : "(?:SAMSUNG-)?ISW11SC" , model : "Galaxy S II WiMAX" , } , Model { regex : "(?:SAMSUNG-)?GT-I9103" , model : "Galaxy R" , } , Model { regex : "(?:SAMSUNG-)?GT-I9105" , model : "Galaxy S II Plus" , } , Model { regex : "(?:SAMSUNG-)?SM-G730(?:W8|[AV])" , model : "Galaxy S3 mini" , } , Model { regex : "(?:SAMSUNG-)?(?:GT-I919[025]|SCH-I435)" , model : "Galaxy S4 mini" , } , Model { regex : "(?:SAMSUNG-)?GT-I9515" , model : "Galaxy S4 Value Edition" , } , Model { regex : "(?:SAMSUNG-)?GT-I9295" , model : "Galaxy S4 ACTIVE" , } , Model { regex : "(?:SAMSUNG-)?(?:GT-I9300|SCH-(?:I535|I939|L710))" , model : "Galaxy S III" , } , Model { regex : "(?:SAMSUNG-)?(?:GT-I9305|SCH-R530)" , model : "Galaxy S III LTE" , } , Model { regex : "(?:SAMSUNG-)?(?:SM-S975L|GT-I950[025]|SC-04E|SCH-(?:I545|I959|R970)|SGH-M919N?|Galaxy-S4)" , model : "Galaxy S4" , } , Model { regex : "(?:SAMSUNG-)?GT-I9506" , model : "Galaxy S4 with LTE+" , } , Model { regex : "(?:SAMSUNG-)?GT-S5280" , model : "Galaxy STAR" , } , Model { regex : "(?:SAMSUNG-)?GT-S5301" , model : "Galaxy POCKET Plus" , } , Model { regex : "(?:SAMSUNG-)?GT-S5310" , model : "Galaxy POCKET Neo" , } , Model { regex : "(?:SAMSUNG-)?SM-G110[BHM]" , model : "Galaxy POCKET 2" , } , Model { regex : "(?:SAMSUNG-)?GT-S5360" , model : "Galaxy Y Hello Kitty" , } , Model { regex : "(?:SAMSUNG-)?GT-S6310" , model : "Galaxy Young" , } , Model { regex : "(?:SAMSUNG-)?GT-S6312" , model : "Galaxy Young DUOS" , } , Model { regex : "(?:SAMSUNG-)?SM-G130(?:BT|HN|[EHMU])" , model : "Galaxy Young 2" , } , Model { regex : "(?:SAMSUNG-)?SM-G130BU" , model : "Galaxy Young 2 Pro" , } , Model { regex : "(?:SAMSUNG-)?GT-S6790" , model : "Galaxy FAME Lite with NFC" , } , Model { regex : "(?:SAMSUNG-)?GT-S6810" , model : "Galaxy FAME" , } , Model { regex : "(?:SAMSUNG-)?GT-S6812" , model : "Galaxy FAME Duos" , } , Model { regex : "SC-04J(?:[);/ ]|$)" , model : "Galaxy Feel" , } , Model { regex : "SC-02L(?:[);/ ]|$)" , model : "Galaxy Feel 2" , } , Model { regex : "(?:SAMSUNG-)?GT-S7275" , model : "Galaxy ACE 3" , } , Model { regex : "(?:SAMSUNG-)?GT-S7500" , model : "Galaxy ACE Plus" , } , Model { regex : "(?:SAMSUNG-)?(?:GT-S7560|SCH-I699)" , model : "Galaxy Trend" , } , Model { regex : "(?:SAMSUNG-)?GT-S7390" , model : "Galaxy Trend Lite" , } , Model { regex : "(?:SAMSUNG-)?GT-S7580" , model : "Galaxy Trend Plus" , } , Model { regex : "(?:SAMSUNG-)?SCH-I739" , model : "Galaxy Trend 2" , } , Model { regex : "(?:SAMSUNG-)?(?:GT-S7562|SCH-I919)" , model : "Galaxy S DUOS" , } , Model { regex : "(?:SAMSUNG-)?GT-S7582" , model : "Galaxy S DUOS 2" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:G31[36]HU|G313HZ)" , model : "Galaxy S DUOS 3" , } , Model { regex : "(?:SAMSUNG-)?GT-S7710" , model : "Galaxy Xcover 2" , } , Model { regex : "(?:SAMSUNG-)?SM-G388F" , model : "Galaxy Xcover 3" , } , Model { regex : "(?:SAMSUNG-)?SM-G389F" , model : "Galaxy Xcover 3 VE" , } , Model { regex : "(?:SAMSUNG-)?SM-G390[FWY]" , model : "Galaxy Xcover 4" , } , Model { regex : "(?:SAMSUNG-)?SM-G398FN" , model : "Galaxy Xcover 4s" , } , Model { regex : "(?:SAMSUNG-)?SM-G715(?:FN|U1|[AUW])" , model : "Galaxy Xcover Pro" , } , Model { regex : "(?:SAMSUNG-)?SM-G889(?:YB|[AFG])" , model : "Galaxy Xcover FieldPro" , } , Model { regex : "(?:SAMSUNG-)?GT-S8500" , model : "Wave" , } , Model { regex : "(?:SAMSUNG-)?GT-S8530" , model : "Wave II" , } , Model { regex : "(?:SAMSUNG-)?GT-S8600" , model : "Wave 3" , } , Model { regex : "(?:SAMSUNG-)?GT-S5380" , model : "Wave Y" , } , Model { regex : "(?:SAMSUNG-)?GT-S7250" , model : "Wave M" , } , Model { regex : "(?:SAMSUNG-)?GT-S5250" , model : "Wave 525" , } , Model { regex : "(?:SAMSUNG-)?GT-S5330" , model : "Wave 533" , } , Model { regex : "(?:SAMSUNG-)?GT-S5780" , model : "Wave 578" , } , Model { regex : "(?:SAMSUNG-)?GT-S7230" , model : "Wave 723" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:C101|C105([AL])?)" , model : "Galaxy S4 zoom" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:C111(M)?|C115)" , model : "Galaxy K zoom" , } , Model { regex : "(?:SAMSUNG-)?SM-G318[HM]Z" , model : "Galaxy V Plus" , } , Model { regex : "(?:SAMSUNG-)?SM-G355(?:6D|[89HM])" , model : "Galaxy Core 2" , } , Model { regex : "(?:SAMSUNG-)?SM-G350" , model : "Galaxy Core Plus" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:G360[FH]?|S820L)" , model : "Galaxy Core Prime" , } , Model { regex : "(?:SAMSUNG-)?SM-G361[FH]?" , model : "Galaxy Core Prime Value Edition" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:G386F|G3518(?:_TD)?|G3586V)" , model : "Galaxy Core LTE" , } , Model { regex : "(?:SAMSUNG-)?SM-G3568V" , model : "Galaxy Core Mini 4G" , } , Model { regex : "(?:SAMSUNG-)?SM-G5108Q?" , model : "Galaxy Core Max" , } , Model { regex : "(?:SAMSUNG-)?SM-G3815" , model : "Galaxy EXPRESS II" , } , Model { regex : "(?:SAMSUNG-)?SM-G800" , model : "Galaxy S5 mini" , } , Model { regex : "(?:SAMSUNG-)?SM-G9009D" , model : "Galaxy S5 Dual-SIM" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:G900|G906[KLS]|S902L|S903VL)|Galaxy-S5|SCL23" , model : "Galaxy S5" , } , Model { regex : "(?:SAMSUNG-)?SM-G901F" , model : "Galaxy S5 LTE+" , } , Model { regex : "(?:SAMSUNG-)?SM-G870[AFW]|SC-02G" , model : "Galaxy S5 Active" , } , Model { regex : "(?:SAMSUNG-)?SM-G903[FMW]" , model : "Galaxy S5 Neo" , } , Model { regex : "(?:SAMSUNG-)?SM-G860P" , model : "Galaxy S5 K Sport" , } , Model { regex : "(?:SAMSUNG-)?(?:SM-G920(?:F[DQ]|W8|[089AFIKLPRSTVX])?|SM-S906L|SM-S907VL)|SC-05G" , model : "Galaxy S6" , } , Model { regex : "(?:SAMSUNG-)?SM-G890A" , model : "Galaxy S5 Active" , } , Model { regex : "(?:SAMSUNG-)?SM-G925[0ADFIKLPRSTVWX]|SCV31|404SC" , model : "Galaxy S6 Edge" , } , Model { regex : "(?:SAMSUNG-)?SM-G928(?:7C|N0|R4|W8|[07ACFGIKLPSTVX])" , model : "Galaxy S6 Edge+" , } , Model { regex : "(?:SAMSUNG-)?SM-G930(?:AZ|FD|R[467]|T1|V[CL]|W8|[0AFKLPRSTUVX8])?(?:[);/ ]|$)" , model : "Galaxy S7" , } , Model { regex : "(?:SAMSUNG-)?SM-G935(?:R4|W8|[0AFKLPSTUVX])|SC-02H|SCV33" , model : "Galaxy S7 Edge" , } , Model { regex : "(?:SAMSUNG-)?SM-G891A" , model : "Galaxy S7 Active" , } , Model { regex : "(?:SAMSUNG-)?SM-G950[08FNUW]?|SCV36|SC-02J" , model : "Galaxy S8" , } , Model { regex : "(?:SAMSUNG-)?SM-G8750" , model : "Galaxy S8 Lite" , } , Model { regex : "(?:SAMSUNG-)?SM-G892[AU]" , model : "Galaxy S8 Active" , } , Model { regex : "(?:SAMSUNG-)?SM-G955[0AFKLNPRTUVWX]?|SCV35|SC-03J" , model : "Galaxy S8+" , } , Model { regex : "(?:SAMSUNG-)?SM-G960[0FNUWX]?|SCV38|SC-02K" , model : "Galaxy S9" , } , Model { regex : "(?:SAMSUNG-)?SM-G965[0FNUWX]|SCV39|SC-03K" , model : "Galaxy S9+" , } , Model { regex : "(?:SAMSUNG-)?(?:SM-(?:G973|G977[BNPTU])|SCV41|SC-03L)" , model : "Galaxy S10" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:S10 Lite|G770(?:U1|F))" , model : "Galaxy S10 Lite" , } , Model { regex : "(?:SAMSUNG-)?(?:SM-G975[08FUNWX]|SCV42|SC-04L)" , model : "Galaxy S10+" , } , Model { regex : "SC-05L" , model : "Galaxy S10+ Olympic Games Edition" , } , Model { regex : "(?:SAMSUNG-)?SM-G970(?:U1|[08FUNWX])(?:[);/ ]|$)" , model : "Galaxy S10e" , } , Model { regex : "(?:SAMSUNG-)?SM-G980F" , model : "Galaxy S20" , } , Model { regex : "(?:SAMSUNG-)?SM-G981(?:U1|[0BNUVW])|SCG01|SC-51A|SC51Aa" , model : "Galaxy S20 5G" , } , Model { regex : "(?:SAMSUNG-)?SM-G780F" , model : "Galaxy S20 FE" , } , Model { regex : "(?:SAMSUNG-)?SM-G781(?:U1|[0BNUVW])" , model : "Galaxy S20 FE 5G" , } , Model { regex : "(?:SAMSUNG-)?SM-G988(?:U1|[0BNQUW])|SCG03" , model : "Galaxy S20 Ultra 5G" , } , Model { regex : "(?:SAMSUNG-)?SM-G985F|SCG02" , model : "Galaxy S20+" , } , Model { regex : "(?:SAMSUNG-)?SM-G986(?:U1|[0BNUW])|SC-52A" , model : "Galaxy S20+ 5G" , } , Model { regex : "(?:SAMSUNG-)?SM-G991(?:U1|[0BNW])|SCG09" , model : "Galaxy S21 5G" , } , Model { regex : "(?:SAMSUNG-)?SM-G998(?:U1|[0BNUW])" , model : "Galaxy S21 Ultra 5G" , } , Model { regex : "(?:SAMSUNG-)?SM-G996(?:U1|[0BNWU])|SCG10" , model : "Galaxy S21+ 5G" , } , Model { regex : "(?:SAMSUNG-)?SM-F700(?:U1|[0FNUW])|SCV47" , model : "Galaxy Z Flip" , } , Model { regex : "(?:SAMSUNG-)?SM-F707(?:U1|[0BNUW])|SCG04" , model : "Galaxy Z Flip 5G" , } , Model { regex : "(?:SAMSUNG-)?SCH-I200" , model : "Galaxy Stellar" , } , Model { regex : "(?:SAMSUNG-)?SCH-I829" , model : "Galaxy Style Duos" , } , Model { regex : "(?:SAMSUNG-)?(?:SCH-R740|SGH-S730)" , model : "Galaxy Discover" , } , Model { regex : "(?:SAMSUNG-)?SCH-S738" , model : "Galaxy Centura" , } , Model { regex : "vollo Vi86(?:[);/ ]|$)" , model : "Vollo Vi86" , } , Model { regex : "(?:SAMSUNG-)?SM-G386(?:T1|T)" , model : "Galaxy Avant" , } , Model { regex : "(?:SAMSUNG-)?SM-A716S" , model : "Galaxy A Quantum" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:A015(?:DL|[TU]1|[AFGMUV])|S111DL)" , model : "Galaxy A01" , } , Model { regex : "(?:SAMSUNG-)?SM-A013[FGM]" , model : "Galaxy A01 Core" , } , Model { regex : "(?:SAMSUNG-)?SM-A025[FGM]" , model : "Galaxy A02s" , } , Model { regex : "(?:SAMSUNG-)?SM-A022G" , model : "Galaxy A02" , } , Model { regex : "(?:SAMSUNG-)?SM-A260[FG]" , model : "Galaxy A2 Core" , } , Model { regex : "(?:SAMSUNG-)?SM-A300(?:FU|YZ|XU|XZ|[09FGHMXY])" , model : "Galaxy A3 (2015)" , } , Model { regex : "(?:SAMSUNG-)?SM-A310(?:N0|[FMXY])" , model : "Galaxy A3 (2016)" , } , Model { regex : "(?:SAMSUNG-)?SM-A320(?:FL|[FXY])" , model : "Galaxy A3 (2017)" , } , Model { regex : "(?:SAMSUNG-)?SM-A430F" , model : "Galaxy A4" , } , Model { regex : "(?:SAMSUNG-)?SM-A500(?:YZ|[9LSWY])?(?:[);/ ]|$)" , model : "Galaxy A5" , } , Model { regex : "(?:SAMSUNG-)?SM-A500[0FGHKM]" , model : "Galaxy A5 Duos" , } , Model { regex : "(?:SAMSUNG-)?SM-A500(?:FU|X)" , model : "Galaxy A5 (2015)" , } , Model { regex : "(?:SAMSUNG-)?SM-A510[08FKLMSXY]" , model : "Galaxy A5 (2016)" , } , Model { regex : "(?:SAMSUNG-)?SM-A520[FKLSWX]" , model : "Galaxy A5 (2017)" , } , Model { regex : "(?:SAMSUNG-)?SM-A525F" , model : "Galaxy A52" , } , Model { regex : "(?:SAMSUNG-)?SM-A600(?:AZ|FN|GN|T1|[AFGNPTUX])" , model : "Galaxy A6" , } , Model { regex : "(?:SAMSUNG-)?SM-A605(?:[FG]N|[08FGX])" , model : "Galaxy A6+" , } , Model { regex : "(?:SAMSUNG-)?SM-G6200" , model : "Galaxy A6s (2018)" , } , Model { regex : "(?:SAMSUNG-)?SM-A606[0Y]" , model : "Galaxy A60" , } , Model { regex : "(?:SAMSUNG-)?SM-A700(?:YD|[09FHKLSX])" , model : "Galaxy A7" , } , Model { regex : "(?:SAMSUNG-)?SM-A710[08FKLMSXY]" , model : "Galaxy A7 (2016)" , } , Model { regex : "(?:SAMSUNG-)?SM-A720[FMSX]" , model : "Galaxy A7 (2017)" , } , Model { regex : "(?:SAMSUNG-)?SM-A750(?:GN|[CFGNX])" , model : "Galaxy A7 (2018)" , } , Model { regex : "(?:SAMSUNG-)?SM-A71(?:5[FW])?(?:[);/ ]|$)" , model : "Galaxy A71" , } , Model { regex : "(?:SAMSUNG-)?SM-A725F(?:[);/ ]|$)" , model : "Galaxy A72" , } , Model { regex : "(?:SAMSUNG-)?SM-A716(?:U1|[0BUV])(?:[);/ ]|$)" , model : "Galaxy A71 5G" , } , Model { regex : "(?:SAMSUNG-)?SM-A(?:530F|800[0FISXY])|SCV32" , model : "Galaxy A8" , } , Model { regex : "(?:SAMSUNG-)?SM-G885[FSY]" , model : "Galaxy A8 Star" , } , Model { regex : "(?:SAMSUNG-)?SM-A810(?:YZ|[FS])" , model : "Galaxy A8 (2016)" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:A8s|G887[0F])" , model : "Galaxy A8s" , } , Model { regex : "(?:SAMSUNG-)?SM-A530[MNWX]" , model : "Galaxy A8 (2018)" , } , Model { regex : "(?:SAMSUNG-)?SM-A730[FX]" , model : "Galaxy A8+ (2018)" , } , Model { regex : "(?:SAMSUNG-)?SM-A900[0F]" , model : "Galaxy A9" , } , Model { regex : "SM-A9\\[7\\]" , model : "Galaxy A9 7" , } , Model { regex : "(?:SAMSUNG-)?SM-A920[0FXN]" , model : "Galaxy A9 (2018)" , } , Model { regex : "(?:SAMSUNG-)?SM-G885[08]" , model : "Galaxy A9 Star" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:A9 Pro|A910[0F]|G887N)" , model : "Galaxy A9 Pro" , } , Model { regex : "(?:SAMSUNG-)?SM-A105[FGMN]" , model : "Galaxy A10" , } , Model { regex : "(?:SAMSUNG-)?SM-A107[FM]" , model : "Galaxy A10s" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:S102DL|A102[NUW])" , model : "Galaxy A10e" , } , Model { regex : "(?:SAMSUNG-)?SM-A115(?:A[PZ]|U1|[AFMUW])" , model : "Galaxy A11" , } , Model { regex : "(?:SAMSUNG-)?SM-A125[FM]" , model : "Galaxy A12" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:A205(?:U1|YN|[FGSWU])|S205DL)|SC-02M|SCV46" , model : "Galaxy A20" , } , Model { regex : "(?:SAMSUNG-)?(?:SM-A215(?:DL|U1|[UW])|SC-42A|SCV49)(?:[);/ ]|$)" , model : "Galaxy A21" , } , Model { regex : "(?:SAMSUNG-)?SM-A217[FMN](?:[);/ ]|$)" , model : "Galaxy A21s" , } , Model { regex : "(?:SAMSUNG-)?SM-A202[FG]" , model : "Galaxy A20e" , } , Model { regex : "(?:SAMSUNG-)?SM-A207[0FM]" , model : "Galaxy A20s" , } , Model { regex : "(?:SAMSUNG-)?(?:SM-A305(?:[FGY]N|GT|[FGN])|SCV43)" , model : "Galaxy A30" , } , Model { regex : "(?:SAMSUNG-)?SM-A307(?:FN|GN|GT|[FG])" , model : "Galaxy A30s" , } , Model { regex : "(?:SAMSUNG-)?SM-A315[FGN](?:[);/ ]|$)" , model : "Galaxy A31" , } , Model { regex : "(?:SAMSUNG-)?SM-A325F(?:[);/ ]|$)" , model : "Galaxy A32" , } , Model { regex : "(?:SAMSUNG-)?(?:SM-A326(?:BR|B)|SCG08)" , model : "Galaxy A32 5G" , } , Model { regex : "(?:SAMSUNG-)?SM-A405(?:F[NM]|S)" , model : "Galaxy A40" , } , Model { regex : "(?:SAMSUNG-)?SM-A305[018](?:[);/ ]|$)" , model : "Galaxy A40s" , } , Model { regex : "(?:SAMSUNG-)?(?:SM-A415F|SC-41A|SCV48)(?:[);/ ]|$)" , model : "Galaxy A41" , } , Model { regex : "(?:SAMSUNG-)?SM-A426[0BN](?:[);/ ]|$)" , model : "Galaxy A42 5G" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:A505(?:F[GN]|U1|YN|[FGNUWX])|S506DL|505FN)" , model : "Galaxy A50" , } , Model { regex : "(?:SAMSUNG-)?SM-A5070(?:[);/ ]|$)" , model : "Galaxy A50s" , } , Model { regex : "(?:SAMSUNG-)?SM-A507FN" , model : "Galaxy A50s" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:A515[FUW]|S515DL)" , model : "Galaxy A51" , } , Model { regex : "(?:SAMSUNG-)?(?:SM-A516(?:U1|[0BNUV])|SC-54A|SCG07)" , model : "Galaxy A51 5G" , } , Model { regex : "(?:SAMSUNG-)?SM-A705(?:GM|[MYF]N|[0FUWX])" , model : "Galaxy A70" , } , Model { regex : "(?:SAMSUNG-)?SM-A707[0F]" , model : "Galaxy A70s" , } , Model { regex : "(?:SAMSUNG-)?SM-A805[0FNX]" , model : "Galaxy A80" , } , Model { regex : "(?:SAMSUNG-)?SM-A908[BN]" , model : "Galaxy A90" , } , Model { regex : "(?:SAMSUNG-)?SM-A9080" , model : "Galaxy A90 5G" , } , Model { regex : "(?:SAMSUNG-)?SM-F127G(?:[);/ ]|$)" , model : "Galaxy F12" , } , Model { regex : "(?:SAMSUNG-)?SM-F415F(?:[);/ ]|$)" , model : "Galaxy F41" , } , Model { regex : "(?:SAMSUNG-)?GT-I9301I" , model : "Galaxy S III Neo" , } , Model { regex : "(?:SAMSUNG-)?SM-S120VL(?:[);/ ]|$)" , model : "Galaxy Luna" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:J100(?:FN|VPP|MU|[FGHMY])|S777C)" , model : "Galaxy J1" , } , Model { regex : "(?:SAMSUNG-)?SM-J105[BFHYM]" , model : "Galaxy J1 Mini" , } , Model { regex : "(?:SAMSUNG-)?SM-J106[BFHM]" , model : "Galaxy J1 mini Prime" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:J120(?:ZN|[AFGHMPTW])|J05H)" , model : "Galaxy J1 (2016)" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:J110[FGHLM]|J111[FM])" , model : "Galaxy J1 Ace" , } , Model { regex : "(?:SAMSUNG-)?SM-J200[FGHMY]" , model : "Galaxy J2" , } , Model { regex : "(?:SAMSUNG-)?SM-J200BT" , model : "Galaxy J2 Duos" , } , Model { regex : "(?:SAMSUNG-)?SM-J260AZ" , model : "Galaxy J2 Pure" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:J260([AFGMY]|T1)|S260DL)" , model : "Galaxy J2 Core" , } , Model { regex : "(?:SAMSUNG-)?SM-J(?:210F|250[FGMNY])" , model : "Galaxy J2 Pro" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:S367VL|S357BL)" , model : "Galaxy J3 Orbit" , } , Model { regex : "(?:SAMSUNG-)?SM-J311(?:[09]|9S)" , model : "Galaxy J3 Pro" , } , Model { regex : "(?:SAMSUNG-)?SM-S320VL(?:[);/ ]|$)" , model : "Galaxy J3 Sky" , } , Model { regex : "(?:SAMSUNG-)?SM-S327VL(?:[);/ ]|$)" , model : "Galaxy J3 Luna Pro" , } , Model { regex : "(?:SAMSUNG-)?SM-J327(?:T1|[ATW])(?:[);/ ]|$)" , model : "Galaxy J3 Prime" , } , Model { regex : "(?:SAMSUNG-)?SM-J327(?:[FP]|R4)" , model : "Galaxy J3 Emerge" , } , Model { regex : "(?:SAMSUNG-)?SM-J337R4(?:[);/ ]|$)" , model : "Galaxy J3 Aura" , } , Model { regex : "(?:SAMSUNG-)?SM-J337T(?:[);/ ]|$)" , model : "Galaxy J3 Star" , } , Model { regex : "(?:SAMSUNG-)?SM-J327V" , model : "Galaxy J3 Eclipse" , } , Model { regex : "(?:SAMSUNG-)?SM-S337TL" , model : "Galaxy J3 Luna Pro" , } , Model { regex : "(?:SAMSUNG-)?SM-J3109" , model : "Galaxy J3 (2015)" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:J300H|J320(?:[ZF]N|R4|W8|YZ|[AFGHMNPVY]))" , model : "Galaxy J3 (2016)" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:J330(?:FN|[08FGLN])|J327(?:R7|U))(?:[);/ ]|$)" , model : "Galaxy J3 (2017)" , } , Model { regex : "(?:SAMSUNG-)?SM-J337(?:VPP|[AWPUV])(?:[);/ ]|$)" , model : "Galaxy J3 (2018)" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:G400[FG]|J400[FGM])" , model : "Galaxy J4" , } , Model { regex : "(?:SAMSUNG-)?SM-J500(?:FN|N0|[78FGHMY])(?:[);/ ]|$)" , model : "Galaxy J5 (2015)" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:J510(?:[FGMU]N|FQ|[8FGHKLSY])|5108|G510H)(?:[);/ ]|$)" , model : "Galaxy J5 (2016)" , } , Model { regex : "(?:SAMSUNG-)?SM-J530" , model : "Galaxy J5 (2017)" , } , Model { regex : "(?:SAMSUNG-)?SM-G570[0FMY]" , model : "Galaxy J5 Prime" , } , Model { regex : "(?:SAMSUNG-)?SM-J600[FGLN]" , model : "Galaxy J6" , } , Model { regex : "(?:SAMSUNG-)?SM-J610[FG]" , model : "Galaxy J6+" , } , Model { regex : "(?:SAMSUNG-)?SM-J410[FG]" , model : "Galaxy J4 Core" , } , Model { regex : "(?:SAMSUNG-)?SM-J415(?:[FG]N|[FGN])" , model : "Galaxy J4+" , } , Model { regex : "(?:SAMSUNG-)?SM-J7[01]0(?:FN|MN|[8FHKM])" , model : "Galaxy J7" , } , Model { regex : "(?:SAMSUNG-)?SM-J700P" , model : "Galaxy J7 (2015)" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:J700(?:T1|T)|J710GN|J7109)" , model : "Galaxy J7 (2016)" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:J730[K]|J727(?:R4|[AFSU]))(?:[);/ ]|$)" , model : "Galaxy J7 (2017)" , } , Model { regex : "(?:SAMSUNG-)?SM-J737(?:R4|T1|VPP|[APSTUV])(?:[);/ ]|$)" , model : "Galaxy J7 (2018)" , } , Model { regex : "(?:SAMSUNG-)?SM-C710F" , model : "Galaxy J7+ (C7)" , } , Model { regex : "(?:SAMSUNG-)?SM-G610[FMY]" , model : "Galaxy J7 Prime" , } , Model { regex : "(?:SAMSUNG-)?SM-G611(?:FF|MT|M)" , model : "Galaxy J7 Prime 2" , } , Model { regex : "(?:SAMSUNG-)?SM-G615F" , model : "Galaxy J7 Max" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:S727VL|S737TL)" , model : "Galaxy J7 Sky Pro" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:J7 Pro|J730(?:GM|[FG]))" , model : "Galaxy J7 Pro" , } , Model { regex : "(?:SAMSUNG-)?SM-J701[FM]" , model : "Galaxy J7 Core" , } , Model { regex : "(?:SAMSUNG-)?SM-J720[FM]" , model : "Galaxy J7 Duo" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:S767VL|S757BL)" , model : "Galaxy J7 Crown" , } , Model { regex : "(?:SAMSUNG-)?SM-J727[PTV]" , model : "Galaxy J7 V" , } , Model { regex : "SM-J7\\[7\\]" , model : "Galaxy J7 7" , } , Model { regex : "(?:SAMSUNG-)?SM-J810" , model : "Galaxy J8" , } , Model { regex : "SM-J8 Plus" , model : "Galaxy J8 Plus" , } , Model { regex : "SM-J8 Pro" , model : "Galaxy J8 Pro" , } , Model { regex : "SM-J9\\[7\\] Prime" , model : "Galaxy J9 7 Prime" , } , Model { regex : "SM-J9\\[8\\] Pro" , model : "Galaxy J9 8 Pro" , } , Model { regex : "(?:SAMSUNG-)?SM-M015[FG]" , model : "Galaxy M01" , } , Model { regex : "(?:SAMSUNG-)?SM-M013F" , model : "Galaxy M01 Core" , } , Model { regex : "(?:SAMSUNG-)?SM-M017F" , model : "Galaxy M01s" , } , Model { regex : "(?:SAMSUNG-)?SM-M025F" , model : "Galaxy M02s" , } , Model { regex : "(?:SAMSUNG-)?SM-M105[FGMY]" , model : "Galaxy M10" , } , Model { regex : "(?:SAMSUNG-)?SM-M107F" , model : "Galaxy M10s" , } , Model { regex : "(?:SAMSUNG-)?SM-M115[FM]" , model : "Galaxy M11" , } , Model { regex : "(?:SAMSUNG-)?SM-M127[FG]" , model : "Galaxy M12" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:M205(?:[FGMN]|FN)|M20)(?:[);/ ]|$)" , model : "Galaxy M20" , } , Model { regex : "(?:SAMSUNG-)?SM-M215F" , model : "Galaxy M21" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:M307(?:FN|[0F])|M30s)" , model : "Galaxy M30s" , } , Model { regex : "(?:SAMSUNG-)?SM-M305?" , model : "Galaxy M30" , } , Model { regex : "(?:SAMSUNG-)?SM-M315F" , model : "Galaxy M31" , } , Model { regex : "(?:SAMSUNG-)?SM-M317F" , model : "Galaxy M31s" , } , Model { regex : "(?:SAMSUNG-)?SM-M405" , model : "Galaxy M40" , } , Model { regex : "(?:SAMSUNG-)?SM-M515F" , model : "Galaxy M51" , } , Model { regex : "(?:SAMSUNG-)?SM-W201([689])" , model : "Galaxy W201$1" , } , Model { regex : "(?:SAMSUNG-)?SM-W2015" , model : "Galaxy Golden 2" , } , Model { regex : "(?:SAMSUNG-)?SM-G910S" , model : "Galaxy Round" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:G550(?:FY|T[12]?)|S550TL|G55[01]0|G5520)" , model : "Galaxy On5" , } , Model { regex : "(?:SAMSUNG-)?SM-G5528" , model : "Galaxy On5 (2016)" , } , Model { regex : "(?:SAMSUNG-)?SM-G600(?:FY|[0F])" , model : "Galaxy On7" , } , Model { regex : "(?:SAMSUNG-)?SM-G610[0KLS]" , model : "Galaxy On7 (2016)" , } , Model { regex : "(?:SAMSUNG-)?SM-G611[FKLS]" , model : "Galaxy On7 Prime" , } , Model { regex : "(?:SAMSUNG-)?SM-C500[0X]" , model : "Galaxy C5" , } , Model { regex : "(?:SAMSUNG-)?SM-C501[08]" , model : "Galaxy C5 Pro" , } , Model { regex : "(?:SAMSUNG-)?SM-C700[0X]" , model : "Galaxy C7" , } , Model { regex : "(?:SAMSUNG-)?SM-C701[08FX]" , model : "Galaxy C7 Pro" , } , Model { regex : "(?:SAMSUNG-)?SM-C710[08]" , model : "Galaxy C8" , } , Model { regex : "(?:SAMSUNG-)?SM-C900[08FY]" , model : "Galaxy C9 Pro" , } , Model { regex : "(?:SAMSUNG-)?SM-Z130H" , model : "Galaxy Z1" , } , Model { regex : "(?:SAMSUNG-)?SM-Z200[FMY]" , model : "Galaxy Z2" , } , Model { regex : "(?:SAMSUNG-)?SM-Z300H" , model : "Galaxy Z3" , } , Model { regex : "(?:SAMSUNG-)?SM-Z400[FY]" , model : "Galaxy Z4" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:G150(?:N[0KLS])?|G155S)(?:[);/ ]|$)" , model : "Galaxy Folder" , } , Model { regex : "(?:SAMSUNG-)?(?:SM-G16(?:0N|[05]0?|5N))(?:[);/ ]|$)" , model : "Galaxy Folder 2" , } , Model { regex : "(?:SAMSUNG-)?SM-J321AZ(?:[);/ ]|$)" , model : "Galaxy Sol" , } , Model { regex : "(?:SAMSUNG-)?SM-J326AZ(?:[);/ ]|$)" , model : "Galaxy Sol 2" , } , Model { regex : "(?:SAMSUNG-)?SM-J336AZ(?:[);/ ]|$)" , model : "Galaxy Sol 3" , } , Model { regex : "(?:SAMSUNG-)?SM-J727AZ(?:[);/ ]|$)" , model : "Galaxy Halo" , } , Model { regex : "(?:SAMSUNG-)?SM-J327AZ" , model : "Galaxy Amp Prime 2" , } , Model { regex : "(?:SAMSUNG-)?SM-J337AZ" , model : "Galaxy Amp Prime 3 (2018)" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:F900[0FUW]|F907[BN])|SCV44" , model : "Galaxy Fold" , } , Model { regex : "(?:SAMSUNG-)?SM-F916(?:U1|[0BNQUW])|SCG05" , model : "Galaxy Z Fold 2 5G" , } , Model { regex : "(?:SAMSUNG-)?GT-I9060(?:[);/ ]|$)" , model : "Galaxy Grand Neo" , } , Model { regex : "(?:SAMSUNG-)?GT-I9063" , model : "Galaxy Grand Neo Duos" , } , Model { regex : "(?:SAMSUNG-)?GT-I9(?:080|128)" , model : "Galaxy Grand" , } , Model { regex : "(?:SAMSUNG-)?GT-I9168" , model : "Galaxy Grand Neo+" , } , Model { regex : "(?:SAMSUNG-)?GT-I9082" , model : "Galaxy Grand Duos" , } , Model { regex : "(?:SAMSUNG-)?GT-N7000" , model : "Galaxy Note" , } , Model { regex : "(?:SC-01G|SCL24)(?:[);/ ]|$)" , model : "Galaxy Note Edge" , } , Model { regex : "(?:SAMSUNG-)?SM-N935[FSLK](?:[);/ ]|$)" , model : "Galaxy Note Fan Edition" , } , Model { regex : "(?:SAMSUNG-)?(?:(?:GT-)?N7100|SCH-(?:I605|N719|R950)|SPH-L900)(?:[);/ ]|$)" , model : "Galaxy Note II" , } , Model { regex : "(?:SAMSUNG-)?GT-N7105" , model : "Galaxy Note II LTE" , } , Model { regex : "(?:SAMSUNG-)?SM-G710(?:2T|5[HL]|[25689KLS])?(?:[);/ ]|$)" , model : "Galaxy Grand 2" , } , Model { regex : "(?:SAMSUNG-)?SM-G720(?:AX|N0|[02])(?:[);/ ]|$)" , model : "Galaxy Grand Max" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:G530(?:[689]W|[AF]Z|BT|MU|R[47]|[AFHMPTWY])|G531[FH]|S920L)(?:[);/ ]|$)" , model : "Galaxy Grand Prime" , } , Model { regex : "(?:SAMSUNG-)?SM-G531(?:BT|[MY])(?:[);/ ]|$)" , model : "Galaxy Grand Prime VE Duos" , } , Model { regex : "(?:SAMSUNG-)?SM-G532F(?:[);/ ]|$)" , model : "Galaxy Grand Prime Plus" , } , Model { regex : "(?:SAMSUNG-)?SM-G532MT(?:[);/ ]|$)" , model : "Galaxy J2 Prime (TV)" , } , Model { regex : "(?:SAMSUNG-)?SM-G532[MG](?:[);/ ]|$)" , model : "Galaxy J2 Prime" , } , Model { regex : "(?:SAMSUNG-)?SM-N7502(?:[);/ ]|$)" , model : "Galaxy Note 3 Neo Duos" , } , Model { regex : "(?:SAMSUNG-)?SM-N750[05LQ]?" , model : "Galaxy Note 3 Neo" , } , Model { regex : "(?:SAMSUNG-)?SM-N9002(?:[);/ ]|$)" , model : "Galaxy Note 3 Duos" , } , Model { regex : "(?:SAMSUNG-)?SM-9005(?:[);/ ]|$)" , model : "Galaxy Note 3 LTE" , } , Model { regex : "(?:SAMSUNG-)?(?:SM-N900(?:W8|[05689][VQ]?|[AKLPSTV])?|SCL22|SC-01F(?:[);/ ]|$))" , model : "Galaxy Note 3" , } , Model { regex : "(?:SAMSUNG-)?SM-(?:N910|910U)|N9100(?:[);/ ]|$)" , model : "Galaxy Note 4" , } , Model { regex : "(?:SAMSUNG-)?SM-N916[KLS]" , model : "Galaxy Note 4 LTE" , } , Model { regex : "(?:SAMSUNG-)?SM-N915" , model : "Galaxy Note 4 Edge" , } , Model { regex : "(?:SAMSUNG-)?SM-N920(?:R[467]|W8|[0ACFGIKLPSTVX])" , model : "Galaxy Note 5" , } , Model { regex : "(?:SAMSUNG-)?SM-N9208" , model : "Galaxy Note 5 Duos" , } , Model { regex : "(?:SAMSUNG-)?SM-G750(?:8Q|[9AFH])" , model : "Galaxy Mega 2" , } , Model { regex : "(?:SAMSUNG-)?GT-I915[028]" , model : "Galaxy Mega 5.8" , } , Model { regex : "(?:SAMSUNG-)?GT-I920[05]" , model : "Galaxy Mega 6.3" , } , Model { regex : "(?:SAMSUNG-)?(?:SM-N930(?:R[467]|W8|[0AFKLPSTUVX])|SCV34)" , model : "Galaxy Note 7" , } , Model { regex : "(?:SAMSUNG[- ])?SM-N950|SCV37|SC-01K" , model : "Galaxy Note 8" , } , Model { regex : "(?:SAMSUNG[- ])?(?:SM-N960|SCV40|SC-01L)" , model : "Galaxy Note 9" , } , Model { regex : "(?:SAMSUNG[- ])?SM-(?:N970(?:U1|W8|[089DFJKLSUWX])|N971N)" , model : "Galaxy Note 10" , } , Model { regex : "(?:SAMSUNG[- ])?SM-N770[FX]" , model : "Galaxy Note 10 Lite" , } , Model { regex : "(?:SAMSUNG[- ])?(?:SM-N975(?:U1|XU|[0CFUWX])|SM-N976[0BVNQU]|SC-01M|SCV45)" , model : "Galaxy Note 10+" , } , Model { regex : "(?:SAMSUNG[- ])?(?:SM-N980(?:F/DS|F))" , model : "Galaxy Note 20" , } , Model { regex : "(?:SAMSUNG[- ])?(?:SM-N981(?:B/DS|U1|[0BNUW]))" , model : "Galaxy Note 20 5G" , } , Model { regex : "(?:SAMSUNG[- ])?(?:SM-N985(?:F/DS|F))" , model : "Galaxy Note 20 Ultra" , } , Model { regex : "(?:SAMSUNG[- ])?(?:SM-N986(?:B/DS|U1|[0BNUW])|SC-53A|SCG06)" , model : "Galaxy Note 20 Ultra 5G" , } , Model { regex : "(?:SAMSUNG-)?SM-W750V" , model : "Ativ SE" , } , Model { regex : "(?:SAMSUNG-)?SM-G310R5" , model : "GreatCall Touch 3" , } , Model { regex : "(?:SAMSUNG-)?GT-E2152" , model : "E2152" , } , Model { regex : "(?:SAMSUNG-)?(GT-(P|N8|N5)[0-9]+[a-z]?)" , model : "$1" , } , Model { regex : "SC-02C" , model : "Galaxy S II" , } , Model { regex : "(?:SAMSUNG-)?((?:SM-[TNP]|GT-P)[a-z0-9_\\-]+)" , model : "$1" , } , Model { regex : "((?:SCH|SGH|SPH|SHV|SHW|GT|SM)-[a-z0-9_\\-]+)" , model : "$1" , } , Model { regex : "SMART-TV" , model : "Smart TV" , } , Model { regex : "Galaxy ([^/;]+) Build" , model : "Galaxy $1" , } , Model { regex : "Galaxy ([a-z0-9]+)" , model : "Galaxy $1" , } , Model { regex : "SAMSUNG[\\-][ ]?([a-z0-9]+[\\-_][a-z0-9]+)" , model : "$1" , } , Model { regex : "SAMSUNG;[ ]?([a-z0-9]+[\\-_][a-z0-9]+)" , model : "$1" , } , Model { regex : "SAMSUNG[ _/\\-]?([a-z0-9\\-]+)" , model : "$1" , } , Model { regex : "SAMSUNG;[ ]?([a-z0-9 ]+)" , model : "$1" , } , Model { regex : "SEC-([a-z0-9]+)" , model : "$1" , } , Model { regex : "SAM-([a-z0-9]+)" , model : "SCH-$1" , } , Model { regex : "(?:portalmmm|o2imode)/2\\.0 ([SZ][a-z0-9]+)" , model : "$1" , } , Model { regex : "sam([rua][0-9]+)" , model : "SCH-$1" , } ,]) , }) , ("Ledstar" , Brand { regex : "(?:Ledstar[_ ])?(?:Trendy 5.0|Novus_Premium_6.0)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Trendy 5.0" , model : "Trendy 5.0" , } , Model { regex : "Ledstar_Novus_Premium_6.0(?:[);/ ]|$)" , model : "Novus Premium 6.0\"" , } ,]) , }) , ("Daewoo" , Brand { regex : "Daewoo|(DTA-07IDRF)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "(DTA-07IDRF)(?:[);/ ]|$)" , model : "Archive 7P" , } , Model { regex : "Daewoo (Android TV 638)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Beelink" , Brand { regex : "(?:Beelink (?:G[ST]1|LAKE I|SEA I|A1)|GTKing|GT1mini-2|GT1-mini(?:-AT)?)(?:[);/ ]|$)" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "Beelink (G[ST]1|LAKE I|SEA I|A1)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "GT1-mini(?:-AT)?(?:[);/ ]|$)" , model : "GT1 Mini" , } , Model { regex : "GT1mini-2(?:[);/ ]|$)" , model : "GT1 Mini 2" , } , Model { regex : "GTKing(?:[);/ ]|$)" , model : "GT King" , } ,]) , }) , ("X-TIGI" , Brand { regex : "X[-_]TIGI|Hope7[_ ]Mate|Photo_P15_Lite" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "X-TIGI_JOY10_PRO" , model : "Joy 10 Pro" , } , Model { regex : "Hope7[_ ]Mate" , model : "Hope 7 Mate" , } , Model { regex : "X-TIGI_JOY7_MAX" , model : "Joy 7 Max" , } , Model { regex : "X-TIGI[_ ]V28[_ ]LTE" , model : "V28 LTE" , } , Model { regex : "X[-_]TIGI[_ ]V19" , model : "V19" , } , Model { regex : "X-TIGI[_ ]Photo[_ ]P11" , model : "Photo P11" , } , Model { regex : "Photo_P15_Lite" , model : "Photo P15 Lite" , } , Model { regex : "X[-_]TIGI[ _-]([^/;)]+) Build" , model : "$1" , } ,]) , }) , ("Divisat" , Brand { regex : "(Divisat)(?:[);/ ]|$)" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "(J-Link)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("teXet" , Brand { regex : "Texet|(NaviPad [^/;]*) Build|TM-(?:1046|1058|1057|1067|3000|3200R|3500|4003|4071|450[34]|451[30]|4377|4082R|508[34]|550[358]|5010|5017|507[4-7]|5[23]77|6003|6906|702[13]|7055HD|709[69]|9747BT|9758|9751HD|9767|5513|520[410]|507[13]|558[134]|570[23]|7859|8044|9748[ _]3G|9720|7047HD[ _]3G|9757|9740|4982|4515|4083|500[3567]|5571|3204R|5016|8043|7047HD[ _]3G|8041HD|8066|705[23]|7041|8041HD|8051|8048|974[96]|973[78]W|974[170]|9743W|9750HD|7043XD|7049|7887|7037W|702[46])|TB-(771A|711A)|X-Force[\\(-]?TM-5009\\)?|X-Plus[\\(-]?TM-5577\\)?|TM_5011|X-pad (?:AIR 8|iX 7|NAVI 7.[35]|NAVI 10|SKY 8.1|STYLE 8|STYLE 10.1|HIT|LITE 7.[12]|QUAD (?:7.2|10|7)|SHINE 8.1)(?: 3G)?" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "TM-9749" , model : "X-pad Plus 7.1 3G" , } , Model { regex : "TM-9746" , model : "X-pad Plus 7 3G" , } , Model { regex : "TM-8051" , model : "X-pad Force 8i 3G" , } , Model { regex : "TM-1058" , model : "X-Force 10 3G" , } , Model { regex : "TM-8048" , model : "X-pad Force 8 3G" , } , Model { regex : "(NaviPad [^/;]*) Build" , model : "$1" , } , Model { regex : "TM-7055HD" , model : "NaviPad 3G" , } , Model { regex : "TM-9758" , model : "X-pad Style 10.0\"" , } , Model { regex : "X-pad SHINE 8.1 3G" , model : "X-pad Shine 8.1\" 3G" , } , Model { regex : "X-pad QUAD 10 3G" , model : "X-pad Quad 10.0\" 3G" , } , Model { regex : "X-pad QUAD 7 3G" , model : "X-pad Quad 7.0\" 3G" , } , Model { regex : "X-pad QUAD 7.2 3G" , model : "X-pad Quad 7.2\" 3G" , } , Model { regex : "X-pad STYLE 8 3G" , model : "X-pad Style 8.0\" 3G" , } , Model { regex : "X-pad HIT 3G" , model : "X-pad Hit 3G" , } , Model { regex : "X-pad LITE (7.[12])" , model : "X-pad Lite $1\"" , } , Model { regex : "TM-9767" , model : "X-pad Style 10.0\" 3G" , } , Model { regex : "X-pad STYLE 10.1 3G" , model : "X-pad Style 10.1\" 3G" , } , Model { regex : "(X-pad (?:AIR 8|iX 7) 3G)" , model : "$1" , } , Model { regex : "TM-7096|X-pad NAVI 7.3 3G" , model : "X-pad NAVI 7.3\" 3G" , } , Model { regex : "TM-7099" , model : "X-pad NAVI 7.4\" 3G" , } , Model { regex : "X-pad NAVI 7.5 3G" , model : "X-pad NAVI 7.5\" 3G" , } , Model { regex : "X-pad SKY 8.1 3G" , model : "X-pad Sky 8.1\" 3G" , } , Model { regex : "TM-1046|X-pad NAVI 10 3G" , model : "X-pad NAVI 10.0\" 3G" , } , Model { regex : "TM-7859" , model : "X-pad NAVI 8.2\" 3G" , } , Model { regex : "TM-7049" , model : "NaviPad TM-7049 3G" , } , Model { regex : "TM-7887" , model : "NaviPad TM-7887 3G" , } , Model { regex : "TM-8066" , model : "X-pad Rapid 8.2\" 4G" , } , Model { regex : "(TM-(?:1057|1067|6906|8043|9748[_ ]3G|9740|9757(?:[_ ]3G)?|7047HD[ _]3G|9747BT|9751HD|702[13]|705[23]|7041|9720|7047HD[_ ]3G|8044|8041HD|973[78]W|9743W|974[710]|9750HD|7043XD|7037W|702[46])|TB-(?:771A|711A|8041HD))" , model : "$1" , } , Model { regex : "TM-4503" , model : "X-Quad" , } , Model { regex : "(TM-(?:3000|3200R|4003|4083|4377|4504|451[30]|500[35]|5[23]77|5571|3204R|520[04]|5581|5505|5017|507[13-7]|5081|6003|5513))" , model : "$1" , } , Model { regex : "TM-5006" , model : "X-Line" , } , Model { regex : "TM-5007" , model : "X-Shine" , } , Model { regex : "TM_5011" , model : "X-Omega" , } , Model { regex : "TM-508(3|4)" , model : "Pay $1G" , } , Model { regex : "TM-558(3|4)" , model : "Pay 5.5\" $1G" , } , Model { regex : "TM-5702" , model : "Pay 5.7\" 3G" , } , Model { regex : "TM-5703" , model : "Pay 5.7\" Pro" , } , Model { regex : "TM-5201" , model : "Rock" , } , Model { regex : "TM-4515" , model : "X-Style" , } , Model { regex : "TM-(5016|3500)" , model : "X-Maxi 2" , } , Model { regex : "TM-4071" , model : "X-Smart" , } , Model { regex : "TM-4982" , model : "iX-Maxi" , } , Model { regex : "TEXET[_ ]IX-MINI" , model : "iX-Mini" , } , Model { regex : "TM-5010" , model : "X-Selfie" , } , Model { regex : "TM-4082R" , model : "X-Driver Quad" , } , Model { regex : "TM-5503" , model : "X-Mage" , } , Model { regex : "TM-5508" , model : "X-Cosmo" , } , Model { regex : "X-Force[\\(-]?TM-5009\\)?" , model : "X-Force" , } , Model { regex : "X-Plus[\\(-]?TM-5577\\)?" , model : "X-Plus" , } , Model { regex : "teXet[_ ]X-medium[_ ]plus" , model : "X-Medium Plus" , } ,]) , }) , ("Starlight" , Brand { regex : "Starlight|(?:My_Star_X|RIO STAR|C_Note_Pro|Star_Mix_2)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "My_Star_X" , model : "My Star X" , } , Model { regex : "RIO STAR" , model : "Rio Star" , } , Model { regex : "C_Note_Pro" , model : "C Note Pro" , } , Model { regex : "Star_Mix_2" , model : "Star Mix 2" , } , Model { regex : "Starlight_ROME_X" , model : "Rome X" , } ,]) , }) , ("CG Mobile" , Brand { regex : "(?:CG_OMEGA6|Omega (?:[38])|CG_EON_Blaze_Pro|CG\\|EON Blaze GOLD)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Omega ([38])(?:[);/ ]|$)" , model : "Omega $1" , } , Model { regex : "CG_OMEGA6(?:[);/ ]|$)" , model : "Omega 6" , } , Model { regex : "CG_EON_Blaze_Pro(?:[);/ ]|$)" , model : "EON Blaze Pro" , } , Model { regex : "CG\\|EON Blaze GOLD(?:[);/ ]|$)" , model : "EON Blaze Gold" , } ,]) , }) , ("BB Mobile" , Brand { regex : "bb-mobile|Techno[-_ ](8\\.0|9\\.7|TQ863Q|X595BT|S700BF|I700AJ|10.1 LTE TQ060X|7.0 LTE TQ763I|I785AP|I101BI)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "Techno[_ ]S700BF(?:[);/ ]|$)" , model : "Techno 7.0\" Pioneer LTE S700BF" , } , Model { regex : "Techno[_ ]10.1 LTE TQ060X(?:[);/ ]|$)" , model : "Techno 10.0\" LTE TQ060X" , } , Model { regex : "Techno[_ ]TQ863Q(?:[);/ ]|$)" , model : "Techno 8.0\" Poplar LTE TQ863Q" , } , Model { regex : "Techno[_ ]I700AJ(?:[);/ ]|$)" , model : "Techno 7.0\" Mozg LTE I700AJ" , } , Model { regex : "Techno[-_ ]I785AP(?:[);/ ]|$)" , model : "Techno 7.85\" Mozg I785AP" , } , Model { regex : "Techno[-_ ]I101BI(?:[);/ ]|$)" , model : "Techno 10.1\" Mozg I101BI" , } , Model { regex : "Techno[_ ]7.0 LTE TQ763I(?:[);/ ]|$)" , model : "Techno 7.0\" Kalash LTE TQ763I" , } , Model { regex : "(FirstTab TP-17)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Techno[_ ](9\\.7|8\\.0) 3G(?:[);/ ]|$)" , model : "Techno $1\" 3G" , } , Model { regex : "Techno[_ ](?:X595BT)(?:[);/ ]|$)" , model : "Techno Spark 3G X595BT" , } ,]) , }) , ("SKG" , Brand { regex : "(Modern[ _](?:S10?|S[3679]))(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("KATV1" , Brand { regex : "(KATV-01) PRO(?:[);/ ]|$)" , device : Some ("tv") , model : Some ("$1 Pro") , models : None , }) , ("Koobee" , Brand { regex : "Koobee" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Koobee[ _\\-]?([^;/]+) Build" , model : "$1" , } , Model { regex : "Koobee[ _\\-]?([a-z0-9_-]+)" , model : "$1" , } ,]) , }) , ("Silent Circle" , Brand { regex : "Blackphone 2" , device : Some ("smartphone") , model : Some ("Blackphone 2") , models : None , }) , ("Comio" , Brand { regex : "Comio|CT701G PLUS|CT701W|GT100" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "GT100" , model : "GT100" , } , Model { regex : "CT701W" , model : "CT701W" , } , Model { regex : "CT701G PLUS" , model : "CT701G Plus" , } , Model { regex : "Comio[ _-]?([^;/)]+)(?: Build|[);])" , model : "$1" , } ,]) , }) , ("Ryte" , Brand { regex : "RYTE (U55 LTE)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Movic" , Brand { regex : "MOVIC|F4502" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "MOVIC[ -]W([2345])" , model : "W$1" , } , Model { regex : "F4502" , model : "F4502" , } ,]) , }) , ("National" , Brand { regex : "(NX-32THS100)(?:[);/ ]|$)" , device : Some ("tv") , model : Some ("$1") , models : None , }) , ("Archos" , Brand { regex : "(?:YL-)?Archos|(?:A50TI|AC101BHE)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Archos (Oxygen (?:63|57|68XL))(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "A50TI(?:[);/ ]|$)" , model : "50 Titanium 4G" , } , Model { regex : "Archos ?5(?:[);/ ]|$)" , model : "5" , } , Model { regex : "AC101BHE(?:[);/ ]|$)" , model : "101B Helium 4G" , } , Model { regex : "(?:YL-)?Archos ([^/;]*(?:PAD)[^/;]*) Build" , model : "$1" , } , Model { regex : "Archos ((?:[789]|10)[0-9]?[a-z]* ?(?:G9|G10|Helium|Titanium|Cobalt|Platinum|Xenon|Carbon|Neon|XS|IT)[^/;]*) Build" , model : "$1" , } , Model { regex : "(?:YL-)?Archos ([a-z0-9 ]+) Build" , model : "$1" , } , Model { regex : "(?:YL-)?Archos ([a-z0-9]+)" , model : "$1" , } ,]) , }) , ("Invens" , Brand { regex : "(Fighter|Eager|Royal R[1-8])(?: Build|[;)])" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("RIM" , Brand { regex : "BB10;|BlackBerry|rim[0-9]+|PlayBook|STV100-[1234]|STH100-[12]|BBA100-[12]|BBB100-[1234567]|BBD100-[126]|BB[EF]100-[123456789]|BB[CGH]100-1" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "BBA100-[12]" , model : "BlackBerry DTEK60" , } , Model { regex : "BBB100-[1234567]" , model : "KEYone" , } , Model { regex : "BBC100-1" , model : "Aurora" , } , Model { regex : "BBD100-[126]" , model : "Motion" , } , Model { regex : "BBE100-[123456789]" , model : "KEY2 LE" , } , Model { regex : "BBF100-[1234567]" , model : "KEY2" , } , Model { regex : "BBF100-8" , model : "KEY2 Silver" , } , Model { regex : "BBF100-9" , model : "KEY2 Black" , } , Model { regex : "BBG100-1" , model : "Evolve" , } , Model { regex : "BBH100-1" , model : "Evolve X" , } , Model { regex : "STV100-[1234]" , model : "BlackBerry Priv" , } , Model { regex : "STH100-[12]" , model : "BlackBerry DTEK50" , } , Model { regex : "BB10; ([a-z0-9\\- ]+)\\)" , model : "BlackBerry $1" , } , Model { regex : "PlayBook.+RIM Tablet OS" , model : "BlackBerry Playbook" , } , Model { regex : "BlackBerry(?: )?([a-z0-9]+)" , model : "BlackBerry $1" , } , Model { regex : "rim([0-9]+)" , model : "BlackBerry $1" , } , Model { regex : "9000" , model : "Bold 9000" , } , Model { regex : "9300" , model : "Curve 3G 9300" , } , Model { regex : "(8520|8530|9220|9320|9360)" , model : "Curve $1" , } , Model { regex : "9630" , model : "Tour 9630" , } , Model { regex : "9720" , model : "9720" , } , Model { regex : "(9800|9860)" , model : "Torch $1" , } , Model { regex : "BlackBerry" , model : "BlackBerry" , } ,]) , }) , ("TWZ" , Brand { regex : "TWZ[-_ ](?:TabPlay|Y6[08]|Y52|A49|A[59]5|A567|AA8|QQ[12])|TWZQQ1" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "TWZ[_ ]TabPlay[_ ](12[56])" , model : "TabPlay $1" , } , Model { regex : "TWZ[-_ ]?(Y6[08]|Y52|A49|A[59]5|A567|AA8|QQ[12])" , model : "$1" , } ,]) , }) , ("ZH&K" , Brand { regex : "(?:ODYSSEY O2|ODYSSEY RANGE)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "ODYSSEY O2" , model : "Odyssey O2" , } , Model { regex : "ODYSSEY RANGE" , model : "Odyssey Range" , } ,]) , }) , ("iView" , Brand { regex : "(733TPC|730TPC|769TPCII|930TPC)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("InfoKit" , Brand { regex : "(TVB-906X)(?:[);/ ]|$)" , device : Some ("tv") , model : Some ("$1") , models : None , }) , ("Hitech" , Brand { regex : "(Amaze[ _](?:S2_4G|S[56] 4G|S1|S[56](?: Plus)?))(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Orange" , Brand { regex : "SPV[ \\-]?([a-z0-9]+)|(?<!FBCR/)Orange[ _-](?!Tahiti-LS\\))([^/;]+)( Build|\\))(?<!Tahiti-LS\\))|SC/IHD92|Nura 2|FunTab ([^/;]+) Build|Orange Mahpee" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "SC/IHD92" , model : "Livebox Play" , } , Model { regex : "Nura 2" , model : "Nura 2" , } , Model { regex : "Sego" , model : "Sego" , } , Model { regex : "FunTab ([^/;]+) Build" , model : "FunTab $1" , } , Model { regex : "Orange[ _-](Rise)(3[12]|5[12])(?:[);/ ]|$)" , model : "$1 $2" , } , Model { regex : "Orange[ _-](Dive)72(?:[);/ ]|$)" , model : "$1 72" , } , Model { regex : "Orange[ _-](Daytona|Dive (30|7[13])|Dublin|Fova|Gova|Hi 4G|Hiro|Kivo|Monte Carlo|Neva 80|Neva play|Nura|Reyo|Rise[_ ](3[034]|40|5[345])|Rono|Roya|San Francisco|Tactile internet 2|Tado|Yomi|Yumo|Zali|Mahpee)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "SPV[ \\-]?([a-z0-9]+)" , model : "SPV $1" , } ,]) , }) , ("IconBIT" , Brand { regex : "IconBIT|NT-(3506M|0704S|0909T|1009T|10[01]1T|1017T|3601P/3602P|3603P|3702S|3805C|3905T|3701S|0701S|0805C|0902S|370[23]M)|XDS[789]4K|Omnicast UHD|Movie Smart 4K|Movie IPTV Quad" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "NT-3506M" , model : "NetTAB Mercury Quad FHD" , } , Model { regex : "NT-0704S" , model : "NetTAB Sky LE" , } , Model { regex : "NT-0909T" , model : "NetTAB Thor IZ" , } , Model { regex : "NT-1009T" , model : "NetTAB Thor quad II" , } , Model { regex : "NT-10[01]1T" , model : "NetTAB Thor LE" , } , Model { regex : "NT-1017T" , model : "NetTAB Thor 3G quad" , } , Model { regex : "NT-3601P/3602P" , model : "NetTAB Pocket 3G" , } , Model { regex : "NT-3603P" , model : "NetTAB Pocket 3G Slim" , } , Model { regex : "NT-3702S" , model : "NetTAB Sky HD 3G" , } , Model { regex : "NT-3805C" , model : "NetTAB Skat 3G quad" , } , Model { regex : "NT-3701S" , model : "NetTAB Sky 3G duo" , } , Model { regex : "NT-3905T" , model : "NetTAB Thor ZX 3G" , } , Model { regex : "NT-0701S" , model : "NetTAB Sky net" , } , Model { regex : "NT-0805C" , model : "NetTAB Skat MX" , } , Model { regex : "NT-0902S" , model : "NetTAB Space quad RX" , } , Model { regex : "NT-3702M" , model : "NetTAB Matrix 3G duo" , } , Model { regex : "NT-3703M" , model : "NetTAB Matrix 3GT" , } , Model { regex : "MATRIX ULTRA" , model : "NetTAB Matrix Ultra" , } , Model { regex : "(?:iconBIT )?(Movie Smart 4K|Movie IPTV Quad|Movie Ultra HD 4K|XDS[789]4K|Omnicast UHD)" , model : "$1" , } ,]) , }) , ("JVC" , Brand { regex : "JVC[;,]|JVC Shell" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "JVC Shell [0-9A-Z]+" , model : "" , } , Model { regex : "JVC[;,](32D1290)" , model : "$1" , } ,]) , }) , ("EvroMedia" , Brand { regex : "EVROMEDIA|Playpad[ _]|PLAY_PAD_PRO_XL|3G NOTE XL" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "Playpad 3G GOO" , model : "Play Pad 3G Goo" , } , Model { regex : "Play Pad 3G 2Goo" , model : "Play Pad 3G 2Goo" , } , Model { regex : "Play Pad PRO" , model : "Play Pad Pro" , } , Model { regex : "PLAY_PAD_PRO_XL" , model : "Play Pad Pro XL" , } , Model { regex : "PlayPad 3GTab XL" , model : "Play Pad 3G Tab XL" , } , Model { regex : "3G NOTE XL" , model : "Play Pad 3G Note XL" , } ,]) , }) , ("Inco" , Brand { regex : "(?:Inco[ _](Aurora II|Colors|Sphere|Plain[_ ]2S?|Plain2 S|Flex(?: 2S)?|S4|Bloom(?: 2)?)|(Horizon_S|Horizon \\+))(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(?:Inco[ _])?(Plain[_ ]2S?|Colors|Horizon_S|Horizon \\+|Aurora II|Flex(?: 2S)?|S4|Bloom(?: 2)?)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Plain2 S" , model : "Plain 2S" , } , Model { regex : "Inco Sphere( 3)?(?:[);/ ]|$)" , model : "Sphere$1" , } ,]) , }) , ("TurboKids" , Brand { regex : "Turbokids[-_ ]?(TMNT|3G|S4|Princess)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("RED" , Brand { regex : "(?:H1A1000)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("Hydrogen One") , models : None , }) , ("Cobalt" , Brand { regex : "Cobalt[ _-](?:SM|T)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Cobalt[ _-]SM_(55?|6)" , model : "SM$1" , } , Model { regex : "Cobalt[ _-]T((?:7|10))[ _]3G" , model : "T$1 3G" , } , Model { regex : "Cobalt[ _-]T((?:7|10))[ _]wifi" , model : "T$1 WiFi" , } ,]) , }) , ("DEXP" , Brand { regex : "DEXP|(?:Ursus|Ixion)[ _]([^;/)]+)|H135[ _]Build|Larus_TV1|Ixion(?:ML4.7|ES250)|M150Storm|(?:SENIOR|F4[38]D8000K|VA[12]10|VA170|ML450|MS[56]50|BL[123]50|BS155|BS160|BS[1256]50|AL[12]40|AL[23]50|AS155|AS260|GS15[035]| (?:N280i|P380i|R110|E210|BL155|BL160|A160|B450|B340|B35[05]|T155|A1[45]0|A340|AS160|GL[23]55|G250|G15[05]|ES750|XL150|S280|Z[34]55|H170|P510|L2[17]0))(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Ixion[_ ]([^;/]+)(?: Build|\\))" , model : "Ixion $1" , } , Model { regex : "(ML450|MS[56]50|ES750|XL150)(?:[);/ ]|$)" , model : "Ixion $1" , } , Model { regex : "IxionES250(?:[);/ ]|$)" , model : "Ixion ES250 Rage" , } , Model { regex : "IxionML4.7(?:[);/ ]|$)" , model : "Ixion ML 4.7\"" , } , Model { regex : "M150Storm(?:[);/ ]|$)" , model : "Ixion M150 Storm" , } , Model { regex : "AL250(?:[);/ ]|$)" , model : "4.5\" AL250" , } , Model { regex : "AL350(?:[);/ ]|$)" , model : "5.0\" AL350" , } , Model { regex : "AS155(?:[);/ ]|$)" , model : "5.45\" AS155" , } , Model { regex : "AS260(?:[);/ ]|$)" , model : "5.85\" AS260" , } , Model { regex : "Ursus ([^;/)]+)(?: Build|\\))" , model : "Ursus $1" , } , Model { regex : "(VA[21]10|VA170|E210|R110|N280i|P380i|P510|S280|H170|L2[17]0)(?:[);/ ]|$)" , model : "Ursus $1" , } , Model { regex : " (B450|B340|B35[05]|BL155|BL160|A160|A340|T155|Z[34]55|G250)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "SENIOR(?:[);/ ]|$)" , model : "Senior" , } , Model { regex : "Larus_TV1" , model : "Larus_TV1" , } , Model { regex : "H135[ _]Build" , model : "Atlas" , } , Model { regex : "(BL[123]50|BS155|BS160|BS[1256]50|AL[12]40|A1[45]0|GS15[035]|AS160|GL[23]55|G15[05])(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "DEXP[ _]([^;/]+) Build" , model : "$1" , } , Model { regex : "DEXP[ _]([^);/]+)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "(F4[38]D8000K)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Jinga" , Brand { regex : "Jinga[-_ ]|(?:(?:Fresh|Optim)4G|Pass(?:Plus|3G)|PicassoNote|Hotz[_ ]M1|WinPRO|Touch4G|Start3G|IGO[ _]L[41]|Basco (?:L3|L[45]00|XS1|S2))(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Optim4G(?:[);/ ]|$)" , model : "Optim 4G" , } , Model { regex : "Fresh4G(?:[);/ ]|$)" , model : "Fresh 4G" , } , Model { regex : "Hotz[_ ]M1(?:[);/ ]|$)" , model : "Hotz M1" , } , Model { regex : "PassPlus(?:[);/ ]|$)" , model : "Pass Plus" , } , Model { regex : "Pass3G(?:[);/ ]|$)" , model : "Pass 3G" , } , Model { regex : "WinPRO(?:[);/ ]|$)" , model : "Win Pro" , } , Model { regex : "Touch4G(?:[);/ ]|$)" , model : "Touch 4G" , } , Model { regex : "Start3G(?:[);/ ]|$)" , model : "Start 4G" , } , Model { regex : "PicassoNote(?:[);/ ]|$)" , model : "Picasso Note" , } , Model { regex : "Jinga Iron(?:[);/ ]|$)" , model : "Iron" , } , Model { regex : "Jinga Basco neo(?:[);/ ]|$)" , model : "Basco Neo" , } , Model { regex : "(?:Jinga[ _])?Basco[ _](L[13]|L[45]00|XS1|S2)(?:[);/ ]|$)" , model : "Basco $1" , } , Model { regex : "Jinga Trezor S1 Plus(?:[);/ ]|$)" , model : "Trezor S1 Plus" , } , Model { regex : "JINGA_IGO_L2(?:[);/ ]|$)" , model : "IGO L2" , } , Model { regex : "(?:JINGA[_ ])?IGO[_ ]([ML]1|L4)(?:[);/ ]|$)" , model : "IGO $1" , } , Model { regex : "Jinga Trezor S1 Plus(?:[);/ ]|$)" , model : "Trezor S1 Plus" , } ,]) , }) , ("ThL" , Brand { regex : "ThL[ _-]|Knight 2" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Knight 2" , model : "Knight 2" , } , Model { regex : "ThL[ _-]*([^;/]+) Build" , model : "$1" , } , Model { regex : "ThL[ _-]*([^ ;/)]+)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("RT Project" , Brand { regex : "Shock 5" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Shock 5" , model : "Shock 5" , } ,]) , }) , ("NOA" , Brand { regex : "(?:NOA-)?NOA[ _]|Hummer(?:_2019_R|LE)|NextSE" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "NOA[_ ]CORE[_ ]FORTE" , model : "Core Forte" , } , Model { regex : "HummerLE" , model : "Hummer LE" , } , Model { regex : "Hummer_2019_R" , model : "Hummer R (2019)" , } , Model { regex : "NOA[_ ]Hummer[_ ]Lite" , model : "Hummer Lite" , } , Model { regex : "NOA[_ ]MOVEse" , model : "Move SE" , } , Model { regex : "NextSE" , model : "Next SE" , } , Model { regex : "NOA[_ ]NEXT" , model : "Next" , } , Model { regex : "NOA[_ ]VISION[_ ]H3SE" , model : "Vision H3SE" , } , Model { regex : "NOA[_ ]VISION[_ ]H3" , model : "Vision H3" , } , Model { regex : "NOA[_ ]LOOP" , model : "Loop" , } , Model { regex : "(?:NOA-)?NOA[_ ]H4se" , model : "H4SE" , } , Model { regex : "NOA[_ ]Mg12" , model : "MG12" , } , Model { regex : "NOA[_ ]H44SE" , model : "H44SE" , } , Model { regex : "NOA[_ ]H10LE" , model : "H10LE" , } , Model { regex : "NOA[_ ]([^;)/ ]+)" , model : "$1" , } ,]) , }) , ("Dialog" , Brand { regex : "Dialog ?([^;/]+) Build" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Ergo" , Brand { regex : "ERGO|(V550[_ ]Vision|B502 Basic|B504[_ ]Unit|A502[_ ]Aurum|A503[ _]Optima|Prime B400|A551 Sky 4G|A553 Power|A555 Universe|Force F500|GoTab GBT9|GoTab Gti8|F501_Magic|V551[ _]Aura|V540_Level|V570_BIG_BEN|B506[_ ]INTRO|A503-Optima|B505_Unit_4G)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "F501_Magic" , model : "F501 Magic" , } , Model { regex : "B502 Basic" , model : "B502 Basic" , } , Model { regex : "A503-Optima" , model : "A503 Optima" , } , Model { regex : "B506[_ ]INTRO" , model : "B506 Intro" , } , Model { regex : "V550[_ ]Vision" , model : "V550 Vision" , } , Model { regex : "B504[_ ]Unit" , model : "B504 Unit" , } , Model { regex : "B505_Unit_4G" , model : "B505 Unit 4G" , } , Model { regex : "V551[ _]Aura" , model : "V551 Aura" , } , Model { regex : "V540_Level" , model : "V540 Level" , } , Model { regex : "V570_BIG_BEN" , model : "V570 Big Ben" , } , Model { regex : "Ergo F502" , model : "F502 Platinum" , } , Model { regex : "(ERGO_)?A500[ _]Best" , model : "A500 Best" , } , Model { regex : "(ERGO_)?A550[ _]Maxx" , model : "A550 Maxx" , } , Model { regex : "Prime B400" , model : "Prime B400" , } , Model { regex : "A502[_ ]Aurum" , model : "A502 Aurum" , } , Model { regex : "A503[ _]Optima" , model : "A503 Optima" , } , Model { regex : "A551 Sky 4G" , model : "A551 Sky 4G" , } , Model { regex : "A553 Power" , model : "A553 Power" , } , Model { regex : "A555 Universe" , model : "A555 Universe" , } , Model { regex : "ERGO[_ ]A556" , model : "A556" , } , Model { regex : "ERGO[_ ]F500" , model : "F500" , } , Model { regex : "ERGO[_ ]F501" , model : "F501" , } , Model { regex : "B500 First" , model : "B500 First" , } , Model { regex : "Force F500" , model : "Force F500" , } , Model { regex : "GoTab GBT9" , model : "GoTab GBT9" , } , Model { regex : "GoTab Gti8" , model : "GoTab GTi8" , } , Model { regex : "ERGO[_ ]Tab[ _]Crystal[ _]Lite" , model : "Tab Crystal Lite" , } , Model { regex : "ERGO[_ ]Tab[ _]Hero[ _]II" , model : "Tab Hero II" , } , Model { regex : "ERGO[_ ](B700)" , model : "Tab $1" , } , Model { regex : "ERGO SmartBox SX" , model : "SmartBox SX" , } ,]) , }) , ("Myria" , Brand { regex : " (Myria_[^/;]+|502M|Cozy|Easy tab 9|Grand) Build|Myria_FIVE|Myria_Grand_4G|Myria_Wide_2|Myria_Wide_4G" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Myria_([^/;]+) Build" , model : "$1" , } , Model { regex : "Myria_FIVE" , model : "Five" , } , Model { regex : "(502M|Grand)" , model : "$1" , } , Model { regex : "Myria_Grand_4G" , model : "Grand 4G" , } , Model { regex : "Myria_Wide_4G" , model : "Wide 4G" , } , Model { regex : "Myria_Wide_2" , model : "Wide 2" , } , Model { regex : "(Cozy|Easy tab 9)" , model : "$1" , } ,]) , }) , ("NeuImage" , Brand { regex : "NIM-" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "NIM-(450D|550O|600Q)" , model : "$1" , } ,]) , }) , ("Bluegood" , Brand { regex : "BLUEGOOD" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "V6" , model : "V6" , } ,]) , }) , ("Konrow" , Brand { regex : "(?:BIGCOOL|COOLFIVE|COOL-K|Just5|Link5|EASY(?:5|62)|CITY55|Cool55)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "BIGCOOL(?:[);/ ]|$)" , model : "BigCool" , } , Model { regex : "COOL-K(?:[);/ ]|$)" , model : "Cool-K" , } , Model { regex : "Cool55(?:[);/ ]|$)" , model : "Cool 55" , } , Model { regex : "COOLFIVE(?:[);/ ]|$)" , model : "Cool Five" , } , Model { regex : "Just5(?:[);/ ]|$)" , model : "Just 5" , } , Model { regex : "Link5(?:[);/ ]|$)" , model : "Link 5" , } , Model { regex : "EASY(5|62)(?:[);/ ]|$)" , model : "Easy $1" , } , Model { regex : "CITY55(?:[);/ ]|$)" , model : "City 55" , } ,]) , }) , ("Mobicel" , Brand { regex : "Mobicel_(R1)|ASTRO(?: Build|[;)]|$)|(?:R7_1|HYPE|DANDY(?:_ZAM)?|(?<!SMADL )Matrix|VENUS_G|TRENDY PLUS|FENDY_DS|TANGO_LITE|BLINK|BERRY[_ ]?(?:[12]|PLUS))(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Matrix" , model : "Matrix" , } , Model { regex : "BLINK" , model : "Blink" , } , Model { regex : "BERRY1" , model : "Berry 1" , } , Model { regex : "BERRY 2" , model : "Berry 2" , } , Model { regex : "BERRY[_ ]PLUS" , model : "Berry Plus" , } , Model { regex : "TRENDY PLUS" , model : "Trendy Plus" , } , Model { regex : "HYPE" , model : "Hype" , } , Model { regex : "DANDY_ZAM" , model : "Dandy Zam" , } , Model { regex : "DANDY" , model : "Dandy" , } , Model { regex : "ASTRO" , model : "Astro" , } , Model { regex : "VENUS_G" , model : "Venus Go" , } , Model { regex : "TANGO_LITE" , model : "Tango Lite" , } , Model { regex : "FENDY_DS" , model : "Fendy DS" , } , Model { regex : "R7_1" , model : "R7" , } , Model { regex : "Mobicel_(R1)" , model : "$1" , } ,]) , }) , ("Rombica" , Brand { regex : "(Rombica|SSQ-A0500|Smart Box v[0-9]+)(?:[);/ ]|$)" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "SSQ-A0500(?:[);/ ]|$)" , model : "Smart Stick 4K" , } , Model { regex : "(Infinity K8|Smart Box (?:v00[345789]|Quad|Ultra HD v002|4K V001))(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Vernee" , Brand { regex : "Vernee|Mars Pro|Apollo[ _](?:Lite|X)|Thor (?:E|Plus)|X2_euro|M7_EEA" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Apollo[ _]Lite" , model : "Apollo Lite" , } , Model { regex : "Apollo[ _]X" , model : "Apollo X" , } , Model { regex : "Mars Pro" , model : "Mars Pro" , } , Model { regex : "Thor E" , model : "Thor E" , } , Model { regex : "Thor Plus" , model : "Thor Plus" , } , Model { regex : "Vernee_M5" , model : "M5" , } , Model { regex : "M7_EEA" , model : "M7" , } , Model { regex : "X2_euro" , model : "X2" , } , Model { regex : "Vernee[ _-]([^;/]+) Build" , model : "$1" , } , Model { regex : "Vernee[ _-]([a-z0-9_-]+)" , model : "$1" , } ,]) , }) , ("MTC" , Brand { regex : "MTC[ _](968|97[82]|970|982[OT]?|1078)|(?:MTC[_ ])?SMART[ _]?(?:Race[2]?|Sprint|Run|Surf[2]?)[ _]4G|MTC975|Smart_(?:LINE|Light)|MTC[ _]SMART[ _](?:Run|Start_2)|Redbox Mini 5\\(MTS\\)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "MTC[ _]?(97[258]|970[H]?|982[OT]?|968)" , model : "$1" , } , Model { regex : "MTC[ _](1078)" , model : "$1" , } , Model { regex : "SMART[ _]Race[ _]4G" , model : "Smart Race 4G" , } , Model { regex : "SMART[ _]Race2[ _]4G" , model : "Smart Race 2 4G" , } , Model { regex : "(?:MTC_)?SMART[ _]Sprint[ _]4G" , model : "Smart Sprint 4G" , } , Model { regex : "(?:MTC_)?SMART[ _]Start_2" , model : "Smart Start 2" , } , Model { regex : "Smart_LINE" , model : "Smart Line" , } , Model { regex : "Smart_Light" , model : "Smart Light" , } , Model { regex : "SMART[ _]?Run(?:[ _]4G)?" , model : "Smart Run 4G" , } , Model { regex : "SMART[ _]Surf2[ _]4G" , model : "Smart Surf 2 4G" , } , Model { regex : "SMART[ _]Surf[ _]4G" , model : "Smart Surf 4G" , } , Model { regex : "Redbox Mini 5\\(MTS\\)" , model : "Redbox Mini 5" , } ,]) , }) , ("Iris" , Brand { regex : "(?:Vox[_ ](?:[45]S|Alpha|POP|STEEL Plus|Energy)|IS2_?Plus|IS2S|Next_P_PRO|IRS002-16)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Vox[_ ]([45])S" , model : "Vox $1S" , } , Model { regex : "VOX Alpha Plus" , model : "Vox Alpha Plus" , } , Model { regex : "VOX STEEL Plus" , model : "Vox Steel Plus" , } , Model { regex : "VOX Alpha" , model : "Vox Alpha" , } , Model { regex : "VOX Energy" , model : "Vox Energy" , } , Model { regex : "VOX POP plus" , model : "Vox Pop Plus" , } , Model { regex : "VOX POP Pro" , model : "Vox Pop Pro" , } , Model { regex : "Next_P_PRO" , model : "Next P Pro" , } , Model { regex : "IS2_?Plus" , model : "IS2 Plus" , } , Model { regex : "IRS002-16" , model : "I-S6" , } , Model { regex : "IS2S" , model : "IS2S" , } ,]) , }) , ("Planet Computers" , Brand { regex : "(Cosmo_Communicator)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Hezire" , Brand { regex : "(HTB801)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Spark" , Brand { regex : "Spark Plus 3(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Plus 3" , model : "Plus 3" , } ,]) , }) , ("IT" , Brand { regex : "IT-(?:1101S?|1101-QUAD)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "IT-1101-QUAD" , model : "1101 Quad" , } , Model { regex : "IT-(1101S?)" , model : "$1" , } ,]) , }) , ("Unnecto" , Brand { regex : "Unnecto|(?:U513|U5151|U61[1356]|U7[12]0|U-830|U90[35])(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "U513" , model : "Drone XT" , } , Model { regex : "U5151" , model : "Bolt" , } , Model { regex : "U611" , model : "Quattro X" , } , Model { regex : "U613" , model : "Quattro S" , } , Model { regex : "U615" , model : "Quattro M" , } , Model { regex : "U616" , model : "U616" , } , Model { regex : "U710" , model : "Quattro U710" , } , Model { regex : "U720" , model : "Quattro Z" , } , Model { regex : "U-830" , model : "Rush" , } , Model { regex : "U903" , model : "Air" , } , Model { regex : "U905" , model : "Air 5.5" , } ,]) , }) , ("Vodacom" , Brand { regex : "(?:Vodacom)[ _](Power Tab 10)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("iDroid" , Brand { regex : "APACHE G6(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("Apache G6") , models : None , }) , ("Aspera" , Brand { regex : "ASPERA|(?:Wren)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "ASPERA[ _](R5h|RT3|A4[02]|A50)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Wren(?:[);/ ]|$)" , model : "Wren" , } ,]) , }) , ("Mecool" , Brand { regex : "(?:KM9PRO|BB2 PRO|K[I]{1,3} PRO|KI PLUS|KM9_TV_BOX|M8SPROW|M8S (?:PLUS|PRO) (?:DVB|[LW]|PLUS)|M8S (?:MAX|PRO))(?:[);/ ]|$)" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "KM9PRO(?:[);/ ]|$)" , model : "KM9 Pro" , } , Model { regex : "KM9_TV_BOX(?:[);/ ]|$)" , model : "KM9 TV Box" , } , Model { regex : "BB2 PRO(?:[);/ ]|$)" , model : "BB2 Pro" , } , Model { regex : "(K[I]{1,3}) PRO(?:[);/ ]|$)" , model : "$1 Pro" , } , Model { regex : "KI PLUS(?:[);/ ]|$)" , model : "KI Plus" , } , Model { regex : "M8SPROW(?:[);/ ]|$)" , model : "M8S Pro W" , } , Model { regex : "M8S PLUS DVB(?:[);/ ]|$)" , model : "M8S Plus DVB" , } , Model { regex : "M8S PLUS ([LW])(?:[);/ ]|$)" , model : "M8S Plus $1" , } , Model { regex : "M8S PRO ([LW])(?:[);/ ]|$)" , model : "M8S Pro $1" , } , Model { regex : "M8S PRO PLUS(?:[);/ ]|$)" , model : "M8S Pro Plus" , } , Model { regex : "M8S PRO(?:[);/ ]|$)" , model : "M8S Pro" , } , Model { regex : "M8S MAX(?:[);/ ]|$)" , model : "M8S Max" , } ,]) , }) , ("EXCEED" , Brand { regex : "(EX7SL?4|EX10S4)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Yezz" , Brand { regex : "Yezz|ANDY[ _]|(?:4E4|A5EI|LIV1)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "4E4" , model : "Andy 4E4" , } , Model { regex : "Yezz-AC4EI" , model : "Andy 4EI" , } , Model { regex : "YEZZ-A4M" , model : "Andy A4M" , } , Model { regex : "A5EI" , model : "Andy A5EI" , } , Model { regex : "LIV1" , model : "LIV1" , } , Model { regex : "Andy[ _]([A-Z]*[0-9]\\.[0-9][A-Z0-9]*)(?:[ _](LTE))?" , model : "Andy $1 $2" , } , Model { regex : "Andy[ _]([A-Z]*[0-9])([0-9][A-Z0-9]*)(?:[ _](LTE))?" , model : "Andy $1.$2 $3" , } , Model { regex : "Andy[ _]([A-Z]*[0-9][A-Z0-9]+)(?:[ _](LTE))?" , model : "Andy $1 $2" , } ,]) , }) , ("Grundig" , Brand { regex : "GR?-TB[0-9]+[a-z]*|GRUNDIG|portalmmm/2\\.0 G|AFTEU(?:011|014|FF014)" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "(GR?-TB[0-9]+[a-z]*)" , model : "$1" , } , Model { regex : "GRUNDIG ([a-z0-9]+)" , model : "$1" , } , Model { regex : "portalmmm/2\\.0 G([a-z0-9]+)" , model : "G$1" , } , Model { regex : "AFTEU014" , model : "Vision 7 4K (2019)" , } , Model { regex : "AFTEUFF014" , model : "OLED 4K (2019)" , } , Model { regex : "AFTEU011" , model : "Vision 6 HD (2019)" , } ,]) , }) , ("Komu" , Brand { regex : "Komu[ -]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Komu[ -]([^;/]+) Build" , model : "$1" , } , Model { regex : "Komu[ -]([a-z0-9_-]+)" , model : "$1" , } ,]) , }) , ("Star" , Brand { regex : "N(9[5678]00|8800|9000|9977)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "N9000" , model : "Note 3" , } , Model { regex : "N(9[5678]00|8800|9977)(?:[);/ ]|$)" , model : "N$1" , } ,]) , }) , ("Shtrikh-M" , Brand { regex : "SHTRIH-SMARTPOS-F2(?:[);/ ]|$)" , device : Some ("peripheral") , model : Some ("Smartpos F2") , models : None , }) , ("Homtom" , Brand { regex : "Homtom|(?:HT[0-9]{1,2})(?: ?Pro)?(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(?:Homtom[_ ])?HT ?([0-9]{1,2}(?: ?Pro)?)(?:[);/ ]|$)" , model : "HT$1" , } , Model { regex : "Homtom ([^;/]+) Build" , model : "$1" , } ,]) , }) , ("Oysters" , Brand { regex : "Oysters|T84ERI[ _]3G|T72HM(s_)?3G|T102MS_3G|T102ER3G|(T74HMi|T84Bi)[_ ]4G|T74MR4G|T84Ni[_ ][34]G|Pacific(?:[ ]?800i|E)|T104B_[34]G|IndianV|T72HA_3G|T74D_3G|T74N_3G|T74SC_3G|T74Mai_3G|T104MBi_3G|T104SCi_3G|T104ER4G|Atlantic4G|AntarcticE|T7V 3G|Pacific(?:VS?|4G)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "Pacific[ ]?800i" , model : "Pacific 800i" , } , Model { regex : "PacificE" , model : "Pacific E" , } , Model { regex : "Atlantic4G" , model : "Atlantic 4G" , } , Model { regex : "AntarcticE" , model : "Antarctic E" , } , Model { regex : "IndianV" , model : "Indian V" , } , Model { regex : "(?:Oysters[_ ])?Pacific(VS?|4G)" , model : "Pacific $1" , } , Model { regex : "Oysters ((?:Arctic|Indian|Atlantic|Pacific)[^/;]+) Build" , model : "$1" , } , Model { regex : "(T84ERI[ _]3G|T72HM(s_)?3G|(?:(T74HMi|T84Bi)[_ ]4G)|T84Ni[_ ][34]G)" , model : "$1" , } , Model { regex : "(T74MR|T102MS|T104B|T74SC|T74[DN]|T72HA|T102ER|T104SCi|T104MBi|T104ER|T7V)[ _]?([34]G)" , model : "$1 $2" , } , Model { regex : "T74Mai_3G" , model : "T74MAi 3G" , } , Model { regex : "Oysters ([^/;]+)( Build|\\))" , model : "$1" , } ,]) , }) , ("VAIO" , Brand { regex : "(?:VPA051|VA-10J)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "VPA051" , model : "Phone A" , } , Model { regex : "(VA-10J)" , model : "$1" , } ,]) , }) , ("Desay" , Brand { regex : "Desay" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Desay[ _-]?([^;/)]+) Build" , model : "$1" , } , Model { regex : "Desay[ _-]?([^;/)]+)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("KDDI" , Brand { regex : "kddi-([a-z0-9]+)" , device : Some ("feature phone") , model : Some ("$1") , models : None , }) , ("Maxcom" , Brand { regex : "(MS(?:45[036]|505|514)|MS457(?:PLUS)?)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(MS457)PLUS(?:[);/ ]|$)" , model : "$1 Plus" , } , Model { regex : "MS(45[0367]|505|514)(?:[);/ ]|$)" , model : "MS$1" , } ,]) , }) , ("Bluedot" , Brand { regex : "BLUEDOT[_ ]|(?:BNT-71)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "(?:BLUEDOT[_ ])?(BNP-500)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "(BNT-71)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Unimax" , Brand { regex : "U((?:67[013]|680)C|(?:452|504)TL|683CL|693CL)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("U$1") , models : None , }) , ("Leagoo" , Brand { regex : "(?:MY)?LEAGOO[ _-]?|(?:M5 EDGE|KIICAA (POWER|MIX)|Leapad[ _](?:X|7s)|Elite [15]|Venture 1|Z10-E)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "LEAGOO[- _]M8[_-]?Pro(?:[);/ ]|$)" , model : "M8 Pro" , } , Model { regex : "LEAGOO[- _](Z[156]|M[58]|T1)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "M5 EDGE" , model : "M5 Edge" , } , Model { regex : "LEAGOO[_ ]Lead([57])" , model : "Lead $1" , } , Model { regex : "KIICAA POWER" , model : "KICCAA Power" , } , Model { regex : "KIICAA MIX" , model : "KICCAA Mix" , } , Model { regex : "Elite ([15])(?:[);/ ]|$)" , model : "Elite $1" , } , Model { regex : "Venture 1(?:[);/ ]|$)" , model : "Venture 1" , } , Model { regex : "(?:LEAGOO[- _])?(Z10-E|M6)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "(?:My)?Leagoo[- _](E4)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "(?:Leapad[ _])(7s|10|X)" , model : "LeaPad $1" , } ,]) , }) , ("Pomp" , Brand { regex : "POMP[ _-]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "POMP[ _-]([^;/]+) Build" , model : "$1" , } , Model { regex : "POMP[ _-]([^;/)]+)(?:[;/)]|$)" , model : "$1" , } ,]) , }) , ("Tinmo" , Brand { regex : "TiNMO[- _](A11|K3)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Advance" , Brand { regex : "Hollogram|(?:HL(?:4936|6246|[56]575|5[67]67)|IntroTr3544|Pr(?:61(?:4[56]|50)|60[27]0|5[69]50)|Tr3845)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "IntroTr3544|Tr3845" , model : "Intro" , } , Model { regex : "Pr(61(?:4[56]|50)|60[27]0|5[69]50)" , model : "Prime PR$1" , } , Model { regex : "HL(4936|6246|[56]575|5[67]67)" , model : "Hollogram HL$1" , } , Model { regex : "Hollogram ([^;/)]+)(?: Build|[;)])" , model : "Hollogram $1" , } ,]) , }) , ("Neomi" , Brand { regex : "NEO[ ]?(90[689])(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("Neo $1") , models : None , }) , ("Zaith" , Brand { regex : "(Z3211G)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Sony" , Brand { regex : "Sony(?: ?Ericsson)?|SGP|Xperia|(?:[4-9]0[12])SO|C1[569]0[45]|C2[01]0[45]|C230[45]|C530[236]|C550[23]|C6[56]0[236]|C6616|C68(?:0[26]|[34]3)|C69(?:0[236]|16|43)|D200[45]|D21(?:0[45]|14)|D22(?:0[236]|12|43)|D230[2356]|D240[36]|D25(?:02|33)|D510[236]|D530[36]|D5316|D5322|D5503|D58[03]3|D65(?:0[23]|43|63)|D66[03458]3|D66[14]6|D6708|E(?:20[0345]3|2006|210[45]|2115|2124|230[36]|2312|23[356]3|530[36]|53[3456]3|5506|55[356]3|56[46305][36]|58[02]3|65[35]3|66[0358]3|68[358]3)|I[34]312|I4332|F311[12356]|F331[13]|F321[12356]|F5[13]21|F5122|F813[12]|F833[12]|G312[135]|G311[26]|G322[136]|G3212|G331[123]|G3412|G3416|G342[136]|G823[12]|G834[123]|G8[14]4[12]|G8188|H(?:3113|3123|3133|3213|3223|3311|3321|4113|4133|4213|4233|4311|4331|4413|4433|82[167]6|83[12]4|8416|9436)|(?:WT|LT|SO|ST|SK|MK)[0-9]+[a-z]+[0-9]*(?: Build|\\))|X?L39H|XM50[ht]|W960|portalmmm/2\\.0 K|S3[69]h|SOG01|SOL2[2346]|SOV3[1-9]|SOV4[0-3]|X10[ia]v?|E1[05][ai]v?|MT[0-9]{2}[a-z]? Build|SO-0(?:[12]C|[345]D|[234]E|[1-5]F|[1-5]G|[1-4]H|[1-4]J|[1-5]K|1M|[1-3]L)|R800[aix]|J3173|J82[17]0|J9110|J92[16]0|J81[17]0|I[34]113|I3[12]23|I42[19]3|H9493|H8296|H8166|H4493|G2299|LiveWithWalkman|BRAVIA|SGP771|E3 Dual|A[01]01SO|I4193|E6508|SOT31|SO-[45]1A|SO-52A|XQ-A[DT]51|XQ-A[TU]42|XQ-AS[67]2|XQ-A[TSU]52|SOL25|SOG02|A002SO|NW-(A100|Z1000)Series|J3273" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(?:Sony(?:Ericsson)?)?E10[ai]v?" , model : "Xperia X10 mini" , } , Model { regex : "(?:Sony(?:Ericsson)?)?U20" , model : "Xperia X10 mini pro" , } , Model { regex : "(?:Sony(?:Ericsson)?)?E15[ai]v?" , model : "Xperia X8" , } , Model { regex : "(?:Sony(?:Ericsson)?)?(LT15[ai]?v?|SO-01C)" , model : "Xperia arc" , } , Model { regex : "(?:Sony(?:Ericsson)?)?LT18[ai]v?" , model : "Xperia arc S" , } , Model { regex : "(?:Sony(?:Ericsson)?)?MT11" , model : "Xperia neo V" , } , Model { regex : "(?:Sony(?:Ericsson)?)?MT15" , model : "Xperia neo" , } , Model { regex : "(?:Sony(?:Ericsson)?)?MT27" , model : "Xperia Sola" , } , Model { regex : "(?:Sony(?:Ericsson)?)?MK16[ai]" , model : "Xperia pro" , } , Model { regex : "(?:Sony(?:Ericsson)?)?ST15[ai]" , model : "Xperia mini" , } , Model { regex : "(?:Sony(?:Ericsson)?)?ST17[ai]" , model : "Xperia active" , } , Model { regex : "(?:Sony(?:Ericsson)?)?SO-02L" , model : "Xperia Ace" , } , Model { regex : "(?:Sony(?:Ericsson)?)?ST18[ai]" , model : "Xperia ray" , } , Model { regex : "(?:Sony(?:Ericsson)?)?SK17[ai]?" , model : "Xperia mini pro" , } , Model { regex : "(?:Sony(?:Ericsson)?)?X10[ai]v?" , model : "Xperia X10" , } , Model { regex : "(?:Sony(?:Ericsson)?)M1" , model : "Aspen" , } , Model { regex : "(?:Sony(?:Ericsson)?)?R800" , model : "Xperia PLAY" , } , Model { regex : "(?:Sony(?:Ericsson)?)?WT19|LiveWithWalkman" , model : "Live with Walkman" , } , Model { regex : "(?:Sony(?:Ericsson)?)?CK13i" , model : "txt" , } , Model { regex : "(?:Sony(?:Ericsson)?)?CK15[ai]" , model : "txt pro" , } , Model { regex : "(?:Sony(?:Ericsson)?)?F100i" , model : "Jalou" , } , Model { regex : "(?:Sony(?:Ericsson)?)?J105" , model : "Naite" , } , Model { regex : "(?:Sony(?:Ericsson)?)?J108" , model : "Cedar" , } , Model { regex : "(?:Sony(?:Ericsson)?)?J10" , model : "Elm" , } , Model { regex : "(?:Sony(?:Ericsson)?)?J20" , model : "Hazel" , } , Model { regex : "(?:Sony(?:Ericsson)?)?U10" , model : "Aino" , } , Model { regex : "(?:Sony(?:Ericsson)?)?U100" , model : "Yari" , } , Model { regex : "(?:Sony(?:Ericsson)?)?U1" , model : "Satio" , } , Model { regex : "(?:Sony(?:Ericsson)?)?U5" , model : "Vivaz" , } , Model { regex : "(?:Sony(?:Ericsson)?)?U8" , model : "Vivaz pro" , } , Model { regex : "(?:Sony(?:Ericsson)?)?W20" , model : "Zylo" , } , Model { regex : "(?:Sony(?:Ericsson)?)?W100" , model : "Spiro" , } , Model { regex : "(?:Sony(?:Ericsson)?)?W150" , model : "Yendo" , } , Model { regex : "(?:Sony(?:Ericsson)?)?W960" , model : "W960" , } , Model { regex : "(?:Sony(?:Ericsson)?)?WT13" , model : "Mix Walkman" , } , Model { regex : "SO-04F" , model : "Xperia A2" , } , Model { regex : "G2299" , model : "Xperia R1 Plus" , } , Model { regex : "SO-04G" , model : "Xperia A4" , } , Model { regex : "(?:Sony(?:Ericsson)?)?I(?:4113|31[12]3)" , model : "Xperia 10" , } , Model { regex : "(?:Sony(?:Ericsson)?)?J3173(?:[);/ ]|$)" , model : "Xperia Ace" , } , Model { regex : "(?:A001SO|XQ-A[TU]52|XQ-AU42|SO-41A|SOV43)(?:[);/ ]|$)" , model : "Xperia 10 II" , } , Model { regex : "A101SO(?:[);/ ]|$)" , model : "Xperia 10 III" , } , Model { regex : "(?:Sony(?:Ericsson)?)?I(?:42[19]3|3223)" , model : "Xperia 10 Plus" , } , Model { regex : "(?:Sony(?:Ericsson)?)?I4193" , model : "Xperia 10 Dual" , } , Model { regex : "(?:Sony(?:Ericsson)?)?(?:J(?:9110|81[17]0)|SOV40|SO-03L|802SO)" , model : "Xperia 1" , } , Model { regex : "(?:Sony(?:Ericsson)?)?(?:SOG01|SO-51A|XQ-AT42|XQ-AT51)(?:[);/ ]|$)" , model : "Xperia 1 II" , } , Model { regex : "(?:Sony(?:Ericsson)?)?LT22i|Xperia P" , model : "Xperia P" , } , Model { regex : "(?:Sony(?:Ericsson)?)?LT25i|Xperia V" , model : "Xperia V" , } , Model { regex : "(?:Sony(?:Ericsson)?)?J92[16]0" , model : "Xperia 5 Dual" , } , Model { regex : "(?:Sony(?:Ericsson)?)?(?:J82[17]0|SO-01M|SOV41|901SO)" , model : "Xperia 5" , } , Model { regex : "(?:Sony(?:Ericsson)?)?(?:SOG02|A002SO|XQ-AS[567]2|SO-52A)" , model : "Xperia 5 II" , } , Model { regex : "(?:Sony(?:Ericsson)?)?(?:SOV42|902SO)" , model : "Xperia 8" , } , Model { regex : "(?:Sony(?:Ericsson)?)?J3273" , model : "Xperia 8 Lite" , } , Model { regex : "(?:Sony(?:Ericsson)?)?LT26ii" , model : "Xperia SL" , } , Model { regex : "(?:Sony(?:Ericsson)?)?LT26i|Xperia S(?:[);/ ]|$)" , model : "Xperia S" , } , Model { regex : "(?:Sony(?:Ericsson)?)?SO-02C" , model : "Xperia arco" , } , Model { regex : "(?:Sony(?:Ericsson)?)?SO-03D" , model : "Xperia arco HD" , } , Model { regex : "(?:Sony(?:Ericsson)?)?LT26w" , model : "Xperia arco S" , } , Model { regex : "(?:Sony(?:Ericsson)?)?LT28[aih]" , model : "Xperia ion" , } , Model { regex : "(?:Sony(?:Ericsson)?)?LT29i|Xperia TX(?:[);/ ]|$)" , model : "Xperia TX" , } , Model { regex : "(?:Sony(?:Ericsson)?)?LT30a" , model : "Xperia T LTE" , } , Model { regex : "(?:Sony(?:Ericsson)?)?LT30p" , model : "Xperia T" , } , Model { regex : "(?:Sony(?:Ericsson)?)?ST21[ia]2" , model : "Xperia tipo dual" , } , Model { regex : "(?:Sony(?:Ericsson)?)?ST21[ia]" , model : "Xperia tipo" , } , Model { regex : "(?:Sony(?:Ericsson)?)?ST23[ia]" , model : "Xperia miro" , } , Model { regex : "(?:Sony(?:Ericsson)?)?ST25[ia]" , model : "Xperia U" , } , Model { regex : "(?:Sony(?:Ericsson)?)?SOL22" , model : "Xperia UL" , } , Model { regex : "(?:Sony(?:Ericsson)?)?ST26[ia]" , model : "Xperia J" , } , Model { regex : "(?:Sony(?:Ericsson)?)?ST27[ia]" , model : "Xperia go" , } , Model { regex : "(?:Sony(?:Ericsson)?)?C150[45]" , model : "Xperia E" , } , Model { regex : "(?:Sony(?:Ericsson)?)?C160[45]" , model : "Xperia E Dual" , } , Model { regex : "(?:Sony(?:Ericsson)?)?(?:E210[45]|E2115|E2124)" , model : "Xperia E4" , } , Model { regex : "(?:Sony(?:Ericsson)?)?E20[05]3|E2006" , model : "Xperia E4G" , } , Model { regex : "(?:Sony(?:Ericsson)?)?C190[45]" , model : "Xperia M" , } , Model { regex : "(?:Sony(?:Ericsson)?)?C200[45]" , model : "Xperia M Dual" , } , Model { regex : "(?:Sony(?:Ericsson)?)?C210[45]|S36h" , model : "Xperia L" , } , Model { regex : "(?:Sony(?:Ericsson)?)?C230[45]|S39h" , model : "Xperia C" , } , Model { regex : "(?:Sony(?:Ericsson)?)?C530[236]|Xperia SP(?:[);/ ]|$)" , model : "Xperia SP" , } , Model { regex : "(?:Sony(?:Ericsson)?)?C550[23]" , model : "Xperia ZR" , } , Model { regex : "(?:Sony(?:Ericsson)?)?C650[236]|Xperia ZL(?:[);/ ]|$)" , model : "Xperia ZL" , } , Model { regex : "(?:Sony(?:Ericsson)?)?SOL25(?:[);/ ]|$)" , model : "Xperia ZL2" , } , Model { regex : "(?:Sony(?:Ericsson)?)?(?:C66(?:0[236]|16)|SO-02E)" , model : "Xperia Z" , } , Model { regex : "(?:Sony(?:Ericsson)?)?(?:C68(?:0[26]|[34]3)|XL39H|SOL24)|Xperia Z Ultra(?:[);/ ]|$)" , model : "Xperia Z Ultra" , } , Model { regex : "Xperia Z(?:[);/ ]|$)" , model : "Xperia Z" , } , Model { regex : "(?:Sony(?:Ericsson)?)?D200[45]" , model : "Xperia E1" , } , Model { regex : "(?:Sony(?:Ericsson)?)?D21(?:0[45]|14)" , model : "Xperia E1 Dual" , } , Model { regex : "(?:Sony(?:Ericsson)?)?D22(?:0[236]|43)" , model : "Xperia E3" , } , Model { regex : "(?:Sony(?:Ericsson)?)?D2212|E3 Dual" , model : "Xperia E3 Dual" , } , Model { regex : "(?:Sony(?:Ericsson)?)?E20[34]3" , model : "Xperia E4g Dual" , } , Model { regex : "H33[12]1" , model : "Xperia L2" , } , Model { regex : "H43[13]1" , model : "Xperia L2 Dual" , } , Model { regex : "I3312" , model : "Xperia L3" , } , Model { regex : "I43[13]2" , model : "Xperia L3 Dual" , } , Model { regex : "XQ-AD51" , model : "Xperia L4" , } , Model { regex : "(?:Sony(?:Ericsson)?)?D2302" , model : "Xperia M2 Dual" , } , Model { regex : "(?:Sony(?:Ericsson)?)?D230[356]" , model : "Xperia M2" , } , Model { regex : "(?:Sony(?:Ericsson)?)?D240[36]" , model : "Xperia M2 Aqua" , } , Model { regex : "(?:Sony(?:Ericsson)?)?(?:E230[36]|E23[35]3)" , model : "Xperia M4 Aqua" , } , Model { regex : "(?:Sony(?:Ericsson)?)?(?:E2312|E2363)" , model : "Xperia M4 Aqua Dual" , } , Model { regex : "(?:Sony(?:Ericsson)?)?E56[05][36]" , model : "Xperia M5" , } , Model { regex : "(?:Sony(?:Ericsson)?)?E56[436]3" , model : "Xperia M5 Dual" , } , Model { regex : "(?:Sony(?:Ericsson)?)?D2502" , model : "Xperia C3 Dual" , } , Model { regex : "(?:Sony(?:Ericsson)?)?D2533" , model : "Xperia C3" , } , Model { regex : "(?:Sony(?:Ericsson)?)?E53[05]3|E5306" , model : "Xperia C4" , } , Model { regex : "(?:Sony(?:Ericsson)?)?E53[0346]3" , model : "Xperia C4 Dual" , } , Model { regex : "(?:Sony(?:Ericsson)?)?E5506|E5553" , model : "Xperia C5 Ultra" , } , Model { regex : "(?:Sony(?:Ericsson)?)?E55[36]3" , model : "Xperia C5 Ultra Dual" , } , Model { regex : "(?:Sony(?:Ericsson)?)?D510[236]" , model : "Xperia T3" , } , Model { regex : "(?:Sony(?:Ericsson)?)?(?:D530[36]|D5316|XM50[ht])" , model : "Xperia T2 Ultra" , } , Model { regex : "(?:Sony(?:Ericsson)?)?D5322" , model : "Xperia T2 Ultra Dual" , } , Model { regex : "(?:Sony(?:Ericsson)?)?D5503|Xperia Z1 Compact" , model : "Xperia Z1 Compact" , } , Model { regex : "(?:Sony(?:Ericsson)?)?(?:C69(?:0[236]|16|43)|SOL23|L39H|SO-0[12]F)|Xperia Z1(?:[);/ ]|$)" , model : "Xperia Z1" , } , Model { regex : "(?:Sony(?:Ericsson)?)?(?:D58[03]3|SO-02G)|Xperia Z3 Compact(?:[);/ ]|$)" , model : "Xperia Z3 Compact" , } , Model { regex : "Xperia Z2 Tablet Wifi" , model : "Xperia Z2 Tablet WiFi" , } , Model { regex : "SGP561" , model : "Xperia Z2 Tablet" , } , Model { regex : "(?:Sony(?:Ericsson)?)?(?:D65(?:0[23]|43)|SO-03F)|Xperia Z2(?:[);/ ]|$)" , model : "Xperia Z2" , } , Model { regex : "D6563" , model : "Xperia Z2a" , } , Model { regex : "(?:Sony(?:Ericsson)?)?(?:D66[045]3|D66[14]6|SO-01G|SOL26|401SO)|Xperia Z3(?:[);/ ]|$)" , model : "Xperia Z3" , } , Model { regex : "(?:Sony(?:Ericsson)?)?(?:D6633|D6683)" , model : "Xperia Z3 Dual" , } , Model { regex : "(?:Sony(?:Ericsson)?)?(?:E65[35]3)" , model : "Xperia Z3+" , } , Model { regex : "(?:Sony(?:Ericsson)?)?(?:D6708)" , model : "Xperia Z3v" , } , Model { regex : "SOV31|402SO|SO-03G" , model : "Xperia Z4" , } , Model { regex : "E6508" , model : "Xperia Z4v" , } , Model { regex : "SGP771|SOT31|SO-05G" , model : "Xperia Z4" , } , Model { regex : "(?:Sony(?:Ericsson)?)?(?:E58[02]3|SO-02H)" , model : "Xperia Z5 Compact" , } , Model { regex : "(?:Sony(?:Ericsson)?)?(?:E66[05]3|SOV32|501SO|SO-01H)" , model : "Xperia Z5" , } , Model { regex : "(?:Sony(?:Ericsson)?)?E66[38]3" , model : "Xperia Z5 Dual" , } , Model { regex : "(?:Sony(?:Ericsson)?)?(?:E68[58]3|SO-03H)" , model : "Xperia Z5 Premium" , } , Model { regex : "(?:Sony(?:Ericsson)?)?E6833" , model : "Xperia Z5 Premium Dual" , } , Model { regex : "(?:Sony(?:Ericsson)?)?F311[135]" , model : "Xperia XA" , } , Model { regex : "(?:Sony(?:Ericsson)?)?F311[26]" , model : "Xperia XA Dual" , } , Model { regex : "(?:Sony(?:Ericsson)?)?F321[135]" , model : "Xperia XA Ultra" , } , Model { regex : "(?:Sony(?:Ericsson)?)?F321[26]" , model : "Xperia XA Ultra Dual" , } , Model { regex : "(?:Sony(?:Ericsson)?)?F833[12]|SOV34|601SO|SO-01J" , model : "Xperia XZ" , } , Model { regex : "(?:Sony(?:Ericsson)?)?(?:701SO|SOV36|G834[123]|SO-01K)" , model : "Xperia XZ1" , } , Model { regex : "(?:Sony(?:Ericsson)?)?G8441|SO-02K" , model : "Xperia XZ1 Compact" , } , Model { regex : "(?:Sony(?:Ericsson)?)?F331[13]" , model : "Xperia E5" , } , Model { regex : "(?:Sony(?:Ericsson)?)?G312[135]|G311[26]" , model : "Xperia XA1" , } , Model { regex : "(?:Sony(?:Ericsson)?)?G341[26]|G342[13]" , model : "Xperia XA1 Plus" , } , Model { regex : "(?:Sony(?:Ericsson)?)?G3426" , model : "Xperia XA1 Plus Dual" , } , Model { regex : "(?:Sony(?:Ericsson)?)?G322[136]|G3212" , model : "Xperia XA1 Ultra" , } , Model { regex : "(?:Sony(?:Ericsson)?)?H31[123]3" , model : "Xperia XA2" , } , Model { regex : "(?:Sony(?:Ericsson)?)?H41[13]3" , model : "Xperia XA2 Dual" , } , Model { regex : "H44[19]3" , model : "Xperia XA2 Plus Dual" , } , Model { regex : "H4433" , model : "H4433" , } , Model { regex : "(?:Sony(?:Ericsson)?)?H(?:3213|3223|4213|4233)" , model : "Xperia XA2 Ultra" , } , Model { regex : "(?:Sony(?:Ericsson)?)?G823[12]|SOV35|602SO|SO-03J" , model : "Xperia XZs" , } , Model { regex : "(?:Sony(?:Ericsson)?)?(?:G814[12]|G8188|SO-04[JK])" , model : "Xperia XZ Premium" , } , Model { regex : "(?:Sony(?:Ericsson)?)?(?:H83[12]4|H82[17]6|SOV37|SO-03K|H8296|702SO)" , model : "Xperia XZ2" , } , Model { regex : "H8266" , model : "Xperia XZ2 Dual" , } , Model { regex : "SO-05K" , model : "Xperia XZ2 Compact" , } , Model { regex : "(?:H8166|SOV38)(?:[);/ ]|$)" , model : "Xperia XZ2 Premium Dual" , } , Model { regex : "(?:Sony(?:Ericsson)?)?(?:H(8416|9436|9493)|SO-01L|SOV39|801SO)" , model : "Xperia XZ3" , } , Model { regex : "(?:Sony(?:Ericsson)?)?G331[13]" , model : "Xperia L1" , } , Model { regex : "(?:Sony(?:Ericsson)?)?G3312" , model : "Xperia L1 Dual" , } , Model { regex : "(?:Sony(?:Ericsson)?)?SO-04E" , model : "Xperia A" , } , Model { regex : "(?:Sony(?:Ericsson)?)?SO-04D" , model : "Xperia GX" , } , Model { regex : "(?:Sony(?:Ericsson)?)?SO-05D" , model : "Xperia SX" , } , Model { regex : "(?:Sony(?:Ericsson)?)?F5121" , model : "Xperia X" , } , Model { regex : "(?:Sony(?:Ericsson)?)?F5122" , model : "Xperia X Dual" , } , Model { regex : "(?:Sony(?:Ericsson)?)?F5321|SO-02J" , model : "Xperia X Compact" , } , Model { regex : "(?:Sony(?:Ericsson)?)?(?:F8131|502SO|SOV33|SO-04H)" , model : "Xperia X Performance" , } , Model { regex : "(?:Sony(?:Ericsson)?)?F8132" , model : "Xperia X Performance Dual" , } , Model { regex : "SGP(?:311|312|321)(?:[);/ ]|$)|SO-03E" , model : "Xperia Tablet Z" , } , Model { regex : "SGP712(?:[);/ ]|$)" , model : "Xperia Tablet Z4" , } , Model { regex : "SGP(?:511|512|521)(?:[);/ ]|$)|SO-05F" , model : "Xperia Tablet Z2" , } , Model { regex : "SGP(?:6[124]1|612)(?:[);/ ]|$)" , model : "Xperia Tablet Z3 Compact" , } , Model { regex : "SGPT(?:12|121|122|123|13|131|132|133)(?:[);/ ]|$)" , model : "Xperia Tablet S" , } , Model { regex : "(?:BRAVIA )(2K GB ATV3|4K UR2|4K GB ATV3|4K GB|4K 2015|2015)(?:[);/ ]|$)" , model : "Bravia $1" , } , Model { regex : "NW-A100Series" , model : "Walkman A100" , } , Model { regex : "NW-Z1000Series" , model : "Walkman Z1000" , } , Model { regex : "SonyBDP|SonyDBV" , model : "Blu-ray Player" , } , Model { regex : "(?:Sony-)?(KDL?-?[0-9a-z]+)" , model : "$1" , } , Model { regex : "Opera TV Store.*(?:Sony-)([0-9a-z\\-_]+)" , model : "$1" , } , Model { regex : "((?:WT|SO|ST|SK|MK)[0-9]+[a-z]*[0-9]*)(?: Build|\\))" , model : "$1" , } , Model { regex : "(MT[0-9]{2}[a-z]?)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "portalmmm/2.0 K([a-z0-9]+)" , model : "K$1" , } , Model { regex : "Sony ?Ericsson?([^/;]*) Build" , model : "$1" , } , Model { regex : "SonyEricsson([CGJKPTWZ][0-9]+[a-z]+)/" , model : "$1" , } , Model { regex : "Sony ?Ericsson ?([a-z0-9\\-]+)" , model : "$1" , } , Model { regex : "Sony (Tablet[^/;]*) Build" , model : "$1" , } , Model { regex : "(SGP[^/;]*) Build" , model : "$1" , } , Model { regex : "Xperia ([^/;]*Tablet[^/;]*) Build" , model : "Xperia $1" , } , Model { regex : "Xperia ([^;/]+) Build" , model : "Xperia $1" , } , Model { regex : "Sony[ -]?([^/;]*) Build" , model : "$1" , } , Model { regex : "Sony[ -]?([a-z0-9\\-]+)" , model : "$1" , } ,]) , }) , ("Wexler" , Brand { regex : "Wexler|(?:ULTIMA 7 TWIST PLUS|TAB10iQ3G|TAB[ _]10Q)(?:[);/ ]|$)|ZEN[ _](?:4\\.[57]|5)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "(?:Wexler[ _\\-\\.])?ZEN[ _]4\\.5(?:[);/ ]|$)" , model : "ZEN 4.5" , } , Model { regex : "(?:Wexler[ _\\-\\.])?ZEN[ _]4\\.7(?:[);/ ]|$)" , model : "ZEN 4.7" , } , Model { regex : "(?:Wexler[ _\\-\\.])?ZEN[ _]5(?:[);/ ]|$)" , model : "ZEN 5" , } , Model { regex : "(?:Wexler[ _\\-\\.])?TAB[ _]10Q(?:[);/ ]|$)" , model : "TAB 10Q" , } , Model { regex : "TAB10iQ3G(?:[);/ ]|$)" , model : "TAB 10iQ 3G" , } , Model { regex : "Wexler[ _\\-\\.]([^;/]+) Build" , model : "$1" , } , Model { regex : "Wexler[ _\\-\\.]([^);/]+)(?:[);/]|$)" , model : "$1" , } , Model { regex : "(ULTIMA 7 TWIST PLUS)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Crius Mea" , Brand { regex : "(Q7A\\+?)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Poppox" , Brand { regex : "Poppox P3" , device : Some ("smartphone") , model : Some ("P3") , models : None , }) , ("E-Boda" , Brand { regex : "E-Boda|Eclipse_(?:G400M|G500)|Revo R77 GPS" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "E-Boda ((?:Revo|Izzycomm|Essential|Intelligence|Supreme)[^/;]+) Build" , model : "$1" , } , Model { regex : "Revo R77 GPS" , model : "Revo R77 GPS" , } , Model { regex : "Eclipse_(G400M|G500)" , model : "Eclipse $1" , } , Model { regex : "E-Boda ([^/;]+) Build" , model : "$1" , } ,]) , }) , ("Irbis" , Brand { regex : "IRBIS|TZ(1(?:0[04]|42|5[01]|84|65|7[01345-89]|8[356]|9[12578])|49|55|72|22|7(?:0[127]|1[1-4679]|2[021567]|3[025-8]|4[257]|5[23457]|6[12]|72|7[17]|8[1]|9[147])|8(?:[34]1|5[3-8]|6[2-5]|7[12478]|8[1-5]|9[0127])|96[0-9])|TZ85|TZ13|TZ(?:one|art|HIT|81L)|(SP(?:0[56]|2[01]|4[1-36]|40[12]|45[345]|49[34]|50|51[0147]|531|54[12]|55[0124]|571))(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "(TZ(?:[0-9]+)|TZ(?:one|art|HIT|81L))(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "(SP[0-9]+)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Noain" , Brand { regex : "NOAIN" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "NOAIN[ _-]([^;/]+) Build" , model : "$1" , } , Model { regex : "NOAIN[ _-]([^;/)]+)(?:[;/)]|$)" , model : "$1" , } ,]) , }) , ("Xgody" , Brand { regex : "XGODY" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "XGODY Y17(?:[);/ ]|$)" , model : "Y17" , } , Model { regex : "XGODY_X96(?:[);/ ]|$)" , model : "X96" , } ,]) , }) , ("AIS" , Brand { regex : "iris708|Kingcomm C500" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "iris708" , model : "LAVA PRO 4.5" , } , Model { regex : "Kingcomm C500" , model : "Super Smart Plus X3" , } ,]) , }) , ("Landvo" , Brand { regex : "XM[123]00|(?<!Blade )S6 Build" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "S6 Build" , model : "S6" , } , Model { regex : "XM([123])00([^/;]*) Build" , model : "XM$100$2" , } ,]) , }) , ("Hisense" , Brand { regex : "(?:HS-)?Hisense ([^;/]+) Build|Hisense [^);/]+|HISENSE; |HS-(?:G|U|EG?|I|L|T|X)[0-9]+[a-z0-9\\-]*|E270BSA|HWCD100E|HITV300C|M470BS[AE]|EG98|E2281|EG680|I46D1G|HAT4KDTV|HLTE([237]00T|200M|203T|202N|21[023567]T|22[67]T|22[13]E|230E|310[TM]|31[16]T|500T|501N|510[TM]|7[23]0T)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "E270BSA" , model : "Sero 7" , } , Model { regex : "M470BS[AE]" , model : "Sero 7 Pro" , } , Model { regex : "E2281" , model : "Sero 8" , } , Model { regex : "HLTE202N" , model : "A5" , } , Model { regex : "HLTE203T" , model : "A5 Pro CC" , } , Model { regex : "HLTE700T" , model : "A6" , } , Model { regex : "HLTE730T" , model : "A6L" , } , Model { regex : "HLTE221E" , model : "E Max" , } , Model { regex : "HLTE501N" , model : "V Plus" , } , Model { regex : "HLTE223E" , model : "H30" , } , Model { regex : "I46D1G" , model : "Smartfren Andromax R" , } , Model { regex : "EG680" , model : "Smartfren Andromax Z" , } , Model { regex : "EG98" , model : "Smartfren Andromax U2" , } , Model { regex : "HLTE200T(?:[);/ ]|$)" , model : "F26" , } , Model { regex : "HLTE210T(?:[);/ ]|$)" , model : "F28" , } , Model { regex : "HLTE215T(?:[);/ ]|$)" , model : "F29" , } , Model { regex : "HLTE213T(?:[);/ ]|$)" , model : "King Kong 4" , } , Model { regex : "HLTE311T(?:[);/ ]|$)" , model : "King Kong 4 Pro" , } , Model { regex : "HLTE216T(?:[);/ ]|$)" , model : "King Kong 5" , } , Model { regex : "HLTE316T(?:[);/ ]|$)" , model : "King Kong 5 Pro" , } , Model { regex : "HLTE226T(?:[);/ ]|$)" , model : "King Kong 6" , } , Model { regex : "HLTE217T(?:[);/ ]|$)" , model : "F30S" , } , Model { regex : "HLTE227T(?:[);/ ]|$)" , model : "F40" , } , Model { regex : "HLTE310[TM](?:[);/ ]|$)" , model : "H18" , } , Model { regex : "HLTE510[TM](?:[);/ ]|$)" , model : "H20" , } , Model { regex : "HLTE500T(?:[);/ ]|$)" , model : "H11" , } , Model { regex : "HLTE230E(?:[);/ ]|$)" , model : "H40 Lite" , } , Model { regex : "HLTE720T(?:[);/ ]|$)" , model : "U30" , } , Model { regex : "HWCD100E(?:[);/ ]|$)" , model : "U40 Lite" , } , Model { regex : "(HLTE300T|HLTE200M|HLTE212T)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "HITV300C(?:[);/ ]|$)" , model : "E9" , } , Model { regex : "E260T\\+(?:[);/ ]|$)" , model : "Nana" , } , Model { regex : "(HS-(?:G|U|EG?|I|L|T|X)[0-9]+[a-z0-9\\-]*)" , model : "$1" , } , Model { regex : "(HAT4KDTV)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "(?:HS-)?Hisense ([^;/]+) Build" , model : "$1" , } , Model { regex : "Hisense ([^);/]+)" , model : "$1" , } ,]) , }) , ("Spectrum" , Brand { regex : "(CARBONO_5|CUARZO_6|DIAMANTE_5|VULCANO_55)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "VULCANO_55(?:[);/ ]|$)" , model : "Vulcano 5.5\"" , } , Model { regex : "CARBONO_5(?:[);/ ]|$)" , model : "Carbono 5.0\"" , } , Model { regex : "CUARZO_6(?:[);/ ]|$)" , model : "Cuarzo 6.0\"" , } , Model { regex : "DIAMANTE_5(?:[);/ ]|$)" , model : "Diamante 5.0\"" , } ,]) , }) , ("Zatec" , Brand { regex : "ZATEC[_ ]|(?:[ ]WIND|ZPLAY1_2018|Zpower_(?:Plus|2018))(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "ZATEC[_ ]GRAVITY(?:[);/ ]|$)" , model : "Gravity" , } , Model { regex : "[ ]WIND(?:[);/ ]|$)" , model : "Wind" , } , Model { regex : "ZPLAY1_2018" , model : "Zplay (2018)" , } , Model { regex : "Zpower_2018" , model : "Zpower (2018)" , } , Model { regex : "Zpower_Plus" , model : "Zpower Plus" , } ,]) , }) , ("Singtech" , Brand { regex : "Singtech|(?:Sapphire[_ ](?:H50S|H7S?|H90))(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Sapphire[_ ](H50S|H7S?|H90)(?:[);/ ]|$)" , model : "Sapphire $1" , } , Model { regex : "Singtech[ _](Q2|S1)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Amazon" , Brand { regex : "KF(?:OT|ONWI|TT|JWI|JWA|[DFS]OWI|A[PRSU]WI|T[BH]WI|SAW[IA]|GIWI|KAWI|MAWI|MEWI|MUWI|SUWI)(?:[);/ ]|$)|Kindle|Silk/\\d+\\.\\d+|AlexaMediaPlayer|Amazon (?:Tate|Jem)|AFT[ABMNRST]|SD4930UR|AEO(BC|KN)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "AFTA" , model : "Fire TV Cube (Gen 1)" , } , Model { regex : "AFTR" , model : "Fire TV Cube (Gen 2)" , } , Model { regex : "AFTN" , model : "Fire TV (Gen 3)" , } , Model { regex : "AFTB" , model : "Fire TV" , } , Model { regex : "AFT[MST]" , model : "Fire TV stick" , } , Model { regex : "KFFOWI(?:[);/ ]|$)" , model : "Fire 7\"" , } , Model { regex : "KFMUWI(?:[);/ ]|$)" , model : "Fire 7\" (2019)" , } , Model { regex : "KFTT(?:[);/ ]|$)" , model : "Kindle Fire HD" , } , Model { regex : "KFJWI(?:[);/ ]|$)|Amazon Jem" , model : "Kindle Fire HD 8.9\" WiFi" , } , Model { regex : "KFJWA(?:[);/ ]|$)" , model : "Kindle Fire HD 8.9\" 4G" , } , Model { regex : "KFSOWI(?:[);/ ]|$)|Amazon Tate" , model : "Kindle Fire HD 7\" WiFi" , } , Model { regex : "KFTHWI(?:[);/ ]|$)" , model : "Kindle Fire HDX 7\" WiFi" , } , Model { regex : "KFTHWA(?:[);/ ]|$)" , model : "Kindle Fire HDX 7\" 4G" , } , Model { regex : "KFAPWI(?:[);/ ]|$)" , model : "Kindle Fire HDX 8.9\" WiFi" , } , Model { regex : "KFAPWA(?:[);/ ]|$)" , model : "Kindle Fire HDX 8.9\" 4G" , } , Model { regex : "KFARWI(?:[);/ ]|$)" , model : "Fire HD 6" , } , Model { regex : "KFASWI(?:[);/ ]|$)" , model : "Fire HD 7" , } , Model { regex : "KFAUWI(?:[);/ ]|$)" , model : "Fire HD 7 (2017)" , } , Model { regex : "KFMEWI(?:[);/ ]|$)" , model : "Fire HD 8 (2015)" , } , Model { regex : "KFGIWI(?:[);/ ]|$)" , model : "Fire HD 8 (2016)" , } , Model { regex : "KFDOWI(?:[);/ ]|$)" , model : "Fire HD 8 (2017)" , } , Model { regex : "KFKAWI(?:[);/ ]|$)" , model : "Fire HD 8 (2018)" , } , Model { regex : "KFONWI(?:[);/ ]|$)" , model : "Fire HD 8 (2020)" , } , Model { regex : "KFSAWI(?:[);/ ]|$)" , model : "Fire HDX 8.9" , } , Model { regex : "KFSAWA(?:[);/ ]|$)" , model : "Fire HDX 8.9 4G" , } , Model { regex : "KFTBWI(?:[);/ ]|$)" , model : "Fire HD 10" , } , Model { regex : "KFSUWI(?:[);/ ]|$)" , model : "Fire HD 10 (2017)" , } , Model { regex : "KFMAWI(?:[);/ ]|$)" , model : "Fire HD 10 (2019)" , } , Model { regex : "SD4930UR" , model : "Fire Phone" , } , Model { regex : "KFOT|Kindle Fire|Silk/\\d+\\.\\d+" , model : "Kindle Fire" , } , Model { regex : "Kindle" , model : "Kindle" , } , Model { regex : "AEO(BC|KN)(?:[);/ ]|$)" , model : "Echo" , } , Model { regex : "AlexaMediaPlayer" , model : "Alexa" , } ,]) , }) , ("General Mobile" , Brand { regex : "GM 5 Plus|GM8 go|GM [68] d|GM 8|General Mobile 4G|GM 9 (?:Pro|Plus)|e-tab 20(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "GM 5 Plus" , model : "GM 5 Plus" , } , Model { regex : "GM ([68]) d" , model : "GM $1D" , } , Model { regex : "GM 8" , model : "GM 8" , } , Model { regex : "GM8 go" , model : "GM 8 Go" , } , Model { regex : "GM 9 Pro" , model : "GM 9 Pro" , } , Model { regex : "GM 9 Plus" , model : "GM 9 Plus" , } , Model { regex : "General Mobile 4G Dual" , model : "4G Dual" , } , Model { regex : "General Mobile 4G" , model : "4G" , } , Model { regex : "e-tab 20(?:[);/ ]|$)" , model : "E-Tab 20" , } ,]) , }) , ("Evercoss" , Brand { regex : "EVERCOSS[ _]|(A75A\\*|U50A_PLUS|M50 STAR|A75 MAX)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "A75A\\*(?:[);/ ]|$)" , model : "A75A Star" , } , Model { regex : "A75 MAX*(?:[);/ ]|$)" , model : "A75 Max" , } , Model { regex : "U50A_PLUS(?:[);/ ]|$)" , model : "U50A Plus" , } , Model { regex : "M50 STAR(?:[);/ ]|$)" , model : "M50 Star" , } , Model { regex : "EVERCOSS[ _](A7[BRLZ]|A65|A74A|A5Z)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("G-Touch" , Brand { regex : "GTouch[_ ]|(?:Stella (?:XS?|Omega))(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Stella (XS?|Omega)" , model : "Stella $1" , } , Model { regex : "GTouch[_ ]STELLA" , model : "Stella" , } ,]) , }) , ("Keneksi" , Brand { regex : "KENEKSI|(?:Hemera|Teta Dual|Helios)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(Hemera|Teta Dual|Helios)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "KENEKSI[ _-]liberty" , model : "Liberty" , } , Model { regex : "KENEKSI[ _-]FLASH" , model : "Flash" , } , Model { regex : "KENEKSI[ _-]SUN" , model : "Sun" , } , Model { regex : "KENEKSI[ _-]ZETA" , model : "Zeta" , } , Model { regex : "KENEKSI[ _-]SIGMA" , model : "Sigma" , } , Model { regex : "KENEKSI[ _-](Moon|Libra_Dual|Glass|Amber|Chance|Amulet|Choice|Crystal|Dream|Delta[_ ]Dual|Norma 2|Norma|Sky|Fire 2|Fire|Flame|Flora|Rock|Solo|Soul|Step|Smart|Star|Storm|Wind)" , model : "$1" , } ,]) , }) , ("Brandt" , Brand { regex : "(BPRIME|BSTAR\\+?|BPRIMES|B-ONE)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Starmobile" , Brand { regex : "(?:Starmobile (?:Play (?:Neo|Spark|GO|Click))|UP[_ ](?:Sense|Rave|Groove|Prime|Selfie|Xtreme|XL))(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Starmobile PLAY GO(?:[);/ ]|$)" , model : "Play Go" , } , Model { regex : "Starmobile Play (Neo|Spark|Click)(?:[);/ ]|$)" , model : "Play $1" , } , Model { regex : "UP[_ ](Sense|Rave|Groove|Prime|Selfie|Xtreme|XL)(?:[);/ ]|$)" , model : "UP $1" , } ,]) , }) , ("Koolnee" , Brand { regex : "(K1 Trio)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Element" , Brand { regex : "AFTRS" , device : Some ("tv") , model : Some ("Element 4K (2017)") , models : None , }) , ("Simbans" , Brand { regex : "TangoTab|Presto[ )]|Ultimax|Valumax|S72-B|SX2W" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "TangoTab" , model : "TangoTab" , } , Model { regex : "Ultimax" , model : "Ultimax" , } , Model { regex : "Valumax" , model : "Valumax" , } , Model { regex : "Presto" , model : "Presto" , } , Model { regex : "S72-B" , model : "S72-B" , } , Model { regex : "SX2W" , model : "SX2W" , } ,]) , }) , ("Positivo" , Brand { regex : "YPY_S450" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "YPY_S450" , model : "YPY S450" , } ,]) , }) , ("Prestigio" , Brand { regex : "Prestigio 5500 DUO|(?:PMP|PAP|PMT|PSP|PGPS)[0-9]+[a-z0-9_]+(?:[);/ ]|$)|Muze C3" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "PMT3277_3G" , model : "MultiPad Ranger 7.0 3G" , } , Model { regex : "PGPS7799CIS08GBPG(?:[);/ ]|$)" , model : "Geo Vision Tour 3" , } , Model { regex : "PGPS7797(?:[);/ ]|$)" , model : "Geo Vision Tour 2" , } , Model { regex : "PMT3201_4G" , model : "Grace 4G" , } , Model { regex : "PSP5551DUO" , model : "Grace S5" , } , Model { regex : "PMT3287_3G" , model : "MultiPad Ranger 8.0 3G" , } , Model { regex : "Prestigio 5500 DUO" , model : "MultiPhone 5500 Duo" , } , Model { regex : "PMT3208[_ ]3G" , model : "MultiPad Wize 8.0 3G" , } , Model { regex : "PSP7546DUO([ _][A-Z]{2})?" , model : "X Pro" , } , Model { regex : "PSP7610DUO([ _][A-Z]{2})?" , model : "S Max" , } , Model { regex : "(PM[PT][0-9]+[a-z0-9_]+)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "((?:PAP|PSP)[0-9]+[a-z0-9_]+(?: DUO)?)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Muze C3(?:[);/ ]|$)" , model : "Muze C3" , } ,]) , }) , ("Hoozo" , Brand { regex : "(?:HOOZO[_ ](MT232|MT116|MT Pad 116 LTE|X1001)|HZ0010)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "HOOZO[_ ](MT232|MT116|MT Pad 116 LTE|X1001)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "(HZ0010)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("BIHEE" , Brand { regex : "(ZBH-)?BIHEE" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(A1[1268]|A[78]\\+|A[56])(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Wigor" , Brand { regex : "Wigor (V4)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Vertex" , Brand { regex : "(?:Luck|Lion_Dual|V709X|Tab [43]G (?:7-2|8-1|10-1)|Pro_P3[01]0_4G|Lion_DC|Baccara|Eagle[ _]4G|ImpressMAX)(?:[);/ ]|$)|Impress[ _]([^;/]+)(?:Build|\\))" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(Lion_Dual|Lion_DC|Baccara|Eagle[ _]4G|Luck)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "ImpressMAX(?:[);/ ]|$)" , model : "Impress Max" , } , Model { regex : "Pro_P(3[01]0)_4G(?:[);/ ]|$)" , model : "Pro P$1 4G" , } , Model { regex : "(Impress[ _]([^;/]+))(?:Build|\\))" , model : "$1" , } , Model { regex : "(V709X)" , model : "$1" , } , Model { regex : "Tab ([43])G ([78]|10)-([21])" , model : "Tab $1G $2.$3\"" , } ,]) , }) , ("i-Cherry" , Brand { regex : "iCherry_?" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "iCherry[ _](C(?:25[1258]|21[16]|110|121|22[0379]|23[03])|X1)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "iCherry-C256" , model : "C256 Nano 3G" , } ,]) , }) , ("Hipstreet" , Brand { regex : "10DTB12(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("Phoenix") , models : None , }) , ("Alcor" , Brand { regex : "(Access_Q784C)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Intex" , Brand { regex : "Intex|(Aqua|Cloud[ _][XY][0-9]{1}|Cloud (?:Fame|Glory) 4G)|IM0318ND(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "IM0318ND" , model : "Aqua Lions 3" , } , Model { regex : "Intex[ _]([^/;]*)[ _]Build" , model : "$1" , } , Model { regex : "(Cloud (?:Fame|Glory) 4G)" , model : "$1" , } , Model { regex : "(Aqua|Cloud)[ _\\.]([^/;\\)]+)(?:[ _]Build|(?<!Build)/|\\))" , model : "$1 $2" , } , Model { regex : "Intex[ _]([a-z0-9_+\\-]+)" , model : "$1" , } ,]) , }) , ("Mantra" , Brand { regex : "(MFSTAB(?:_74G)?)(?:[);/ ]|$)" , device : Some ("peripheral") , model : Some ("$1") , models : None , }) , ("QMobile" , Brand { regex : "QMobile|QTab(?!10EW)|Q-Smart|(?:E2 Noir|Noir X1S|LUNA PRO|NICE S|JazzX JS(?:[27]|10)(?: PRO)?|LT[57]00 PRO|LT950|Q Infinity|Hot Pro 2)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "JazzX JS7 PRO" , model : "Jazz X JS7 Pro" , } , Model { regex : "JazzX JS(2|10)" , model : "Jazz X JS$1" , } , Model { regex : "Noir X1S" , model : "Noir X1S" , } , Model { regex : "E2 Noir" , model : "E2 Noir" , } , Model { regex : "Hot Pro 2" , model : "Hot Pro 2" , } , Model { regex : "LT([57]00) PRO" , model : "Noir LT$1 Pro" , } , Model { regex : "LUNA PRO" , model : "Luna Pro" , } , Model { regex : "NICE S" , model : "Nice S" , } , Model { regex : "Q Infinity PRO" , model : "Q Infinity Pro" , } , Model { regex : "Q Infinity E Lite" , model : "Q Infinity E Lite" , } , Model { regex : "Q Infinity ([FCB])" , model : "Q Infinity $1" , } , Model { regex : "(LT950)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "QTab[ _-]([^;/]+) Build" , model : "$1 Tab" , } , Model { regex : "QTab[ _-]([^;/)]+)(?:[;/)]|$)" , model : "$1 Tab" , } , Model { regex : "(?:QMobile|Q-Smart)[ _-]([^;/]+) Build" , model : "$1" , } , Model { regex : "(?:QMobile|Q-Smart)[ _-]([^;/)]+)(?:[;/)]|$)" , model : "$1" , } , Model { regex : "Q Infinity" , model : "Q Infinity" , } ,]) , }) , ("Melrose" , Brand { regex : "MELROSE[_ ](?:S9\\+?|S9P|2019)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "MELROSE[_ ]S9\\+(?:[);/ ]|$)" , model : "S9 Plus" , } , Model { regex : "MELROSE[_ ](S9|S9P)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "MELROSE_2019(?:[);/ ]|$)" , model : "2019 Ultra Slim 3.4\"" , } ,]) , }) , ("Gol Mobile" , Brand { regex : "F10_PRIME" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "F10_PRIME" , model : "F10 Prime" , } ,]) , }) , ("NuAns" , Brand { regex : "NEO \\[Reloaded\\](?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("NEO Reloaded") , models : None , }) , ("Dolamee" , Brand { regex : "Dolamee[_ -](D[56])(?:[);/ ]|$)" , device : Some ("tv") , model : Some ("$1") , models : None , }) , ("Rinno" , Brand { regex : "Rinno (R(?:400|505))" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Swisstone" , Brand { regex : "swisstone (SD 5[13]0)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Centric" , Brand { regex : "(?:Centric[- ]CM(?:5001|33[23]1|3321Plus)|CM4331)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(?:Centric[- ])?CM5001" , model : "A1" , } , Model { regex : "(?:Centric[- ])?CM3321Plus" , model : "P1 Plus" , } , Model { regex : "(?:Centric[- ])?CM3321" , model : "P1" , } , Model { regex : "(?:Centric[- ])?CM3331" , model : "L3" , } , Model { regex : "(?:Centric[- ])?CM4331" , model : "G1" , } ,]) , }) , ("Vinga" , Brand { regex : "VMP-(015-162|021-82|041-162|011-81|025-324|045-664)(?:[);/ ]|$)" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "VMP-021-82" , model : "021" , } , Model { regex : "VMP-025-324" , model : "025" , } , Model { regex : "VMP-015-162" , model : "015" , } , Model { regex : "VMP-041-162" , model : "041" , } , Model { regex : "VMP-045-664" , model : "045" , } , Model { regex : "VMP-011-81" , model : "011" , } ,]) , }) , ("Yusun" , Brand { regex : "Yusun|LA2-T" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "LA2-T" , model : "LA2-T" , } , Model { regex : "Yusun ([^;/]+) Build" , model : "$1" , } , Model { regex : "Yusun ([a-z0-9_\\-\\+]+)" , model : "$1" , } ,]) , }) , ("MicroMax" , Brand { regex : "(?:MicroMax[ \\-\\_]?[a-z0-9]+|Q327)|4560MMX|P70221|(?:YU(?:5040|5530)|AQ5001(?: Canvas Power)?|N8216|N8301)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "AQ5001 Canvas Power" , model : "Canvas Power" , } , Model { regex : "AQ5001" , model : "Canvas Juice 2" , } , Model { regex : "4560MMX(?:[);/ ]|$)" , model : "4560MMX" , } , Model { regex : "E481" , model : "Canvas 5" , } , Model { regex : "P70221(?:[);/ ]|$)" , model : "Canvas Tab" , } , Model { regex : "Q327" , model : "Bolt" , } , Model { regex : "Q417" , model : "Canvas Mega" , } , Model { regex : "Q402\\+" , model : "Bolt Pace" , } , Model { regex : "YU5040(?:[);/ ]|$)" , model : "YU Yureka YU5040" , } , Model { regex : "YU5530(?:[);/ ]|$)" , model : "YU Yureka S YU5530" , } , Model { regex : "Q424" , model : "Bolt Selfie" , } , Model { regex : "Q426" , model : "Canvas Mega 2" , } , Model { regex : "N8216" , model : "Infinity N11" , } , Model { regex : "N8301" , model : "Infinity N12" , } , Model { regex : "MicroMax(?:[ \\-\\_])?(X291|X246|X252|X458|X312)" , model : "$1" , } , Model { regex : "MicroMax(?:[ \\-\\_])?(P[a-z0-9]+)" , model : "$1" , } , Model { regex : "MicroMax(?:[ \\-\\_])?([a-z0-9]+)" , model : "$1" , } ,]) , }) , ("Time2" , Brand { regex : "(TC1050G)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1 10.1\"") , models : None , }) , ("Yandex" , Brand { regex : "(YNDX-?000SB)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("YNDX-000SB") , models : None , }) , ("Xolo" , Brand { regex : "Xolo|(?:Q600|Q700s?|Q800|Q1000s|Q1000[ _]Opus|Q1010i|Q2000|Omega[ _]5.[05]|Era5X|Era[ _]2V|Era_4X(?:_2GB)?)(?:[);/ ]|$)|BLACK-1XM" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "BLACK-1XM" , model : "Black 1X" , } , Model { regex : "Era_?([45])X(?:[);/ ]|$)" , model : "Era $1X" , } , Model { regex : "Era_4X_2GB(?:[);/ ]|$)" , model : "Era 4X 2GB" , } , Model { regex : "Era[ _]2V(?:[);/ ]|$)" , model : "Era 2V" , } , Model { regex : "(Q600 Club|Q600|Q700s?|Q800|Q1000s Plus|Q1000s|Q1000[ _]Opus|Q1010i|Q2000|Omega[ _]5.[05])(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Xolo[ _]?([^;/]+) Build" , model : "$1" , } , Model { regex : "Xolo[ _]?([a-z0-9_-]+)" , model : "$1" , } ,]) , }) , ("Soyes" , Brand { regex : "SOYES[ _]([67]S|XS)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Ovvi" , Brand { regex : "Jumbo X1" , device : Some ("smartphone") , model : Some ("Jumbo X1") , models : None , }) , ("Alba" , Brand { regex : "Alba ?(?:57|4|10 TABLET|(?:7|10)(?:Nou|Pie))(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Alba 57" , model : "5.7" , } , Model { regex : "Alba (4)" , model : "$1" , } , Model { regex : "10 TABLET" , model : "10 Tablet" , } , Model { regex : "Alba((?:7|10)(?:Nou|Pie))" , model : "$1" , } ,]) , }) , ("Voxtel" , Brand { regex : "Voxtel_([a-z0-9]+)" , device : Some ("feature phone") , model : Some ("$1") , models : None , }) , ("Wolfgang" , Brand { regex : "AT[ _-]AS([0-9A-Z]+)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("AT-AS$1") , models : None , }) , ("FireFly Mobile" , Brand { regex : "(?:AURII[ _](?:Passion|Virtuoso|ULTRA|Secret Lite|AMUSE[_ ]3G|FORCE|FUSION|F8[_ ]Premium|XCITE|DELIGHT|DREAM[_ ](?:MINI|One))|SECRET_XR|INTENSE[ _](?:POWER|METAL_2|XT)|SUPER SWEET|SWEET MINI)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "AURII[ _]FORCE(?:[);/ ]|$)" , model : "Aurii Force" , } , Model { regex : "AURII[ _]DELIGHT(?:[);/ ]|$)" , model : "Aurii Delight" , } , Model { regex : "AURII[ _]DREAM[_ ]MINI(?:[);/ ]|$)" , model : "Aurii Dream Mini" , } , Model { regex : "AURII[ _]DREAM[_ ]One(?:[);/ ]|$)" , model : "Aurii Dream One" , } , Model { regex : "AURII[ _]ULTRA(?:[);/ ]|$)" , model : "Aurii Ultra" , } , Model { regex : "AURII[ _]AMUSE[_ ]3G(?:[);/ ]|$)" , model : "Aurii Amuse 3G" , } , Model { regex : "AURII[ _]FUSION(?:[);/ ]|$)" , model : "Aurii Fusion" , } , Model { regex : "AURII[ _]XCITE(?:[);/ ]|$)" , model : "Aurii xCite" , } , Model { regex : "SECRET_XR(?:[);/ ]|$)" , model : "Aurii Secret XR" , } , Model { regex : "AURII[ _]((?:Passion|Virtuoso|Secret Lite|F8[_ ]Premium))(?:[);/ ]|$)" , model : "Aurii $1" , } , Model { regex : "INTENSE POWER(?:[);/ ]|$)" , model : "Intense Power" , } , Model { regex : "INTENSE_XT(?:[);/ ]|$)" , model : "Intense XT" , } , Model { regex : "INTENSE_METAL_2(?:[);/ ]|$)" , model : "Intense Metal 2" , } , Model { regex : "SUPER SWEET(?:[);/ ]|$)" , model : "Super Sweet" , } , Model { regex : "SWEET MINI(?:[);/ ]|$)" , model : "Sweet Mini" , } ,]) , }) , ("Datsun" , Brand { regex : "DATSUN" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "DATSUN_D5500" , model : "D5500" , } , Model { regex : "Datsun_D5001" , model : "D5001" , } ,]) , }) , ("Lumus" , Brand { regex : "LUMUS Shell|(?:NEO(SR620|SC600)|INNOSR545|Lumus[_ ]Ion)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "NEO(SR620|SC600)(?:[);/ ]|$)" , model : "Neo $1" , } , Model { regex : "INNO(SR545)(?:[);/ ]|$)" , model : "INNO $1" , } , Model { regex : "Lumus[_ ]Ion(?:[);/ ]|$)" , model : "Ion" , } , Model { regex : "LUMUS Shell [0-9A-Z]+" , model : "" , } ,]) , }) , ("Ployer" , Brand { regex : "MOMO([0-9]|[ ]?mini[ ]?(?:S|3GS)?)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "MOMOminiS" , model : "MOMO mini S" , } , Model { regex : "momo mini 3GS" , model : "MOMO Mini 3GS" , } , Model { regex : "MOMO([0-9][^);/]*) Build" , model : "MOMO $1" , } , Model { regex : "MOMO([0-9][^);/]*)(?:[);/]|$)" , model : "MOMO $1" , } ,]) , }) , ("Artizlee" , Brand { regex : "Artizlee[ _]S9|ATL-(?:16|21(?:PLUS|[XT])?|31|26)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "ATL-21PLUS(?:[);/ ]|$)" , model : "ATL-21 Plus" , } , Model { regex : "(ATL-(?:16|21[XT]?|31|26))(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Artizlee[ _]S9" , model : "S9" , } ,]) , }) , ("Mobiola" , Brand { regex : "(MS5[50]X6|MS55X5|MS55L1|MS50L1|MS43A3000|MS45A4000|MS50A4000|MS50A4500|MS50A5000|MS50A6000|MS50B11000|MB-2900 QUATTRO|POLYS[_ ]MS45L1|Wave5)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "MS50X6" , model : "Atmos II" , } , Model { regex : "POLYS[_ ]MS45L1" , model : "Polys MS45L1" , } , Model { regex : "MS55X6" , model : "Atmos Pro II" , } , Model { regex : "MS55X5" , model : "Atmos Pro" , } , Model { regex : "MS55L1" , model : "GAIA" , } , Model { regex : "MS50L1" , model : "Inti" , } , Model { regex : "MB-2900 QUATTRO" , model : "MB-2900 Quattro" , } , Model { regex : "MS43A3000" , model : "MS43A3000" , } , Model { regex : "MS45A4000" , model : "eOn 45" , } , Model { regex : "MS50A4000" , model : "eOn 50" , } , Model { regex : "MS50A4500" , model : "eOn 50 Elegance" , } , Model { regex : "MS50A5000" , model : "eOn 50 Quad 8" , } , Model { regex : "MS50A6000" , model : "eOn 50 Quad 16" , } , Model { regex : "MS50B11000" , model : "MS50B11000" , } , Model { regex : "Wave5" , model : "Wave 5" , } ,]) , }) , ("Vontar" , Brand { regex : "(HK1 (?:Max|MINI|PLUS|PRO)|VONTAR[ -](?:Z[58]|V1|KIII|MX-4K|X3))(?:[);/ ]|$)" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "VONTAR[ -](Z[58]|V1|KIII|MX-4K|X3)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "HK1 Max(?:[);/ ]|$)" , model : "HK1 Max" , } , Model { regex : "HK1 MINI(?:[);/ ]|$)" , model : "HK1 Mini" , } , Model { regex : "HK1 PLUS(?:[);/ ]|$)" , model : "HK1 Plus" , } , Model { regex : "HK1 PRO(?:[);/ ]|$)" , model : "HK1 Pro" , } ,]) , }) , ("Vestel" , Brand { regex : "Vestel[ _]|Venus[ _](GO|E[2-5]|V[1-9]|Z[1-9]0)|(?<!Winnovo )V_?TAB|VP74|VT97PRO|VSP145M|VSP250[GS]|VSP355[GS]|V3_5580_Dual" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "VT97PRO" , model : "VTab 9.7 Pro" , } , Model { regex : "VP74" , model : "VTab Lite II" , } , Model { regex : "VTAB10" , model : "VTab 10" , } , Model { regex : "V_TAB_7_ECO_III " , model : "VTab 7 Eco 3" , } , Model { regex : "V_TAB_([0-9]{4}[A-Z]?)" , model : "VTab $1" , } , Model { regex : "V3_5580_Dual" , model : "Venus V3 5580 Dual" , } , Model { regex : "VSP145M" , model : "Venus 4.5" , } , Model { regex : "VSP250G" , model : "Venus 5.0V" , } , Model { regex : "VSP250S" , model : "Venus 5.0X" , } , Model { regex : "VSP355G" , model : "Venus 5.5V" , } , Model { regex : "VSP355S" , model : "Venus 5.5X" , } , Model { regex : "Venus[ _]V([1-9])" , model : "Venus V$1" , } , Model { regex : "Venus[ _]Z([1-9]0)" , model : "Venus Z$1" , } , Model { regex : "Venus[ _]GO" , model : "Venus Go" , } , Model { regex : "Venus E2 Plus Dual" , model : "Venus E2 Plus Dual" , } , Model { regex : "Venus[ _]E2 Plus" , model : "Venus E2 Plus" , } , Model { regex : "Venus[ _]E([345])" , model : "Venus E$1" , } , Model { regex : "Vestel_5000_Dual" , model : "5000 Dual" , } , Model { regex : "Vestel_5000_2gb" , model : "5000 2GB" , } , Model { regex : "Vestel[ _](5000|5530)" , model : "$1" , } ,]) , }) , ("Zuum" , Brand { regex : "Zuum[ _-]|Android 6.+ UNIQ(?: Build|[);])|(?:Akus Z|COVET|MAGNO|ONIX S|STEDI|STELLAR(?:[ _](?:Z|PRO|[MP]1))?|GRAVITY Z|AURA X|COVET_PRO_LITE|RONI)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Akus Z" , model : "Akus Z" , } , Model { regex : "COVET_PRO_LITE" , model : "Covet Pro Lite" , } , Model { regex : "COVET PRO" , model : "Covet Pro" , } , Model { regex : "COVET( Z)?" , model : "Covet$1" , } , Model { regex : "MAGNO PLUS" , model : "Magno Plus" , } , Model { regex : "MAGNO( C)?" , model : "Magno$1" , } , Model { regex : "ONIX S" , model : "Onix S" , } , Model { regex : "STEDI" , model : "Stedi" , } , Model { regex : "STELLAR PRO" , model : "Stellar Pro" , } , Model { regex : "STELLAR PLUS" , model : "Stellar Plus" , } , Model { regex : "STELLAR ([MP]1|Z)" , model : "Stellar $1" , } , Model { regex : "STELLAR MINI" , model : "Stellar Mini" , } , Model { regex : "STELLAR MINI" , model : "Stellar Mini" , } , Model { regex : "STELLAR" , model : "Stellar" , } , Model { regex : "GRAVITY Z" , model : "Gravity Z" , } , Model { regex : "AURA X" , model : "Aura X" , } , Model { regex : "RONI" , model : "Roni" , } , Model { regex : "Android 6.+ UNIQ(?: Build|[);])" , model : "Uniq" , } , Model { regex : "Zuum[ _-]([^;/]+) Build" , model : "$1" , } , Model { regex : "Zuum[ _-]?([^;/)]+)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Trifone" , Brand { regex : "Passion[-_](?:1S|PRO|PLUS)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Passion-1S" , model : "Passion 1S" , } , Model { regex : "Passion-Plus" , model : "Passion Plus" , } , Model { regex : "Passion_Pro" , model : "Passion Pro" , } ,]) , }) , ("Onda" , Brand { regex : "Onda|(?:(?:V820w|V891[w]?|V919(?: 3G)? Air)[ _-]DualOS|(?:V919 4G Air|V989 Air|V972) Core[48]|T2101L2B1C| V10 4G|OBOOK (?:20 SE|20 PLUS DUALOS)|OBOOK10 SE|V919 Air CH DualOS)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "ONDA[ _]MID" , model : "MID" , } , Model { regex : "V820w[ _-]DualOS" , model : "V820W Dual OS" , } , Model { regex : "V891W[ _-]DualOS" , model : "V891W Dual OS" , } , Model { regex : "V891[ _-]DualOS" , model : "V891 Dual OS" , } , Model { regex : "V919 3G Air[ _-]DualOS" , model : "V919 3G Air Dual OS" , } , Model { regex : "V919 Air[ _-]DualOS" , model : "V919 Air Dual OS" , } , Model { regex : "V919 Air CH DualOS" , model : "V919 Air CH Dual OS" , } , Model { regex : "V919 4G Air Core8" , model : "V919 4G Air Core 8" , } , Model { regex : "V972 Core4" , model : "V919 Core 4" , } , Model { regex : "V989 Air Core8" , model : "V989 Air Core 8" , } , Model { regex : "T2101L2B1C|OBOOK 20 PLUS DUALOS" , model : "oBook 20 Plus Dual OS" , } , Model { regex : " V10 4G(?:[);/ ]|$)" , model : "V10 10.1\" 4G" , } , Model { regex : "OBOOK 20 SE(?:[);/ ]|$)" , model : "oBook 20 SE" , } , Model { regex : "OBOOK10 SE(?:[);/ ]|$)" , model : "oBook 10 SE" , } , Model { regex : "([a-z0-9]+)[ _]Onda" , model : "$1" , } , Model { regex : "Onda ([a-z0-9]+)" , model : "$1" , } ,]) , }) , ("Ark" , Brand { regex : "(ARK[_ -])?Benefit[_ -]([^/;]*)(?: Build|\\))|Impulse[ _]P[12]|(?:EDGE A5HD|Elf_S8|ICON (R40\\+|R45)|Wizard_[12])(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(?:ARK[_ -])?Benefit[_ -]([^/;]*)(?: Build|\\))" , model : "Benefit $1" , } , Model { regex : "Impulse[ _]P1\\+" , model : "Impulse P1 Plus" , } , Model { regex : "Impulse[ _](P[12])" , model : "Impulse $1" , } , Model { regex : "EDGE (A5HD)" , model : "Edge $1" , } , Model { regex : "ICON (R40\\+|R45)" , model : "Icon $1" , } , Model { regex : "Wizard_([12])" , model : "Wizard $1" , } , Model { regex : "Elf_S8(?:[);/ ]|$)" , model : "Elf S8" , } ,]) , }) , ("JFone" , Brand { regex : "JFone[ _](JS501)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("SuperTab" , Brand { regex : "SuperTab(A10|K7|S7G)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("UTStarcom" , Brand { regex : "utstar[ _-]?([a-z0-9]+)" , device : Some ("feature phone") , model : Some ("$1") , models : None , }) , ("Doopro" , Brand { regex : "Doopro P3(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("P3") , models : None , }) , ("Fantec" , Brand { regex : "FAN-M300H(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("M300H") , models : None , }) , ("Nos" , Brand { regex : "Nos (?:FIVE|NOVU|NEVA|Roya)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "NOS FIVE(?:[);/ ]|$)" , model : "Five" , } , Model { regex : "NOS NOVU III(?:[);/ ]|$)" , model : "Novu III" , } , Model { regex : "NOS NOVU II(?:[);/ ]|$)" , model : "Novu II" , } , Model { regex : "NOS NOVU(?:[);/ ]|$)" , model : "Novu" , } , Model { regex : "NOS NEVA 80(?:[);/ ]|$)" , model : "Neva 80" , } , Model { regex : "NOS Roya(?:[);/ ]|$)" , model : "Roya" , } ,]) , }) , ("BioRugged" , Brand { regex : "(?:BioWolf 8-F30|BIOWOLF8F30|Ruggbo 20 Lite)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "BioWolf 8-F30|BIOWOLF8F30" , model : "BioWolf 8-F30" , } , Model { regex : "Ruggbo 20 Lite" , model : "Ruggbo 20 Lite" , } ,]) , }) , ("Inch" , Brand { regex : "Inch (?:Regulus (?:7.85|II)|Avior 3)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "(Regulus 7.85)" , model : "$1\"" , } , Model { regex : "(Regulus II|Avior 3)" , model : "$1" , } ,]) , }) , ("i-mate" , Brand { regex : "i-mate ([a-z0-9]+)" , device : Some ("feature phone") , model : Some ("$1") , models : None , }) , ("Facebook" , Brand { regex : "PortalTV" , device : Some ("tv") , model : Some ("Portal TV") , models : None , }) , ("Kumai" , Brand { regex : "(?:KM-)?Kumai" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(?:KM-)?Kumai[ _\\-]?([^;/]+) Build" , model : "$1" , } , Model { regex : "(?:KM-)?Kumai[ _\\-]?([a-z0-9_-]+)" , model : "$1" , } ,]) , }) , ("Turbo" , Brand { regex : "Turbo[_ ]?(?:X5[_ ]?(?:Max|Black|Space|Hero)|X8|X6[ _]Z|X[ _]Ray)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "TurboX5Space(?:[);/ ]|$)" , model : "X5 Space" , } , Model { regex : "TurboX5Hero(?:[);/ ]|$)" , model : "X5 Hero" , } , Model { regex : "TurboX[ _]Ray(?:[);/ ]|$)" , model : "X Ray" , } , Model { regex : "Turbo[ _]?X5[ _]?Black(?:[);/ ]|$)" , model : "X5 Black" , } , Model { regex : "Turbo[ _]X5[ _]Max(?:[);/ ]|$)" , model : "X5 Max" , } , Model { regex : "Turbo[ _]X6[ _]Z(?:[);/ ]|$)" , model : "X6 Z" , } , Model { regex : "Turbo[ _]X8(?:[);/ ]|$)" , model : "X8" , } ,]) , }) , ("iTel" , Brand { regex : "itel|iNote|GP10X2019(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "W6502" , model : "S16" , } , Model { regex : "W5505" , model : "A36" , } , Model { regex : "W6002E?" , model : "S15" , } , Model { regex : "L5502" , model : "A44 Air" , } , Model { regex : "L5505" , model : "A47" , } , Model { regex : "L6006" , model : "A48" , } , Model { regex : "L6003P" , model : "A55 LTE" , } , Model { regex : "L6002P" , model : "S15 Pro" , } , Model { regex : "L5002" , model : "A22" , } , Model { regex : "L5503" , model : "A46" , } , Model { regex : "L6004" , model : "A56 LTE" , } , Model { regex : "W6004P" , model : "A56 Pro" , } , Model { regex : "W6001" , model : "P33 Plus" , } , Model { regex : "W6003" , model : "A55" , } , Model { regex : "L6005" , model : "Vision 1" , } , Model { regex : "L6501" , model : "Vision 1 Plus" , } , Model { regex : "L6502" , model : "Vision 1 Pro" , } , Model { regex : "GP10X2019" , model : "GP10X2019" , } , Model { regex : "iNote ([^/;]*)Build" , model : "iNote $1" , } , Model { regex : "iNote_([a-z0-9\\-_]+)" , model : "iNote $1" , } , Model { regex : "itel-it(1410|1512|1520)(?:[);/ ]|$)" , model : "it$1" , } , Model { regex : "itel-it1553(?:[);/ ]|$)" , model : "Power Pro" , } , Model { regex : "itel[- ](A14|A16 Plus|A44 Power|A23S|A52 Lite)" , model : "$1" , } , Model { regex : "itel it1701" , model : "iNote Prime" , } , Model { regex : "itel it170([23])" , model : "iNote Prime $1" , } , Model { regex : "iTel ([^/;]*)Build" , model : "$1" , } , Model { regex : "iTel[_ ]([a-z0-9\\-_]*)" , model : "$1" , } ,]) , }) , ("Insignia" , Brand { regex : "NS-(P11A8100|P10A8100|P10A6100|P16AT08|P16AT10|P16AT785HD|P08A7100|P10A7100)(?:[);/ ]|$)|AFTEAMR311|AFTJMST12" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "NS-P11A8100" , model : "11.6\"" , } , Model { regex : "NS-(P10A6100|P16AT10)" , model : "Flex 10.1\"" , } , Model { regex : "NS-P16AT08" , model : "Flex 8\"" , } , Model { regex : "NS-P08A7100" , model : "8\"" , } , Model { regex : "NS-(P10A8100|P10A7100)" , model : "10.1\"" , } , Model { regex : "NS-P16AT785HD" , model : "Flex Elite 7.85\"" , } , Model { regex : "AFTEAMR311" , model : "HD (2018)" , } , Model { regex : "AFTJMST12" , model : "4K (2018)" , } ,]) , }) , ("Wortmann" , Brand { regex : "TERRA[ _]PAD[ _](100[45])(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("Terra Pad $1") , models : None , }) , ("iRola" , Brand { regex : "iRola ([^/;]+) Build|(DX758|DX752|DX752|DX758[ _]?Pro) Build" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "DX758[ _]?Pro" , model : "DX758 Pro" , } , Model { regex : "(DX758|DX752)" , model : "$1" , } , Model { regex : "iRola ([^/;]+) Build" , model : "$1" , } ,]) , }) , ("TWM" , Brand { regex : "Amazing[ _](X[35]s|X[123567]|A5S|A3[025]|A[468]|A4S|A5[057]|P6)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Amazing[ _](X[35])s(?:[);/ ]|$)" , model : "Amazing $1S" , } , Model { regex : "Amazing[ _](A5S|X[123567]|A[468]|A4S|A5[057]|A3[025])(?:[);/ ]|$)" , model : "Amazing $1" , } , Model { regex : "Amazing[ _](P6)(?:[);/ ]|$)" , model : "Amazing $1" , } ,]) , }) , ("Lexand" , Brand { regex : "(?:SC7 PRO HD|S5A[1-4]|S4A[1-5]|S6A1|A811|A802)(?:[);/ ]|$)|Lexand ([^;/]+) Build" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "A(811|802)" , model : "A$1" , } , Model { regex : "S4A1" , model : "Vega" , } , Model { regex : "S4A2" , model : "Irida" , } , Model { regex : "S4A3" , model : "Pallada" , } , Model { regex : "S4A5" , model : "Oxygen" , } , Model { regex : "S4A4 NEON" , model : "S4A4 Neon" , } , Model { regex : "S5A1" , model : "Callisto" , } , Model { regex : "S5A2" , model : "Overon" , } , Model { regex : "S5A3" , model : "Capella" , } , Model { regex : "S5A4" , model : "Argon" , } , Model { regex : "S6A1" , model : "Antares" , } , Model { regex : "SC7 PRO HD" , model : "SC7 PRO HD" , } , Model { regex : "Lexand ([^;/]+) Build" , model : "$1" , } ,]) , }) , ("Unknown" , Brand { regex : "WebTV/(\\d+\\.\\d+)" , device : Some ("tv") , model : Some ("Web TV") , models : None , }) , ("STG Telecom" , Brand { regex : "STG[ _](A[12] Pro|[AS]1|X[1-3]|S[1-3]0|B10)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("New Balance" , Brand { regex : "NB (RunIQ)(?:[);/ ]|$)" , device : Some ("wearable") , model : Some ("$1") , models : None , }) , ("Meitu" , Brand { regex : "(?:(?<!MI CC 9 )Meitu[2]?|MP1503|MP1512|MP160[235]|MP170[19]|MP171[138])(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "MP1503(?:[);/ ]|$)" , model : "M6" , } , Model { regex : "MP1512(?:[);/ ]|$)" , model : "M6s" , } , Model { regex : "MP1602(?:[);/ ]|$)" , model : "T8" , } , Model { regex : "MP1605(?:[);/ ]|$)" , model : "V6" , } , Model { regex : "MP17(?:01|13)(?:[);/ ]|$)" , model : "T8s" , } , Model { regex : "MP1718(?:[);/ ]|$)" , model : "T9" , } , Model { regex : "MP1603(?:[);/ ]|$)" , model : "M8" , } , Model { regex : "MP17(?:09|11)(?:[);/ ]|$)" , model : "M8s" , } , Model { regex : "Meitu2(?:[);/ ]|$)" , model : "2" , } , Model { regex : "Meitu (Kiss|[MV]4)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("TIANYU" , Brand { regex : "TIANYU" , device : Some ("feature phone") , model : None , models : Some (& [Model { regex : "TIANYU ([a-z0-9]+)" , model : "$1" , } , Model { regex : "TIANYU-KTOUCH/([a-z0-9]+)" , model : "$1" , } ,]) , }) , ("Eltex" , Brand { regex : "(?:NV5(?:01|10)WAC|NV501|NV510WB)(?:[);/ ]|$)" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "NV5(01|10)WAC(?:[);/ ]|$)" , model : "NV-5$1-Wac" , } , Model { regex : "NV501(?:[);/ ]|$)" , model : "NV-501" , } , Model { regex : "NV510WB(?:[);/ ]|$)" , model : "NV-510-WB" , } ,]) , }) , ("Altice" , Brand { regex : "Altice[ _](S62|S31|S43)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Teknosa" , Brand { regex : "Preo[ _]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Preo Teknosa P1" , model : "Preo P1" , } , Model { regex : "Preo[ _]P([23])" , model : "Preo P$1" , } ,]) , }) , ("KOPO" , Brand { regex : "KOPO[ _-]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "KOPO[ _\\-]?([^/;]+) Build" , model : "$1" , } , Model { regex : "KOPO[ _\\-]?([^);/ ]+)" , model : "$1" , } ,]) , }) , ("CHIA" , Brand { regex : "(SVEGLIO[ _][QH]1|TREO_TAB8G|GTA7WF|VENUS7)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "SVEGLIO[ _]([QH]1)" , model : "Sveglio $1" , } , Model { regex : "TREO_TAB8G" , model : "TREO TAB8G" , } , Model { regex : "GTA7WF" , model : "GTA7WF" , } , Model { regex : "VENUS7" , model : "VENUS 7" , } ,]) , }) , ("Teclast" , Brand { regex : "Teclast|TLA002|TLA016|X98 Air III|M20_4G|X98 Air II\\(HG5N\\)|Tbook|X80 Power\\(B2N4\\)|(?:T30|P80X|P20HD|P10[_ ]HD|M40)_(?:ROW|EEA)|T10\\(E3C6\\)|P10S\\(N4H5\\)|98\\(M1E[45789]\\)|98\\(M3E3\\)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "Tbook[_ -]([^;/]+) Build" , model : "Tbook $1" , } , Model { regex : "T10\\(E3C6\\)" , model : "T10" , } , Model { regex : "T30_(ROW|EEA)" , model : "T30 $1" , } , Model { regex : "P80X_(ROW|EEA)" , model : "P80X $1" , } , Model { regex : "P10S\\(N4H5\\)" , model : "P10S" , } , Model { regex : "P20HD_(?:ROW|EEA)" , model : "P20HD" , } , Model { regex : "M40_(?:ROW|EEA)" , model : "M40" , } , Model { regex : "P10[_ ]HD_(?:ROW|EEA)" , model : "P10HD" , } , Model { regex : "M20_4G" , model : "M20 4G" , } , Model { regex : "TLA002" , model : "M30 4G" , } , Model { regex : "TLA016" , model : "M16" , } , Model { regex : "98\\(M1E[45789]\\)|98\\(M3E3\\)" , model : "TPad 98 10.1\" 4G" , } , Model { regex : "X80 Power\\(B2N4\\)(?:[);/ ]|$)" , model : "X98 Power" , } , Model { regex : "X98 Air III(?:[);/ ]|$)" , model : "X98 Air III" , } , Model { regex : "X98 Air II\\(HG5N\\)(?:[);/ ]|$)" , model : "X98 Air II" , } , Model { regex : "Teclast[_ -]([^;/]+) Build" , model : "$1" , } ,]) , }) , ("Just5" , Brand { regex : "JUST5(-)?SPACER(s)?|COSMO[_ ](L707|L808)|BLASTER|FREEDOM[ _](C100|M303|X1)|Freedom" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "COSMO[_ ](L707|L808)" , model : "Cosmo $1" , } , Model { regex : "FREEDOM[ _](C100|M303|X1)" , model : "Freedom $1" , } , Model { regex : "Freedom" , model : "Freedom" , } , Model { regex : "JUST5(-)?SPACER2s" , model : "Spacer 2S" , } , Model { regex : "JUST5(-)?SPACER2" , model : "Spacer 2" , } , Model { regex : "JUST5SPACER" , model : "Spacer" , } , Model { regex : "BLASTER 2" , model : "Blaster 2" , } , Model { regex : "BLASTER" , model : "Blaster" , } ,]) , }) , ("DeWalt" , Brand { regex : "DeWalt (MD501)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Weimei" , Brand { regex : "weplus_3" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "weplus_3" , model : "WePlus 3" , } ,]) , }) , ("ZTE" , Brand { regex : "ZTE|AxonPhone|([a-z0-9]+)_USA_Cricket|(?:Blade (?:V0820|L110|L[2357]|L7A|S6|V[6789]|V8Q|V8 SE|V9 VITA|X7|A(310|460|465|475|520|530|602)|V580|V Ultra|Q Lux)|N9[15]8St|NX(?:403A|404H|406E|40[X2]|507J|503A|505J|506J|508J|510J|512J|511J|513J|521J|523J_V1|529J|531J|541J|5[48]9J|551J|563J|569[HJ]|573J|575J|59[157]J|60[1689]J|61[12679]J|62[79]J|65[19]J|907J)|N818S|N951[0579]|N91[38]0|N9101|N913[267]|N952[01]|N9560|N9810|N799D|[UV]9180|[UV]9815|Z(?:5151V|610DL|6400C|6410S|233V|331|5031O|559DL|6621O|667T|768G|792|81[25]|818L|82[08]|83[12359]|85[125]|851M|992|(557|71[67]|798|836|861|916)BL|986DL|(232|718|828)TL|(?:233|353|558|717|799|837|862|899|917|963)VL|955A|95[678]|965|97[018]|98[1237]|986U|999|936L)|V769M|Apex2|G (LTE|Lux)|Vec|Z959|V865M|Z3001S|902ZT|KIS II Max|Kis 3|K3DX-V5G|Z930L|Optus X|Blade[ _](A510|A[357] 2019-T|A6 MAX|A0622|X9)|Z3153V|Z836F|Nubia Z(?:9|11)|Ctyon-A9|602ZT|MO-01[JK]|Z963U|402ZT|P545|P609|dandelion|901ZT|A001ZT|Z-01K|UZTE V808|ZR01|ZTG01|K8[37]CA)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "602ZT(?:[);/ ]|$)" , model : "Libero 2" , } , Model { regex : "A001ZT(?:[);/ ]|$)" , model : "Libero 3" , } , Model { regex : "901ZT(?:[);/ ]|$)" , model : "Libero S10" , } , Model { regex : "ZR01(?:[);/ ]|$)" , model : "Rakuten Big" , } , Model { regex : "ZTG01(?:[);/ ]|$)" , model : "A1" , } , Model { regex : "A7020(?:[);/ ]|$)" , model : "Blade A7s (2020)" , } , Model { regex : "ZTE 2050(?:RU)?" , model : "Blade 20 Smart" , } , Model { regex : "902ZT(?:[);/ ]|$)" , model : "Axon 10 Pro 5G" , } , Model { regex : "N799D(?:[);/ ]|$)" , model : "Blade Eg" , } , Model { regex : "Z818L(?:[);/ ]|$)" , model : "Allstar" , } , Model { regex : "Z3001S(?:[);/ ]|$)" , model : "Quest Plus" , } , Model { regex : "Ctyon-A9(?:[);/ ]|$)" , model : "Ctyon A9" , } , Model { regex : "K3DX-V5G(?:[);/ ]|$)" , model : "V5G" , } , Model { regex : "(?:ZTE)?N918St(?:[);/ ]|$)" , model : "V5S" , } , Model { regex : "N958St(?:[);/ ]|$)" , model : "V5 Max" , } , Model { regex : "N9101(?:[);/ ]|$)" , model : "Imperial" , } , Model { regex : "Z963U(?:[);/ ]|$)" , model : "Imperial Max" , } , Model { regex : "N9120(?:[);/ ]|$)" , model : "Avid" , } , Model { regex : "N9130(?:[);/ ]|$)" , model : "Speed" , } , Model { regex : "N9132(?:[);/ ]|$)" , model : "Prestige" , } , Model { regex : "N9136(?:[);/ ]|$)" , model : "Prestige 2" , } , Model { regex : "N9137(?:[);/ ]|$)" , model : "Tempo X" , } , Model { regex : "N9180(?:[);/ ]|$)" , model : "V5" , } , Model { regex : "N9510(?:[);/ ]|$)" , model : "Warp 4G" , } , Model { regex : "Z5151V(?:[);/ ]|$)" , model : "Visible R2" , } , Model { regex : "N9517(?:[);/ ]|$)" , model : "Blade Force" , } , Model { regex : "Z559DL(?:[);/ ]|$)" , model : "Blade T2" , } , Model { regex : "402ZT(?:[);/ ]|$)" , model : "Blade Q+" , } , Model { regex : "Blade Q Lux(?:[);/ ]|$)" , model : "Blade Q Lux" , } , Model { regex : "N9515(?:[);/ ]|$)" , model : "Warp Sync" , } , Model { regex : "N9519(?:[);/ ]|$)" , model : "Warp 7" , } , Model { regex : "N9520(?:[);/ ]|$)" , model : "Boost Max" , } , Model { regex : "N9521(?:[);/ ]|$)" , model : "Boost Max+" , } , Model { regex : "N9560(?:[);/ ]|$)" , model : "Max XL" , } , Model { regex : "N9810(?:[);/ ]|$)" , model : "Vital" , } , Model { regex : "NX40[X2](?:[);/ ]|$)" , model : "Nubia Z5 Mini" , } , Model { regex : "NX(403[AE]|406E|404H)(?:[);/ ]|$)" , model : "Nubia Z5S Mini" , } , Model { regex : "NX503A(?:[);/ ]|$)" , model : "Nubia Z5S" , } , Model { regex : "NX506J(?:[);/ ]|$)" , model : "Nubia Z7" , } , Model { regex : "NX507J(?:[);/ ]|$)" , model : "Nubia Z7 Mini" , } , Model { regex : "NX505J(?:[);/ ]|$)" , model : "Nubia Z7 Max" , } , Model { regex : "NX508J(?:[);/ ]|$)" , model : "Nubia Z9" , } , Model { regex : "(NX5[12]1J|Nubia Z9 mini)(?:[);/ ]|$)" , model : "Nubia Z9 Mini" , } , Model { regex : "(NX510J|Nubia Z9 Max)(?:[);/ ]|$)" , model : "Nubia Z9 Max" , } , Model { regex : "NX512J(?:[);/ ]|$)" , model : "Nubia Z9 Max Dual" , } , Model { regex : "NX531J(?:[);/ ]|$)" , model : "Nubia Z11" , } , Model { regex : "NX523J_V1" , model : "Nubia Z11 Max" , } , Model { regex : "(?:NX549J|Nubia Z11 mini S)(?:[);/ ]|$)" , model : "Nubia Z11 Mini S" , } , Model { regex : "(?:NX529J|Nubia Z11 mini)(?:[);/ ]|$)" , model : "Nubia Z11 Mini" , } , Model { regex : "NX606J(?:[);/ ]|$)" , model : "Nubia Z18" , } , Model { regex : "NX616J(?:[);/ ]|$)" , model : "Nubia Z18S" , } , Model { regex : "NX611J(?:[);/ ]|$)" , model : "Nubia Z18 Mini" , } , Model { regex : "NX551J(?:[);/ ]|$)" , model : "Nubia M2" , } , Model { regex : "NX563J(?:[);/ ]|$)" , model : "Nubia Z17" , } , Model { regex : "NX569[HJ](?:[);/ ]|$)" , model : "Nubia Z17 Mini" , } , Model { regex : "NX589J(?:[);/ ]|$)" , model : "Nubia Z17 Mini S" , } , Model { regex : "NX591J(?:[);/ ]|$)" , model : "Nubia Z17 Lite" , } , Model { regex : "NX595J(?:[);/ ]|$)" , model : "Nubia Z17S" , } , Model { regex : "NX612J(?:[);/ ]|$)" , model : "Nubia V18" , } , Model { regex : "NX627J" , model : "Nubia Z20" , } , Model { regex : "NX513J(?:[);/ ]|$)" , model : "Nubia My Prague" , } , Model { regex : "NX601J(?:[);/ ]|$)" , model : "Nubia X6" , } , Model { regex : "NX609J(?:[);/ ]|$)" , model : "Nubia Red Magic" , } , Model { regex : "NX659J(?:[);/ ]|$)" , model : "Nubia Red Magic 5G" , } , Model { regex : "NX651J(?:[);/ ]|$)" , model : "Nubia Play" , } , Model { regex : "NX619J(?:[);/ ]|$)" , model : "Nubia Red Magic Mars" , } , Model { regex : "NX629J(?:[);/ ]|$)" , model : "Nubia Red Magic 3" , } , Model { regex : "NX573J" , model : "Nubia M2 Lite" , } , Model { regex : "NX907J(?:[);/ ]|$)" , model : "Nubia M2 Play" , } , Model { regex : "NX541J" , model : "Nubia N1" , } , Model { regex : "NX597J" , model : "Nubia N1 Lite" , } , Model { regex : "NX575J" , model : "Nubia N2" , } , Model { regex : "NX6(08|17)J(?:[);/ ]|$)" , model : "Nubia N3" , } , Model { regex : "[UV]9180(?:[);/ ]|$)" , model : "V5 Red Bull" , } , Model { regex : "[UV]9815(?:[);/ ]|$)" , model : "Grand Memo LTE" , } , Model { regex : "V779M" , model : "Joey Jump 2" , } , Model { regex : "V807" , model : "Blade C" , } , Model { regex : "V809" , model : "Blade C2" , } , Model { regex : "ZTE_Blade_C2_Plus" , model : "Blade C2 Plus" , } , Model { regex : "Blade G Plus" , model : "Blade G Plus" , } , Model { regex : "ZTE_Blade_III" , model : "Blade III" , } , Model { regex : "(?:ZTE_)?V829" , model : "Blade G Pro" , } , Model { regex : "V882" , model : "Lord" , } , Model { regex : "V967S" , model : "Grand X2" , } , Model { regex : "V970M?|V987" , model : "Grand X" , } , Model { regex : "Z959(?:[);/ ]|$)" , model : "Grand X3" , } , Model { regex : "V8000" , model : "Nova 4" , } , Model { regex : "Z95[67]" , model : "Grand X4" , } , Model { regex : "Z987" , model : "Grand X Max+" , } , Model { regex : "(?:ZTE_)?Grand[ _]Era" , model : "Grand Era" , } , Model { regex : "V788D" , model : "Kis Plus" , } , Model { regex : "Z331(?:[);/ ]|$)" , model : "Z331" , } , Model { regex : "N818S(?:[);/ ]|$)" , model : "N818S" , } , Model { regex : "Z5031O(?:[);/ ]|$)" , model : "Optus X Spirit 2" , } , Model { regex : "P545(?:[);/ ]|$)" , model : "Optus X Power 2" , } , Model { regex : "P609(?:[);/ ]|$)" , model : "Optus X Wave" , } , Model { regex : "Optus X Start(?:[);/ ]|$)" , model : "Optus X Start" , } , Model { regex : "BA520(?:[);/ ]|$)" , model : "Blade A520" , } , Model { regex : "Blade (A(0620|310|321|452|460|462|465|475|510|512|52[012]|530|531|602|612|910)|L[12]10|L130|V0730|V0800|V580|V1000)(?:[);/ ]|$)" , model : "Blade $1" , } , Model { regex : "Blade L2 Plus(?:[);/ ]|$)" , model : "Blade L2 Plus" , } , Model { regex : "(?:ZTE_)?Blade[ _]L2(?:[);/ ]|$)" , model : "Blade L2" , } , Model { regex : "Blade L3 Plus(?:[);/ ]|$)" , model : "Blade L3 Plus" , } , Model { regex : "Blade L3 Apex(?:[);/ ]|$)" , model : "Blade L3 Apex" , } , Model { regex : "Blade L3(?:[);/ ]|$)" , model : "Blade L3" , } , Model { regex : "Blade L5 Plus(?:[);/ ]|$)" , model : "Blade L5 Plus" , } , Model { regex : "Blade L5(?:[);/ ]|$)" , model : "Blade L5" , } , Model { regex : "Blade L6(?:[);/ ]|$)" , model : "Blade L6" , } , Model { regex : "Blade L7A(?:[);/ ]|$)" , model : "Blade L7A" , } , Model { regex : "Blade L7(?:[);/ ]|$)" , model : "Blade L7" , } , Model { regex : "Blade L8(?:RU)?(?:[);/ ]|$)" , model : "Blade L8" , } , Model { regex : "Blade A([357]) (20(?:19|20))" , model : "Blade A$1 ($2)" , } , Model { regex : "Blade A3 Lite(?:[);/ ]|$)" , model : "Blade A3 Lite" , } , Model { regex : "BLADE A0622(?:[);/ ]|$)" , model : "Blade A6" , } , Model { regex : "BLADE A6 MAX(?:[);/ ]|$)" , model : "Blade A6 Max" , } , Model { regex : "Blade S6 Plus(?:[);/ ]|$)" , model : "Blade S6 Plus" , } , Model { regex : "Blade S6(?:[);/ ]|$)" , model : "Blade S6" , } , Model { regex : "T920(?:[);/ ]|$)" , model : "Blade S7" , } , Model { regex : "BLADE V Ultra(?:[);/ ]|$)" , model : "Blade V Ultra" , } , Model { regex : "Blade V6 MAX(?:[);/ ]|$)" , model : "Blade V6 Max" , } , Model { regex : "Blade V6 Plus(?:[);/ ]|$)" , model : "Blade V6 Plus" , } , Model { regex : "Blade (?:V7 Lite|V0720)(?:[);/ ]|$)" , model : "Blade V7 Lite" , } , Model { regex : "Blade V([67])(?:[);/ ]|$)" , model : "Blade V$1" , } , Model { regex : "Blade X([79])(?:[);/ ]|$)" , model : "Blade X$1" , } , Model { regex : "Blade V8Q(?:[);/ ]|$)" , model : "Blade V8Q" , } , Model { regex : "Blade V8 SE(?:[);/ ]|$)" , model : "Blade V8 SE" , } , Model { regex : "Blade V(9|10) Vita(?:[);/ ]|$)" , model : "Blade V$1 Vita" , } , Model { regex : "Blade V([89]|10)(?:[);/ ]|$)" , model : "Blade V$1" , } , Model { regex : "BLADE V0820(?:[);/ ]|$)" , model : "Blade V8 Lite" , } , Model { regex : "BLADE V0850(?:[);/ ]|$)" , model : "Blade V8 Mini" , } , Model { regex : "(?:Blade[ _])?(Apex2|G (LTE|Lux)|Vec|A510)" , model : "Blade $1" , } , Model { regex : "Z768G(?:[);/ ]|$)" , model : "Midnight" , } , Model { regex : "Z820" , model : "Obsidian" , } , Model { regex : "Z986U" , model : "Blade Max 3" , } , Model { regex : "Z6410S" , model : "Blade Max 2s" , } , Model { regex : "Z610DL" , model : "Blade Max View" , } , Model { regex : "Z971" , model : "Blade Spark" , } , Model { regex : "Z978" , model : "Blade V8 Pro" , } , Model { regex : "Z839" , model : "Blade Vantage" , } , Model { regex : "Z3153V" , model : "Blade Vantage 2" , } , Model { regex : "Z930L" , model : "Unico LTE" , } , Model { regex : "Z965" , model : "Blade X" , } , Model { regex : "Z6400C" , model : "Blade X2 Max" , } , Model { regex : "Z981" , model : "Blade Z Max Pro" , } , Model { regex : "Z982" , model : "Blade Z Max" , } , Model { regex : "Z983" , model : "Blade X Max" , } , Model { regex : "Z717[BV]L(?:[);/ ]|$)" , model : "Citrine LTE" , } , Model { regex : "Z233VL(?:[);/ ]|$)" , model : "Cymbal-C LTE" , } , Model { regex : "Z233V" , model : "Cymbal LTE" , } , Model { regex : "Z232TL" , model : "Cymbal-G LTE" , } , Model { regex : "Z353VL" , model : "Cymbal-T LTE" , } , Model { regex : "Z718TL" , model : "Jasper LTE" , } , Model { regex : "KIS II Max" , model : "Kis II Max" , } , Model { regex : "Kis 3" , model : "Kis 3" , } , Model { regex : "(?:Z798BL|Z799VL)(?:[);/ ]|$)" , model : "Majesty Pro LTE" , } , Model { regex : "Z899VL" , model : "Majesty Pro Plus LTE" , } , Model { regex : "Z828TL" , model : "Midnight Pro LTE" , } , Model { regex : "(?:ZTE-)?Z792" , model : "Fanfare" , } , Model { regex : "(?:ZTE-)?Z812" , model : "Maven" , } , Model { regex : "Z815" , model : "Fanfare 2" , } , Model { regex : "Z831" , model : "Maven 2" , } , Model { regex : "Z832" , model : "Sonata 3" , } , Model { regex : "Z835" , model : "Maven 3" , } , Model { regex : "Z851(?:[);/ ]|$)" , model : "Prelude Plus" , } , Model { regex : "Z851M" , model : "Overture 3" , } , Model { regex : "Z852" , model : "Fanfare 3" , } , Model { regex : "Z828" , model : "Avid Plus" , } , Model { regex : "Z855" , model : "Avid 4" , } , Model { regex : "Z833" , model : "Avid TRIO" , } , Model { regex : "(?:Z836BL|Z837VL|Z836F)(?:[);/ ]|$)" , model : "ZFive 2 LTE" , } , Model { regex : "Z558VL" , model : "ZFive C LTE" , } , Model { regex : "Z557BL" , model : "ZFive G LTE" , } , Model { regex : "(?:Z861BL|Z862VL)(?:[);/ ]|$)" , model : "ZFive L LTE" , } , Model { regex : "Z916BL" , model : "ZMax Grand LTE" , } , Model { regex : "Z917VL" , model : "ZMax Champ LTE" , } , Model { regex : "(?:Z958|Z955A)(?:[);/ ]|$)" , model : "ZMax 2" , } , Model { regex : "dandelion(?:[);/ ]|$)" , model : "ZMax 3" , } , Model { regex : "Z963VL" , model : "Max Duo LTE" , } , Model { regex : "Z970" , model : "ZMax Z970" , } , Model { regex : "Z986DL" , model : "MAX Blue LTE" , } , Model { regex : "(?:ZTE[-_])?Z992" , model : "Avail 2" , } , Model { regex : "(?:Z999|Z-01K)(?:[);/ ]|$)" , model : "Axon M" , } , Model { regex : "B2016" , model : "Axon Mini" , } , Model { regex : "A2015" , model : "Axon Tianji" , } , Model { regex : "A2017[GU]?" , model : "Axon 7" , } , Model { regex : "A2018" , model : "Axon 7s" , } , Model { regex : "A2019G Pro" , model : "Axon Pro" , } , Model { regex : "B2017G" , model : "Axon 7 Mini" , } , Model { regex : "A2020G? Pro(?:[);/ ]|$)" , model : "Axon 10 Pro" , } , Model { regex : "Z667T" , model : "Zinger" , } , Model { regex : "V?975|geek" , model : "Geek" , } , Model { regex : "Z716BL" , model : "Citrine LTE" , } , Model { regex : "X500" , model : "Score" , } , Model { regex : "X501" , model : "Groove" , } , Model { regex : "(?:ZTE-)?G-X991" , model : "Rio" , } , Model { regex : "F-450" , model : "Adamant" , } , Model { regex : "Z936L(?:[);/ ]|$)" , model : "Lever" , } , Model { regex : "MO-01[JK](?:[);/ ]|$)" , model : "Mono" , } , Model { regex : "V865M(?:[);/ ]|$)" , model : "V865M" , } , Model { regex : "Z6621O(?:[);/ ]|$)" , model : "Optus X Vista" , } , Model { regex : "V769M(?:[);/ ]|$)" , model : "Leo Q2" , } , Model { regex : "K83CA(?:[);/ ]|$)" , model : "Grand X View 3" , } , Model { regex : "K87CA(?:[);/ ]|$)" , model : "Grand X View 4" , } , Model { regex : "AxonPhone ([^;/]+) Build" , model : "AxonPhone $1" , } , Model { regex : "([a-z0-9]+)_USA_Cricket" , model : "$1" , } , Model { regex : "ZTE[- ](V98|V96A|V81|V70)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "ZTE[- ]([a-z0-9\\-_ ]+) Build" , model : "$1" , } , Model { regex : "ZTE-(?:G |G-)?([a-z0-9 _]+)" , model : "$1" , } , Model { regex : "U?ZTE[ _]?([a-z0-9]+)" , model : "$1" , } ,]) , }) , ("Xtratech" , Brand { regex : "(BRIO[_ ]X31)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Lenovo" , Brand { regex : "(?:LNV-)?Lenovo|IdeaTab|IdeaPad|Thinkpad|Yoga Tablet|Tab2A[0-9]-[0-9]{2}[a-z]?|ZUK[ -_]|(?:TB2-X30L|TB3-710I|YT3-X50[ML]|K50a40|TB-(?:X103F|8504F|X304F|X704V|X704A)|A5500-H|A2107A-H|A3500-HV|A2109A|S6000|Z2 Plus|Vibe[ _](?:P1|S6i Plus|S[23567]i|C|[ZX]2|K5(?: Plus)?|V7)|P2A42|L38011|L18011|[5-8]01LV|[67]02LV|Z2131|K350t|K31-t3|TAB 2 A8-50LC|S90-A|P70-A|VR-1541F)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Lenovo ?G780" , model : "G780" , } , Model { regex : "Lenovo ?A3500-FL" , model : "IdeaTab A7-40" , } , Model { regex : "(?:Lenovo ?)?A3500-(?:H|HV|F)" , model : "IdeaTab A7-50" , } , Model { regex : "(?:Lenovo[ _])?A5500-[HF]" , model : "IdeaTab A8-50" , } , Model { regex : "Lenovo ?A7600-[HF]" , model : "IdeaTab A10-70" , } , Model { regex : "A2107A-H" , model : "A2107" , } , Model { regex : "A2109A" , model : "IdeaTab A2109A" , } , Model { regex : "TB2-X30[FL]" , model : "Tab 2 A10-30" , } , Model { regex : "YT3-X50[FLM]" , model : "Yoga Tab 3" , } , Model { regex : "TB3-730X" , model : "TAB3 7" , } , Model { regex : "TB3-710[IF]" , model : "TAB3 7 Essential" , } , Model { regex : "TB-7703X" , model : "TAB3 7 Plus" , } , Model { regex : "TB3-X70L" , model : "TAB3 10 Plus" , } , Model { regex : "TB-8703X" , model : "TAB3 8 Plus" , } , Model { regex : "TAB 2 A8-50LC" , model : "TAB2 A8-50LC" , } , Model { regex : "501LV(?:[);/ ]|$)" , model : "TAB2 8.0\"" , } , Model { regex : "TAB 2 A10-70L(?:[);/ ]|$)" , model : "TAB 2 A10" , } , Model { regex : "(?:TB3-850[FM]|601LV)(?:[);/ ]|$)" , model : "TAB3 8" , } , Model { regex : "602LV(?:[);/ ]|$)" , model : "TAB3 8 Dual" , } , Model { regex : "TB-X304[FL]" , model : "TAB4 10" , } , Model { regex : "TB-8504X" , model : "TAB4 8" , } , Model { regex : "TB-8704X" , model : "TAB4 8 Plus" , } , Model { regex : "(?:TB-X704[FVL]|70[12]LV)(?:[);/ ]|$)" , model : "TAB4 10 Plus" , } , Model { regex : "801LV(?:[);/ ]|$)" , model : "TAB5 10.1\"" , } , Model { regex : "TB-X103F(?:[);/ ]|$)" , model : "TAB10 10.1\"" , } , Model { regex : "TB-X704A(?:[);/ ]|$)" , model : "Moto Tab" , } , Model { regex : "TB-X605F(?:[);/ ]|$)" , model : "Tab M10" , } , Model { regex : "TB-X705F(?:[);/ ]|$)" , model : "Tab P10" , } , Model { regex : "TB-X705F(?:[);/ ]|$)" , model : "Tab P10" , } , Model { regex : "TB-7104I(?:[);/ ]|$)" , model : "Tab E7" , } , Model { regex : "TB-8304F1(?:[);/ ]|$)" , model : "Tab E8" , } , Model { regex : "TB-7304X(?:[);/ ]|$)" , model : "Tab 7 Essential" , } , Model { regex : "TB-7504X(?:[);/ ]|$)" , model : "Tab 7" , } , Model { regex : "TB-X606[FXV](?:[);/ ]|$)" , model : "Tab M10 FHD Plus" , } , Model { regex : "Lenovo ?B8000(-[FH])?" , model : "Yoga Tablet 10" , } , Model { regex : "YOGA Tablet 2 Pro-1380[FL]" , model : "Yoga Tablet 2 Pro 13.3\"" , } , Model { regex : "YOGA Tablet 2-1050[FL]" , model : "Yoga Tablet 2 10.1\"" , } , Model { regex : "YOGA Tablet 2-830(?:[FL]|LC)" , model : "Yoga Tablet 2 8.0\"" , } , Model { regex : "Lenovo ?B6000(-[FH])?" , model : "Yoga Tablet 8" , } , Model { regex : "YT3-X90(L|F|X)" , model : "Yoga 3 Pro" , } , Model { regex : "YT3-850[FL]" , model : "Yoga Tab 3 8" , } , Model { regex : "YT3-850M" , model : "Yoga Tab 3 10" , } , Model { regex : "YT-X703L" , model : "Yoga Tab 3 Plus" , } , Model { regex : "S6000(?:[);/ ]|$)" , model : "IdeaTab S6000" , } , Model { regex : "Lenovo ([ASB][0-9]{4})[A-Z]?\\-[EHF]" , model : "IdeaTab $1" , } , Model { regex : "ThinkPadTablet_(A[0-9]{3})_" , model : "ThinkPad Tablet $1" , } , Model { regex : "ThinkPad ?Tablet([^;/]*) Build" , model : "ThinkPad Tablet$1" , } , Model { regex : "Lenovo ?A3300-(?:GV|H)" , model : "TAB 2 A7-30" , } , Model { regex : "TAB 2 A7-30[HGD]C" , model : "TAB 2 A7" , } , Model { regex : "TB-8504F" , model : "TAB 4 8" , } , Model { regex : "TB-X304X" , model : "Tab 4 10.1\"" , } , Model { regex : "TB-X304X" , model : "Tab 4 10.1\"" , } , Model { regex : "TB-X304F" , model : "TAB4 10" , } , Model { regex : "TB-X505[FX]" , model : "M10" , } , Model { regex : "TB-X104[FXL]" , model : "E10" , } , Model { regex : "Tab2A([0-9]-[0-9]{2}[a-z]?)" , model : "TAB 2 A$1" , } , Model { regex : "IdeaTab[ \\-_]?([a-z0-9]+)" , model : "IdeaTab $1" , } , Model { regex : "Yoga Tablet([^;/]+) Build" , model : "Yoga Tablet$1" , } , Model { regex : "TB-8505F" , model : "Tab M8" , } , Model { regex : "TB-8705F" , model : "Tab M8 FHD" , } , Model { regex : "TB-8705F" , model : "Tab M8 FHD" , } , Model { regex : "Lenovo (TB[0-9]?\\-[a-z0-9\\-]+) Build" , model : "$1" , } , Model { regex : "L18011(?:[);/ ]|$)" , model : "A5" , } , Model { regex : "Z2 Plus" , model : "Z2 Plus" , } , Model { regex : "Z2151" , model : "ZUK Edge" , } , Model { regex : "Z213[12]" , model : "ZUK Z2" , } , Model { regex : "Z2121" , model : "ZUK Z2 Pro" , } , Model { regex : "ZUK[ -_]([^/;]*)(?: Build|\\))" , model : "ZUK $1" , } , Model { regex : "K10a40(?:[);/ ]|$)" , model : "C2" , } , Model { regex : "k50a40(?:[);/ ]|$)" , model : "K3 Note" , } , Model { regex : "A7010a48(?:[);/ ]|$)" , model : "K4 Note" , } , Model { regex : "K350t(?:[);/ ]|$)" , model : "K5" , } , Model { regex : "L38011(?:[);/ ]|$)" , model : "K5 Play" , } , Model { regex : "A7020a4[08](?:[);/ ]|$)" , model : "K5 Note" , } , Model { regex : "K31-t3(?:[);/ ]|$)" , model : "K31" , } , Model { regex : "(?:A6020a46|Vibe K5 Plus)(?:[);/ ]|$)" , model : "Vibe K5 Plus" , } , Model { regex : "(?:Lenovo-)?(?:A6020(?:a40|l36)|Vibe K5)(?:[);/ ]|$)" , model : "Vibe K5" , } , Model { regex : "VIBE Z2(?:[);/ ]|$)" , model : "Vibe Z2" , } , Model { regex : "VIBE C(?:[);/ ]|$)" , model : "Vibe C" , } , Model { regex : "VIBE X2(?:[);/ ]|$)" , model : "Vibe X2" , } , Model { regex : "VIBE V7(?:[);/ ]|$)" , model : "Vibe V7" , } , Model { regex : "VIBE S6i Plus(?:[);/ ]|$)" , model : "Vibe S6i Plus" , } , Model { regex : "VIBE[ _]S([23567])i(?:[);/ ]|$)" , model : "Vibe S$1i" , } , Model { regex : "k33a48(?:[);/ ]|$)" , model : "K6" , } , Model { regex : "P2A42(?:[);/ ]|$)" , model : "P2" , } , Model { regex : "k53a48(?:[);/ ]|$)" , model : "K6 Note" , } , Model { regex : "K33a42(?:[);/ ]|$)" , model : "K6 Power" , } , Model { regex : "P1ma40(?:[);/ ]|$)" , model : "Vibe P1m" , } , Model { regex : "Vibe P1 Turbo(?:[);/ ]|$)" , model : "Vibe P1 Turbo" , } , Model { regex : "(?:P1(?:a42|c72)|Vibe P1)(?:[);/ ]|$)" , model : "Vibe P1" , } , Model { regex : "A2016a40(?:[);/ ]|$)" , model : "Vibe B" , } , Model { regex : "A1010a20(?:[);/ ]|$)" , model : "A Plus" , } , Model { regex : "Z90a40(?:[);/ ]|$)" , model : "Vibe Shot" , } , Model { regex : "S1a40(?:[);/ ]|$)" , model : "Vibe S1" , } , Model { regex : "L78071(?:[);/ ]|$)" , model : "Z5s" , } , Model { regex : "L58041(?:[);/ ]|$)" , model : "S5 Pro" , } , Model { regex : "L18021(?:[);/ ]|$)" , model : "A3" , } , Model { regex : "PB2-670M(?:[);/ ]|$)" , model : "Phab 2" , } , Model { regex : "(S90-A|P70-A)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "IdeaPad ?([^;/]*) Build" , model : "IdeaPad $1" , } , Model { regex : "VR-1541F" , model : "Mirage Solo" , } , Model { regex : "LENOVO/81W8(?:[);/ ]|$)" , model : "IdeaPad S145-15IIL" , } , Model { regex : "LENOVO/81MV(?:[);/ ]|$)" , model : "IdeaPad S145-15IWL" , } , Model { regex : "LENOVO/81SS(?:[);/ ]|$)" , model : "Flex 14API 81SS" , } , Model { regex : "Lenovo TAB ?([^/;]*) Build" , model : "TAB $1" , } , Model { regex : "Lenovo ([^/;]*) Build" , model : "$1" , } , Model { regex : "(?:LNV-|Lenovo-)?Lenovo[ \\-_]?([a-z0-9_+\\-]+)" , model : "$1" , } ,]) , }) , ("M4tel" , Brand { regex : "M4 SS[0-9]{4}(?:-R)?|M4_B[23]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "SS1050" , model : "Joy" , } , Model { regex : "SS1060" , model : "Live" , } , Model { regex : "SS1070" , model : "Sense" , } , Model { regex : "SS1080" , model : "Max One" , } , Model { regex : "SS1090" , model : "Max Ultra" , } , Model { regex : "SS4020" , model : "Play" , } , Model { regex : "SS4040" , model : "In Touch" , } , Model { regex : "SS4045" , model : "Style" , } , Model { regex : "SS4345" , model : "Soul Mini" , } , Model { regex : "SS4350" , model : "Soul" , } , Model { regex : "SS4445" , model : "Style Access" , } , Model { regex : "SS4450" , model : "Share" , } , Model { regex : "SS4451" , model : "Believe" , } , Model { regex : "SS4452" , model : "Dream" , } , Model { regex : "SS4453" , model : "Inspiration" , } , Model { regex : "SS4455" , model : "Excite" , } , Model { regex : "SS4456" , model : "Evolution" , } , Model { regex : "SS4457-R" , model : "Ever" , } , Model { regex : "SS4457" , model : "Elegance" , } , Model { regex : "SS4458-R" , model : "Feel Plus" , } , Model { regex : "SS4458" , model : "Attitude" , } , Model { regex : "M4_B([23])" , model : "B$1" , } ,]) , }) , ("KT-Tech" , Brand { regex : "(KM-[a-z0-9]+|EV-[a-z0-9]+)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Wiseasy" , Brand { regex : "WISENET5(?:[);/ ]|$)" , device : Some ("peripheral") , model : Some ("WISENET5") , models : None , }) , ("Siemens" , Brand { regex : "SIEMENS|SIE-|portalmmm/2\\.0 SI|(?:S55|SL45i)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(?:SIE-)?(S[56]5|S40|C45|ME45|SLIK)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "SIEMENS[ \\-]([a-z0-9]+)" , model : "$1" , } , Model { regex : "SIE(?:MENS )?[\\-]?([a-z0-9]+)" , model : "$1" , } , Model { regex : "(?:SIE-)?(SL45i)" , model : "$1" , } , Model { regex : "portalmmm/2.0 (SI[a-z0-9]+)" , model : "$1" , } ,]) , }) , ("Karbonn" , Brand { regex : "(?:Browser-)?Karbonn|K9 Kavach 4G|K9[_ ]Viraat[_ ]Plus|K9 Music 4G|K9 Smart|K9 VIRAAT 4G|Aura (?:Sleek Plus|Power 4G Plus|Note Play)|Titanium[ _](?:3D-Plex|Octane Plus|Vista 4G|Jumbo|S360|S1[059]|S35|S20[13]|S22|S[15]|S200 HD|Frames S7|MOGHUL|S9)|K-lite F3|Sparkle V|Alfa A114 Quad|Quattro[ _]L(?:45|5[025])[ _](?:HD|IPS|VR)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "K9 Kavach 4G" , model : "K9 Kavach 4G" , } , Model { regex : "K9 Music 4G" , model : "K9 Music 4G" , } , Model { regex : "K9 Smart 1GB" , model : "K9 Smart" , } , Model { regex : "K9 Smart 4G" , model : "K9 Smart 4G" , } , Model { regex : "K9 Smart Grand" , model : "K9 Smart Grand" , } , Model { regex : "K9 Smart Yuva" , model : "K9 Smart Yuva" , } , Model { regex : "K9 Smart" , model : "K9 Smart" , } , Model { regex : "K9[_ ]Viraat[_ ]Plus" , model : "K9 Viraat Plus" , } , Model { regex : "Aura Sleek Plus" , model : "Aura Sleek Plus" , } , Model { regex : "Aura Power 4G Plus" , model : "Aura Power 4G Plus" , } , Model { regex : "Aura Note Play" , model : "Aura Note Play" , } , Model { regex : "Alfa A114 Quad" , model : "Alfa A114 Quad" , } , Model { regex : "karbonnK9 Viraat 4G|K9 VIRAAT 4G" , model : "K9 Viraat 4G" , } , Model { regex : "Titanium[ _]S2[ _]Plus" , model : "Titanium S2 Plus" , } , Model { regex : "Titanium_S9Plus" , model : "Titanium S9 Plus" , } , Model { regex : "Titanium[_ ]S(99|360|1[059]|109|35|200 HD|20[13]|22|[15])(?:[);/ ]|$)" , model : "Titanium S$1" , } , Model { regex : "Titanium Vista 4G" , model : "Titanium Vista 4G" , } , Model { regex : "Titanium Jumbo 2" , model : "Titanium Jumbo 2" , } , Model { regex : "Titanium Jumbo" , model : "Titanium Jumbo" , } , Model { regex : "Titanium[ _]MOGHUL" , model : "Titanium Moghul" , } , Model { regex : "Titanium Frames S7" , model : "Titanium Frames S7" , } , Model { regex : "Titanium Octane Plus" , model : "Titanium Octane Plus" , } , Model { regex : "Titanium[ _]3D-Plex" , model : "Titanium 3D Plex" , } , Model { regex : "K-lite F3" , model : "K-Lite F3" , } , Model { regex : "Sparkle V" , model : "Sparkle V" , } , Model { regex : "Quattro[ _]L(5[05])[ _]HD" , model : "Quattro L$1 HD" , } , Model { regex : "Quattro[ _]L(45)[ _]IPS" , model : "Quattro L$1 IPS" , } , Model { regex : "Quattro[ _]L(52)[ _]VR" , model : "Quattro L$1 VR" , } , Model { regex : "Karbonn ([a-z0-9]+) WAP-Browser" , model : "$1" , } , Model { regex : "WAP Browser-Karbonn ([a-z0-9]+)/" , model : "$1" , } , Model { regex : "Karbonn_([^;/)]+)" , model : "$1" , } , Model { regex : "Karbonn ([^;/]+) Build" , model : "$1" , } , Model { regex : "Karbonn ([^;/]+)/" , model : "$1" , } ,]) , }) , ("LeEco" , Brand { regex : "Letv|LeEco|Le ?X[0-9][^;/]+|Le Max|Le [12]|Le2[_ ]x527|X900 Build|(?:X[89]00\\+|X52[67])(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "X800\\+" , model : "Le 1 Pro" , } , Model { regex : "X900\\+" , model : "Max X900+" , } , Model { regex : "X50[10]" , model : "Le 1S" , } , Model { regex : "(X910)" , model : "$1" , } , Model { regex : "X900 Build" , model : "Le X900" , } , Model { regex : "(?:Le ?X526|Le2[_ ]x527|Le 2|X52[67])(?:[);/ ]|$)" , model : "Le 2" , } , Model { regex : "Le ?X([^;/]+) Build" , model : "Le X$1" , } , Model { regex : "Le ?X([^) ;/]+)" , model : "Le X$1" , } , Model { regex : "Le ?([12][^;/]+) Build" , model : "Le $1" , } , Model { regex : "Le Max([^;/]*) Build" , model : "Le Max$1" , } , Model { regex : "Le Max([^ ;/]*)" , model : "Le Max$1" , } , Model { regex : "LeEco ([^;/]+) Build" , model : "$1" , } ,]) , }) , ("Garmin-Asus" , Brand { regex : "Garmin-Asus|Garminfone" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Garminfone[ \\-_]([^;/]*)Build" , model : "Garminfone $1" , } , Model { regex : "Garmin-Asus[ \\-_]([^;/]+)Build" , model : "$1" , } , Model { regex : "Garmin-Asus[ \\-_]([^;/]+)[\\)/]" , model : "$1" , } ,]) , }) , ("STF Mobile" , Brand { regex : "(?:Fractal|AERIAL PLUS|Origins Pro|BLOCK_MINI|BLOCK GO|BLOCK 3|SLAY II)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Fractal" , model : "Fractal" , } , Model { regex : "Origins Pro" , model : "Origins Pro" , } , Model { regex : "AERIAL PLUS" , model : "Aerial Plus" , } , Model { regex : "BLOCK_MINI" , model : "Block Mini" , } , Model { regex : "BLOCK 3 mini" , model : "Block 3 Mini" , } , Model { regex : "BLOCK 3" , model : "Block 3" , } , Model { regex : "BLOCK GO" , model : "Block Go" , } , Model { regex : "SLAY II" , model : "Slay II" , } ,]) , }) , ("HTC" , Brand { regex : "HTC|Sprint (?:APA|ATP)|ADR(?!910L)[a-z0-9]+|NexusHD2|Amaze[ _]4G(?:[);/ ]|$)|(Desire|Sensation|Evo ?3D|IncredibleS|Wildfire|Butterfly)[ _]?([^;/)]+)(?: Build|\\))|(Amaze[ _]4G|(?<!BLU LIFE |ZOPO )One ?[XELSV\\+]+)(?:[);/ ]|$)|SPV E6[05]0|(One M8|One Mini 2|X525a|PG86100|PC36100|XV6975|PJ83100|2PYB2|2PS64|2PZC5|0PJA10|0PJA2|HTV33|0PM92|0PCV1|601HT|0PAJ5|HTL2[23]|HTV3[12]|2PQ93|X2-HT|EXODUS 1|ISW13HT)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "2PZC5(?:[);/ ]|$)" , model : "U11" , } , Model { regex : "XV6975(?:[);/ ]|$)" , model : "Imagio" , } , Model { regex : "PG86100(?:[);/ ]|$)" , model : "Evo 3G" , } , Model { regex : "PC36100(?:[);/ ]|$)" , model : "Evo 4G" , } , Model { regex : "(?:HTV33|601HT)(?:[);/ ]|$)" , model : "U11" , } , Model { regex : "(?:801e|802[wdt])" , model : "One" , } , Model { regex : "PJ83100(?:[);/ ]|$)" , model : "One X" , } , Model { regex : "One Mini 2(?:[);/ ]|$)" , model : "One Mini 2" , } , Model { regex : "X2-HT(?:[);/ ]|$)" , model : "One X2" , } , Model { regex : "ISW13HT(?:[);/ ]|$)" , model : "J" , } , Model { regex : "HTL22(?:[);/ ]|$)" , model : "J One" , } , Model { regex : "HTL23(?:[);/ ]|$)" , model : "J Butterfly" , } , Model { regex : "(?:0PJA2|0PJA10)(?:[);/ ]|$)" , model : "One M9" , } , Model { regex : "X525a(?:[);/ ]|$)" , model : "One X+" , } , Model { regex : "2PQ93(?:[);/ ]|$)" , model : "One A9" , } , Model { regex : "ADR6300" , model : "Droid Incredible" , } , Model { regex : "ADR6400L" , model : "ThunderBolt" , } , Model { regex : "ADR6410LRA" , model : "Droid Incredible 3" , } , Model { regex : "SPV E600" , model : "Excalibur" , } , Model { regex : "SPV E650" , model : "Vox" , } , Model { regex : "2PYB2" , model : "Bolt" , } , Model { regex : "2PS64" , model : "10" , } , Model { regex : "0PM92(?:[);/ ]|$)" , model : "Desire 626S" , } , Model { regex : "0PCV1(?:[);/ ]|$)" , model : "Desire 510" , } , Model { regex : "608t(?:[);/ ]|$)" , model : "Desire 608t" , } , Model { regex : "EXODUS 1(?:[);/ ]|$)" , model : "Exodus 1" , } , Model { regex : "NexusHD2" , model : "HD2" , } , Model { regex : "HTC[ _\\-]P715a" , model : "P715a" , } , Model { regex : "HTC[ _\\-]Flyer Build" , model : "Flyer" , } , Model { regex : "HTC[ _\\-]Flyer[ _\\-]([\\w]{1,5})" , model : "Flyer $1" , } , Model { regex : "HTC[ _\\-]One[ _\\-]max(?:[);/ ]|$)" , model : "One max" , } , Model { regex : "HTC[ _]([^/;]+) [0-9]+(?:\\.[0-9]+)+ Build" , model : "$1" , } , Model { regex : "HTC[ _]([^/;]+) Build" , model : "$1" , } , Model { regex : "HTC[ _]([a-z0-9]+[ _\\-]?(?:[a-z0-9_+\\-])*)" , model : "$1" , } , Model { regex : "USCCHTC(\\d+)" , model : "$1" , } , Model { regex : "Sprint (ATP.*) Build" , model : "$1 (Sprint)" , } , Model { regex : "Sprint (APA.*) Build" , model : "$1 (Sprint)" , } , Model { regex : "(?:HTC-)?HTC(?:[\\-/ ])?([a-z0-9\\-_]+)" , model : "$1" , } , Model { regex : "HTC;(?: )?([a-z0-9 ]+)" , model : "$1" , } , Model { regex : "(Desire|Sensation|Evo ?3D|IncredibleS|Wildfire|Butterfly)[ _]?([^;/)]+)(?: Build|\\))" , model : "$1 $2" , } , Model { regex : "(Amaze[ _]4G|One ?[XELSV\\+]*) Build" , model : "$1" , } , Model { regex : "(ADR[^;/]+) Build" , model : "$1" , } , Model { regex : "(ADR[a-z0-9]+)" , model : "$1" , } , Model { regex : "(One M8)" , model : "$1" , } , Model { regex : "0PAJ5(?:[);/ ]|$)" , model : "One E8" , } , Model { regex : "HTV32(?:[);/ ]|$)" , model : "10" , } , Model { regex : "HTV31(?:[);/ ]|$)" , model : "J Butterfly" , } ,]) , }) , ("Digi" , Brand { regex : "(?<!FBCR/)Digi[ _]([^);/]+)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("E-tel" , Brand { regex : "E-tel_i250" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "E-tel[_ ]i250" , model : "i250" , } ,]) , }) , ("4Good" , Brand { regex : "4Good[ _]|S450m [43]G|S555m 4G|S501m 3G|T700i_3G|People (?:G503|G410|GT300)|Light (?:A103|B100)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "T700i_3G" , model : "T700i 3G" , } , Model { regex : "People GT300" , model : "People GT300" , } , Model { regex : "S555m[_ ]4G" , model : "People" , } , Model { regex : "(S(?:450m|501m)[_ ][43]G|Light (?:A103|B100)|People (?:G503|G410))" , model : "$1" , } , Model { regex : "4Good[ _]([^;/]+) Build" , model : "$1" , } , Model { regex : "4Good[ _]([^);/ ]+)" , model : "$1" , } ,]) , }) , ("Zidoo" , Brand { regex : "ZIDOO[ _](H6 Pro|X6 Pro|X9S|Z10|X[158]|X20 Pro|Z9S)(?:[);/ ]|$)" , device : Some ("tv") , model : Some ("$1") , models : None , }) , ("Kanji" , Brand { regex : "KJ-(OB03|YUBI)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "KJ-OB03(?:[);/ ]|$)" , model : "Cata 7" , } , Model { regex : "KJ-YUBI(?:[);/ ]|$)" , model : "Yubi 3G" , } ,]) , }) , ("SuperSonic" , Brand { regex : "(SC-[0-9]+[a-z]+)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Gemini" , Brand { regex : "(GEM[0-9]+[a-z]*)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Panasonic" , Brand { regex : "Panasonic|PANATV[0-9]+|Viera/|(?:P902i|P-0[28]D|FZ-B2D|FZ-[NX]1|DMC-CM1|P-01J|P-03E)(?:[);/ ]|$)|Eluga[ _]|P55 Novo 4G" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "P-01J(?:[);/ ]|$)" , model : "P-smart Keitai" , } , Model { regex : "P-03E(?:[);/ ]|$)" , model : "Eluga P" , } , Model { regex : "Eluga[ _-]([^;/]+) Build" , model : "Eluga $1" , } , Model { regex : "Eluga[ _-]([^);/]+)[;/)]" , model : "Eluga $1" , } , Model { regex : "(DMC-CM1)" , model : "Lumix $1" , } , Model { regex : "P-02D(?:[);/ ]|$)" , model : "Lumix Phone P-02D" , } , Model { regex : "(FZ-[XN]1)(?:[);/ ]|$)" , model : "Toughpad $1" , } , Model { regex : "FZ-B2D(?:[);/ ]|$)" , model : "Toughpad FZ-B2D" , } , Model { regex : "P55 Novo 4G" , model : "P55 Novo 4G" , } , Model { regex : "P902i(?:[);/ ]|$)" , model : "P902i" , } , Model { regex : "Panasonic MIL DLNA" , model : "Viera Cast" , } , Model { regex : "PANATV[0-9]+|Viera/" , model : "Smart TV" , } , Model { regex : "(43D1200|(?:32|43)D1270|32D1280)" , model : "$1" , } , Model { regex : "Panasonic[ _\\-]?([a-z0-9]+)" , model : "$1" , } , Model { regex : "portalmmm/2.0 (P[a-z0-9]+)" , model : "$1" , } , Model { regex : "P-08D(?:[);/ ]|$)" , model : "Eluga Live 10.1\"" , } ,]) , }) , ("Matrix" , Brand { regex : "(7116-A5)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Innos" , Brand { regex : "Innos_?(D6000)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Ericy" , Brand { regex : "Ericy-([a-z0-9]+)" , device : Some ("feature phone") , model : Some ("$1") , models : None , }) , ("iGet" , Brand { regex : "SMART[_ ](G10[12]|S7[02]|G71|G81[H]?)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("Smart $1") , models : None , }) , ("Storex" , Brand { regex : "eZee[^a-z]*Tab ?([^;/]*) Build|STOREX LinkBox" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "eZee[^a-z]*Tab ?([^;/]*) Build" , model : "eZee'Tab$1" , } , Model { regex : "STOREX LinkBox" , model : "LinkBox" , } ,]) , }) , ("Hosin" , Brand { regex : "HOSIN[ _-]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "HOSIN[ _-]([^;/]+) Build" , model : "$1" , } , Model { regex : "HOSIN[ _-]([^;/]+)(?:[;/)]|$)" , model : "$1" , } ,]) , }) , ("Mintt" , Brand { regex : "(?:Coolmintt(?:A3|M2)?|Ultramintt(?:S2)?|FRESHMINTT(?:A7|A10)?)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Coolmintt ?([PM]1|P3|A3|M2)(?:[);/ ]|$)" , model : "CoolMintt $1" , } , Model { regex : "Ultramintt ?([SR]1|S2)(?:[);/ ]|$)" , model : "UltraMintt $1" , } , Model { regex : "FRESHMINTT ?(A7|A10)(?:[);/ ]|$)" , model : "FreshMintt $1" , } ,]) , }) , ("Greentel" , Brand { regex : "X1_Light_Lte(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "X1_Light_Lte" , model : "X1 Light LTE" , } ,]) , }) , ("Nokia" , Brand { regex : "Nokia(?!Browser|Webview|; GT-I8750)|Lumia|Maemo RX|portalmmm/2\\.0 N7|portalmmm/2\\.0 NK|nok[0-9]+|Symbian.*\\s([a-z0-9]+)$|RX-51 N900|TA-[0-9]{4}|ARM; 909" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "TA-10(07|23|29|35)" , model : "2" , } , Model { regex : "TA-10(20|28|32|38)" , model : "3" , } , Model { regex : "TA-10(24|27|44|53)" , model : "5" , } , Model { regex : "TA-10(00|03|21|25|33|39|54)" , model : "6" , } , Model { regex : "TA-1041" , model : "7" , } , Model { regex : "TA-10(04|12|52)" , model : "8" , } , Model { regex : "Nokia 8\\.1" , model : "8.1" , } , Model { regex : "Nokia 8 Sirocco" , model : "8 Sirocco" , } , Model { regex : "Nokia 7\\.1" , model : "7.1" , } , Model { regex : "Nokia 7 plus" , model : "7 plus" , } , Model { regex : "Nokia 6\\.1 Plus" , model : "6.1 Plus" , } , Model { regex : "Nokia 6\\.1" , model : "6.1" , } , Model { regex : "Nokia 5\\.1 Plus" , model : "5.1 Plus" , } , Model { regex : "Nokia 5\\.1" , model : "5.1" , } , Model { regex : "Nokia 3\\.1 Plus" , model : "3.1 Plus" , } , Model { regex : "Nokia 3\\.1" , model : "3.1" , } , Model { regex : "Nokia 2\\.1" , model : "2.1" , } , Model { regex : "Nokia 1 Plus" , model : "1 Plus" , } , Model { regex : "Nokia 1" , model : "1" , } , Model { regex : "RX-51 N900" , model : "N900" , } , Model { regex : "(?: )?(Nokia500|nokiaasha500(?:dualsim)?)(?: Build|[_);/])" , model : "Asha 500" , } , Model { regex : "Nokia5130c(?:-2)?" , model : "5130 XpressMusic" , } , Model { regex : "Nokia5230" , model : "Nuron" , } , Model { regex : "Nokia5233" , model : "5233" , } , Model { regex : "Nokia5800d-1" , model : "5800 XpressMusic" , } , Model { regex : "Nokia6210Navigator" , model : "Navigator" , } , Model { regex : "Nokia8800e?" , model : "Sapphire Arte" , } , Model { regex : "NOKIA-RH-17" , model : "2280" , } , Model { regex : "NOKIA-RH-27" , model : "6225" , } , Model { regex : "NOKIA-RH-34" , model : "6585" , } , Model { regex : "NOKIA-RH-48" , model : "3105" , } , Model { regex : "NOKIA-RM-11" , model : "3205" , } , Model { regex : "Nokia808 PureView" , model : "808 PureView" , } , Model { regex : "Nokia ?([0-9]{4})c(?:-)?" , model : "$1 Classic" , } , Model { regex : "Nokia ?([0-9]{4})s(?:-)?" , model : "$1 Slide" , } , Model { regex : "Nokia ?([0-9]{4})" , model : "$1" , } , Model { regex : "(?: )?Nokia([235][0-9]{2})(?: Build|[_);/])" , model : "Asha $1" , } , Model { regex : "Nokia([CEX]-?[0-9]{1,2}i?)-[0-9]{1,2}u?(?: Build|[_);/])" , model : "$1" , } , Model { regex : "Nokia;? 520T" , model : "Lumia 520T" , } , Model { regex : "RM-91[45]" , model : "Lumia 520" , } , Model { regex : "RM-997|Nokia 526" , model : "Lumia 526" , } , Model { regex : "RM-846" , model : "Lumia 620" , } , Model { regex : "RM-97[68]" , model : "Lumia 630" , } , Model { regex : "RM-97[45]" , model : "Lumia 635" , } , Model { regex : "RM-1027" , model : "Lumia 636" , } , Model { regex : "NOKIA;? 710" , model : "Lumia 710" , } , Model { regex : "Nokia;? 720T" , model : "Lumia 720T" , } , Model { regex : "RM-885" , model : "Lumia 720" , } , Model { regex : "Lumia 730" , model : "Lumia 730" , } , Model { regex : "RM-103[89]" , model : "Lumia 735" , } , Model { regex : "Nokia;? 800C" , model : "Lumia 800C" , } , Model { regex : "Nokia;? 800" , model : "Lumia 800" , } , Model { regex : "Nokia 820" , model : "Lumia 820" , } , Model { regex : "RM-984" , model : "Lumia 830" , } , Model { regex : "Nokia;? 900" , model : "Lumia 900" , } , Model { regex : "(RM-82[12]|Nokia;? 920)(?: Build|[_);/])" , model : "Lumia 920" , } , Model { regex : "(RM-89[23]|RM-910|Nokia;? 925)(?: Build|[a_);/])" , model : "Lumia 925" , } , Model { regex : "Lumia 929" , model : "Lumia Icon" , } , Model { regex : "RM-1045" , model : "Lumia 930" , } , Model { regex : "(ARM; 909|NOKIA;? 909|NOKIA; id300)(?: Build|[_);/])" , model : "Lumia 1020" , } , Model { regex : "NOKIA;? 1520\\.1" , model : "Lumia 1520.1" , } , Model { regex : "Nokia ([A-Za-z0-9\\. ]+)(?: Build|\\))" , model : "$1" , } , Model { regex : "Nokia(N[0-9]+)" , model : "$1" , } , Model { regex : "Nokia-([a-z0-9]+)" , model : "N$1" , } , Model { regex : "NOKIA; (?!Qt;)([a-z0-9\\- ]+)" , model : "$1" , } , Model { regex : "NOKIA[ _]?([a-z0-9\\-]+)" , model : "$1" , } , Model { regex : "NOKIA/([a-z0-9 ]+)" , model : "$1" , } , Model { regex : "(Lumia [a-z0-9\\-]+ XL)" , model : "$1" , } , Model { regex : "(Lumia [a-z0-9\\-]+)" , model : "$1" , } , Model { regex : "Maemo RX-51 ([a-z0-9]+)" , model : "$1" , } , Model { regex : "Maemo RX-34" , model : "N800" , } , Model { regex : "NokiaInternal|Nokia-WAP-Toolkit|Nokia-MIT-Browser|Nokia Mobile|Nokia Browser|Nokia/Series" , model : "" , } , Model { regex : "portalmmm/2\\.0 (N7[37]|NK[a-z0-9]+)" , model : "$1" , } , Model { regex : "nok([0-9]+)" , model : "$1" , } , Model { regex : "Symbian.*\\s([a-z0-9]+)$" , model : "$1" , } ,]) , }) , ("i-Joy" , Brand { regex : "i-Joy|i-Call|(?:Neon[79]|Sygnus|Deox|Elektra (?:M|L|XL|XXL))(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Elektra M(?:[);/ ]|$)" , model : "Elektra M" , } , Model { regex : "Elektra L(?:[);/ ]|$)" , model : "Elektra L" , } , Model { regex : "Elektra XL(?:[);/ ]|$)" , model : "Elektra XL" , } , Model { regex : "Elektra XXL(?:[);/ ]|$)" , model : "Elektra XXL" , } , Model { regex : "Neon([79])(?:[);/ ]|$)" , model : "Neon $1" , } , Model { regex : "Sygnus(?:[);/ ]|$)" , model : "Sygnus" , } , Model { regex : "Deox(?:[);/ ]|$)" , model : "Deox" , } , Model { regex : "i-Call ([^;/]+) Build" , model : "i-Call $1" , } , Model { regex : "i-Joy ([^;/]+) Build" , model : "$1" , } ,]) , }) , ("Odys" , Brand { regex : "ODYS[ _-]|IEOS[_ ]([^/;]+)|NOON(?:_PRO)? Build|SPACE10_(?:PLUS|PRO)_3G|THOR_?10|TAO_X10|RAPID_?(?:10|7)_?LTE|MAVEN_?10_|CONNECT[78]|ELEMENT10_PLUS_3G|XELIO[_0-9P]|ADM816HC|ADM8000KP|NEO6_LTE|EOS10|AEON|FALCON_10_PLUS_3G|FUSION|THANOS_10|MAVEN_X10_HD(?:_LTE)?|JUNIOR_8_PRO|JuniorT8Pro|(?:NOVA|PYRO)_X?7_PLUS_3G|UNO_X8|SLADE_X55|XELIO_PRO_10_LTE|NOTOSplus3G" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "XELIO[_ ]A10" , model : "Xelio A10" , } , Model { regex : "XELIOPHONETAB3" , model : "Xelio Phonetab 3" , } , Model { regex : "THANOS_10" , model : "Thanos 10" , } , Model { regex : "XELIO_NEXT_10_PLUS_3G" , model : "Xelio Next 10 Plus 3G" , } , Model { regex : "XELIO_PHONE_TAB7_3G" , model : "Xelio Phonetab 7 3G" , } , Model { regex : "XELIO10EXTREME" , model : "Xelio 10 Xtreme" , } , Model { regex : "XELIO10_PLUS_3G" , model : "Xelio 10 Plus 3G" , } , Model { regex : "XELIO10_HD_PLUS_3G" , model : "Xelio 10 HD Plus 3G" , } , Model { regex : "XELIO_10_HD" , model : "Xelio 10 HD" , } , Model { regex : "XELIO_PRO_10_LTE" , model : "Xelio Pro 10 LTE" , } , Model { regex : "ELEMENT10_PLUS_3G" , model : "Element 10 Plus 3G" , } , Model { regex : "CONNECT8PLUS" , model : "Connect 8 Plus" , } , Model { regex : "CONNECT7PRO" , model : "Connect 7 Pro" , } , Model { regex : "MAVEN_X10_HD_LTE" , model : "Maven X10 HD LTE" , } , Model { regex : "MAVEN_X10_HD" , model : "Maven X10 HD" , } , Model { regex : "MAVEN_?10_PRO_PLUS_3G" , model : "Maven 10 Pro Plus 3G" , } , Model { regex : "MAVEN_?10_?PLUS" , model : "Maven 10 Plus" , } , Model { regex : "MAVEN_?10_?PRO" , model : "Maven 10 Pro" , } , Model { regex : "MAVEN_?10_?HD" , model : "Maven 10 HD" , } , Model { regex : "RAPID_?7_?LTE" , model : "Rapid 7 LTE" , } , Model { regex : "RAPID_?10_?LTE" , model : "Rapid 10 LTE" , } , Model { regex : "TAO_X10" , model : "Tao X10" , } , Model { regex : "SPACE10_PLUS_3G" , model : "Space 10 Plus 3G" , } , Model { regex : "SPACE10_PRO_3G" , model : "Space 10 Pro 3G" , } , Model { regex : "THOR_?10 Build" , model : "Thor 10" , } , Model { regex : "JuniorT8Pro" , model : "Junior T8 Pro" , } , Model { regex : "JUNIOR_8_PRO" , model : "Junior 8 Pro" , } , Model { regex : "ADM816HC" , model : "Neo X" , } , Model { regex : "EOS10" , model : "EOS 10" , } , Model { regex : "AEON" , model : "Aeon" , } , Model { regex : "FALCON_10_PLUS_3G" , model : "Falcon 10 Plus 3G" , } , Model { regex : "FUSION" , model : "Fusion 7" , } , Model { regex : "UNO_X8" , model : "Uno X8" , } , Model { regex : "ADM8000KP" , model : "Titan" , } , Model { regex : "PYRO_7_PLUS_3G" , model : "Pyro 7 Plus 3G" , } , Model { regex : "NOVA_X7_PLUS_3G" , model : "Nova X7 Plus 3G" , } , Model { regex : "ODYS_NOVA_X7" , model : "Nova X7" , } , Model { regex : "THOR_?10_PLUS_3G" , model : "Thor 10 Plus 3G" , } , Model { regex : "NOTOSplus3G" , model : "Notos Plus 3G" , } , Model { regex : "NEO6[_ ]LTE" , model : "Neo 6 LTE" , } , Model { regex : "SLADE_X55" , model : "Slade X55" , } , Model { regex : "IEOS[ _]([^/;]+) Build" , model : "Ieos $1" , } , Model { regex : "(?:ODYS[ _-])?NOON Build" , model : "Noon" , } , Model { regex : "(?:ODYS[ _-])?NOON_PRO Build" , model : "Noon Pro" , } , Model { regex : "Odys[ _-]([^/;]+) Build" , model : "$1" , } ,]) , }) , ("LCT" , Brand { regex : "LCT_([a-z0-9]+)" , device : Some ("feature phone") , model : Some ("$1") , models : None , }) , ("Seatel" , Brand { regex : "Seatel" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Seatel[ _](L2|V8[AE]|T[5-8]|R6|V[89])(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("True" , Brand { regex : " TRUE BEYOND TAB 3G|SMART[ _](MAX 4.0 PLUS|4G[ _](?:GEN C [45].[05]|Champion|Speedy 5.0 Plus|Speedy[_ ]5inch|P1))" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "SMART MAX 4.0 PLUS" , model : "Smart Max 4.0 Plus" , } , Model { regex : "SMART 4G Gen C ([45].[05])" , model : "Smart 4G Gen C $1\"" , } , Model { regex : "SMART 4G Speedy 5.0 Plus" , model : "Smart 4G Speedy 5.0 Plus" , } , Model { regex : "SMART[ _]4G[_ ]Speedy[_ ]5inch" , model : "Smart 4G Speedy 5" , } , Model { regex : "SMART[ _]4G[_ ]Champion" , model : "Smart 4G Champion" , } , Model { regex : "SMART[ _]4G[_ ]P1 Prime" , model : "Smart 4G P1 Prime" , } , Model { regex : "SMART[ _]4G[_ ]P1" , model : "Smart 4G P1" , } , Model { regex : "TRUE BEYOND TAB 3G" , model : "Beyond Tab 3G" , } ,]) , }) , ("Telit" , Brand { regex : "Telit" , device : Some ("feature phone") , model : None , models : Some (& [Model { regex : "Telit_Mobile_Terminals-([a-z0-9]+)" , model : "$1" , } , Model { regex : "Telit[\\-_]?([a-z0-9]+)" , model : "$1" , } ,]) , }) , ("Navitech" , Brand { regex : "(NeoTab)[ _-]((?:S1[23]0|S125|H85|H11[05]|KID741|S9700))(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1 $2") , models : None , }) , ("Zonda" , Brand { regex : "(ZM(?:CK|EM|TFTV|TN)[a-z0-9]+)|ZA409" , device : Some ("feature phone") , model : None , models : Some (& [Model { regex : "ZA409" , model : "Muzic" , } , Model { regex : "(ZM(?:CK|EM|TFTV|TN)[a-z0-9]+)" , model : "$1" , } ,]) , }) , ("Netgear" , Brand { regex : "GTV100" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "GTV100" , model : "NeoTV Prime" , } ,]) , }) , ("Cosmote" , Brand { regex : "Cosmote" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Cosmote_My_mini_Tab" , model : "My Mini Tab" , } ,]) , }) , ("Zfiner" , Brand { regex : "ZFINERY900(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("Y900") , models : None , }) , ("Infinix" , Brand { regex : "Infinix" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Infinix[ _-]X260" , model : "Buzz" , } , Model { regex : "Infinix[ _-]X502" , model : "Alpha Marvel" , } , Model { regex : "Infinix[ _-]X570" , model : "Alpha" , } , Model { regex : "Infinix[ _-]X350" , model : "Surf Smart" , } , Model { regex : "Infinix[ _-]X351" , model : "Surf Smart 3G" , } , Model { regex : "Infinix[ _-]X352" , model : "Surf Smart 2" , } , Model { regex : "Infinix[ _-]X403" , model : "Surf Spice" , } , Model { regex : "Infinix[ _-]X503" , model : "Surf Bravo" , } , Model { regex : "Infinix[ _-]X511" , model : "Surf Noir" , } , Model { regex : "Infinix[ _-]X400" , model : "Race" , } , Model { regex : "Infinix[ _-]X401" , model : "Race Lite" , } , Model { regex : "Infinix[ _-]X450" , model : "Race Bolt" , } , Model { regex : "Infinix[ _-]X451" , model : "Race Bolt Q" , } , Model { regex : "Infinix[ _-]X454" , model : "Race Bolt 2" , } , Model { regex : "Infinix[ _-]X500" , model : "Race Eagle" , } , Model { regex : "Infinix[ _-]X501" , model : "Race Jet" , } , Model { regex : "Infinix[ _-]X506" , model : "Zero" , } , Model { regex : "Infinix[ _-]X509" , model : "Zero 2" , } , Model { regex : "Infinix[ _-]X552" , model : "Zero 3" , } , Model { regex : "Infinix[ _-]X555" , model : "Zero 4" , } , Model { regex : "Infinix[ _-]X(?:574|602)" , model : "Zero 4 Plus" , } , Model { regex : "Infinix[ _-]X603" , model : "Zero 5" , } , Model { regex : "Infinix[ _-]X603B" , model : "Zero 5 Pro" , } , Model { regex : "Infinix[ _-]X620" , model : "Zero 6" , } , Model { regex : "Infinix[ _-]X507" , model : "Hot" , } , Model { regex : "Infinix[ _-]X510" , model : "Hot 2" , } , Model { regex : "Infinix[ _-]X55[34]" , model : "Hot 3" , } , Model { regex : "Infinix[ _-]X521" , model : "Hot S" , } , Model { regex : "Infinix[ _-]X522" , model : "Hot S2" , } , Model { regex : "Infinix[ _-]X557" , model : "Hot 4" , } , Model { regex : "Infinix[ _-]X556" , model : "Hot 4 Pro" , } , Model { regex : "Infinix[ _-]X559c" , model : "Hot 5" , } , Model { regex : "Infinix[ _-]X559" , model : "Hot 5 Lite" , } , Model { regex : "Infinix[ _-]X606[BC]?" , model : "Hot 6" , } , Model { regex : "Infinix[ _-]X608" , model : "Hot 6 Pro" , } , Model { regex : "Infinix[ _-]X624" , model : "Hot 7" , } , Model { regex : "Infinix[ _-]X650" , model : "Hot 8" , } , Model { regex : "Infinix[ _-]X680" , model : "Hot 9 Play" , } , Model { regex : "Infinix[ _-]X573B?" , model : "Hot S3" , } , Model { regex : "Infinix[ _-]X5010" , model : "Smart" , } , Model { regex : "Infinix[ _-]X5515F" , model : "Smart 2" , } , Model { regex : "Infinix[ _-]X5514D" , model : "Smart 2 Pro" , } , Model { regex : "Infinix[ _-]X653" , model : "Smart 4" , } , Model { regex : "Infinix[ _-]X626" , model : "S4" , } , Model { regex : "Infinix[ _-]X652" , model : "S5" , } , Model { regex : "Infinix[ _-]X660" , model : "S5 Pro" , } , Model { regex : "Infinix[ _-]X551" , model : "Hot Note" , } , Model { regex : "Infinix[ _-]X600" , model : "Note 2" , } , Model { regex : "Infinix[ _-]X601" , model : "Note 3" , } , Model { regex : "Infinix[ _-]X572" , model : "Note 4" , } , Model { regex : "Infinix[ _-]X571" , model : "Note 4 Pro" , } , Model { regex : "Infinix[ _-]X604" , model : "Note 5" , } , Model { regex : "Infinix[ _-]X610" , model : "Note 6" , } , Model { regex : "Infinix[ _-]X690" , model : "Note 7" , } , Model { regex : "Infinix[ _-]X656" , model : "Note 7 Lite" , } , Model { regex : "Infinix HOT ([a-z]?[1-6])( (?:Lite|Plus|Pro))?" , model : "Hot $1$2" , } , Model { regex : "Infinix[ _-](X[78]00)" , model : "$1" , } , Model { regex : "Infinix[ _-](X\\d+)" , model : "$1" , } , Model { regex : "Infinix[ _-]([a-z0-9_\\-]+)" , model : "$1" , } ,]) , }) , ("ONYX BOOX" , Brand { regex : "KON_TIKI(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("Kon Tiki") , models : None , }) , ("Konka" , Brand { regex : "KONKA[_ ]([a-z0-9]+)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "E5660S" , model : "Viva 5660s" , } , Model { regex : "W830" , model : "Tango 830" , } , Model { regex : "W(9[67]0)" , model : "Expose $1" , } , Model { regex : "W990" , model : "Tuxedo 990" , } , Model { regex : "KONKA[_ ]([a-z0-9]+)" , model : "$1" , } ,]) , }) , ("GFive" , Brand { regex : "(?:PRESIDENT_GOLD_(9|10)|President Gpower 1)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "PRESIDENT_GOLD_(9|10)" , model : "President Gold $1" , } , Model { regex : "President Gpower 1" , model : "President GPower 1" , } ,]) , }) , ("Simply" , Brand { regex : "(NP602SI)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Gigabyte" , Brand { regex : "GSmart[ _][a-z0-9 ]+(?: Build|\\))|Gigabyte-[a-z0-9]+|Simba SX1|GSmart_Classic_Lite|(?<!Eagle )Classic[_ ](?:Joy|Pro)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(GSmart[ _][a-z0-9 ]+)(?: Build|[);])" , model : "$1" , } , Model { regex : "Gigabyte-([a-z0-9]+)" , model : "$1" , } , Model { regex : "(Classic[ _](?:Joy|Pro)|GSmart_Classic_Lite)" , model : "$1" , } , Model { regex : "Simba SX1" , model : "GSmart Simba SX1" , } ,]) , }) , ("MyPhone" , Brand { regex : "(?:MyPhone|MyPad|MyTab)[ _][^;/)]+( Build|\\))|Cube_LTE|myTab10II|HAMMER[ _](FORCE|Blade2_PRO|IRON_3|Explorer|ENERGY|Titan 2|AXE[_ ](?:M[_ ]LTE|Pro)|Iron 2|Active[2]?(_LTE)?)|C-Smart_pix|myPhone_Fun_8|FUN_18x9|MyPhoneMY27|Prime_4_Lite|myA17|myX12|Pocket_2|Prime_18x9|Prime3Lite|myT6 DTV|myXI1 (?:Plus|Pro)|myXI3|Q_Smart_BE|Brown 1" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "MyPad[ _]([^;/]+) Build" , model : "MyPad $1" , } , Model { regex : "MyTab[ _]([^;/]+) Build" , model : "MyTab $1" , } , Model { regex : "myTab_10III" , model : "MyTab 10 III" , } , Model { regex : "myTab10II" , model : "MyTab 10 II" , } , Model { regex : "myT6 DTV" , model : "myT6 DTV" , } , Model { regex : "Cube_LTE" , model : "Cube LTE" , } , Model { regex : "Prime_4_Lite" , model : "Prime 4 Lite" , } , Model { regex : "HAMMER[ _]ENERGY" , model : "Hammer Energy" , } , Model { regex : "HAMMER_AXE[_ ]M[_ ]LTE" , model : "Hammer Axe M LTE" , } , Model { regex : "Hammer Titan 2" , model : "Hammer Titan 2" , } , Model { regex : "Hammer[_ ]FORCE" , model : "Hammer Force" , } , Model { regex : "Hammer[ _]Iron[ _](2|3)" , model : "Hammer Iron $1" , } , Model { regex : "Hammer[ _]Explorer" , model : "Hammer Explorer" , } , Model { regex : "Hammer Active(?:[);/ ]|$)" , model : "Hammer Active" , } , Model { regex : "Hammer_Active2(?:[);/ ]|$)" , model : "Hammer Active 2" , } , Model { regex : "Hammer_Active2_LTE(?:[);/ ]|$)" , model : "Hammer Active 2 LTE" , } , Model { regex : "Hammer AXE Pro" , model : "Hammer Axe Pro" , } , Model { regex : "Hammer_Blade2_PRO" , model : "Hammer Blade 2 Pro" , } , Model { regex : "C-Smart_pix" , model : "C-Smart Pix" , } , Model { regex : "Pocket_2(?:[);/ ]|$)" , model : "Pocket 2" , } , Model { regex : "myA17(?:[);/ ]|$)" , model : "myA17" , } , Model { regex : "(?:myPhone_)?Fun_(8|18x9)" , model : "FUN $1" , } , Model { regex : "MyPhoneMY27" , model : "my27" , } , Model { regex : "myX12(?:[);/ ]|$)" , model : "myX12" , } , Model { regex : "myXI1 Plus(?:[);/ ]|$)" , model : "myXI1 Plus" , } , Model { regex : "myXI1 Pro(?:[);/ ]|$)" , model : "myXI1 Pro" , } , Model { regex : "myXI3(?:[);/ ]|$)" , model : "myXI3" , } , Model { regex : "Q_Smart_BE(?:[);/ ]|$)" , model : "Q-Smart BE" , } , Model { regex : "Prime_18x9(_LTE)?(?:[);/ ]|$)" , model : "Prime 18x9$1" , } , Model { regex : "Prime3Lite(?:[);/ ]|$)" , model : "Prime 3 Lite" , } , Model { regex : "Brown 1(?:[);/ ]|$)" , model : "Brown 1" , } , Model { regex : "MyPhone[ _]([^;/)]+)( Build|\\))" , model : "$1" , } ,]) , }) , ("Highscreen" , Brand { regex : "HIGHSCREEN|(Easy[- ]Power(?:[- ]Pro)?|Pure[_ ](?:Power|F)|Power Ice(?: Max)?|Easy[_ ]([SFL]|XL)(?:_Pro)?|Razar_Pro|Power Rage(?: Evo)?|Zera-S-Power|Zera[ _][UFS]|Power[ _]?Five[ matrixstyle _]?(?:Pro|Evo|Max|Max(?:Lite|2))|PowerFour|BOOST II(?:se)?|Fest(?:XL)?(?:-Pro)?|Tasty|Boost3|Boost 3(?: Pro)? SE|Expanse|Hercules|Alpha Rage|VergeM|Ice2)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(Power Ice(?:[ ](?:Max|Evo))?|Power Rage(?: Evo)?|Zera[ _][UFS])(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "PowerFivePro(?:[);/ ]|$)" , model : "Power Five Pro" , } , Model { regex : "PowerFiveMaxLite(?:[);/ ]|$)" , model : "Power Five Max Lite" , } , Model { regex : "PowerFiveMax2(?:[);/ ]|$)" , model : "Power Five Max 2" , } , Model { regex : "Power Five Evo(?:[);/ ]|$)" , model : "Power Five Evo" , } , Model { regex : "Power Five Max(?:[);/ ]|$)" , model : "Power Five Max" , } , Model { regex : "FestXL-Pro(?:[);/ ]|$)" , model : "Fest XL Pro" , } , Model { regex : "FestXL(?:[);/ ]|$)" , model : "Fest XL" , } , Model { regex : "Fest-Pro(?:[);/ ]|$)" , model : "Fest Pro" , } , Model { regex : "Fest(?:[);/ ]|$)" , model : "Fest" , } , Model { regex : "PowerFour(?:[);/ ]|$)" , model : "Power Four" , } , Model { regex : "Pure[_ ]Power(?:[);/ ]|$)" , model : "Pure Power" , } , Model { regex : "Pure[ _]F(?:[);/ ]|$)" , model : "Pure F" , } , Model { regex : "Razar_Pro(?:[);/ ]|$)" , model : "Razar Pro" , } , Model { regex : "Easy[_ ]([SLF]|XL)[_ ]Pro(?:[);/ ]|$)" , model : "Easy $1 Pro" , } , Model { regex : "Easy[_ ]([SFL]|XL)(?:[);/ ]|$)" , model : "Easy $1" , } , Model { regex : "(?:HIGHSCREEN )?Easy[- ]Power[- ]Pro(?:[);/ ]|$)" , model : "Easy Power Pro" , } , Model { regex : "(?:HIGHSCREEN )?Easy-Power(?:[);/ ]|$)" , model : "Easy Power" , } , Model { regex : "BOOST II(?:[);/ ]|$)" , model : "Boost 2" , } , Model { regex : "BOOST IIse(?:[);/ ]|$)" , model : "Boost 2 SE" , } , Model { regex : "Boost 3 SE(?:[);/ ]|$)" , model : "Boost 3 SE" , } , Model { regex : "Boost 3 Pro SE(?:[);/ ]|$)" , model : "Boost 3 Pro SE" , } , Model { regex : "BOOST3(?:[);/ ]|$)" , model : "Boost 3" , } , Model { regex : "Zera-S-Power(?:[);/ ]|$)" , model : "Zera S Power" , } , Model { regex : "Tasty(?:[);/ ]|$)" , model : "Tasty" , } , Model { regex : "VergeM(?:[);/ ]|$)" , model : "Verge M" , } , Model { regex : "WinWin(?:[);/ ]|$)" , model : "WinWin" , } , Model { regex : "Expanse(?:[);/ ]|$)" , model : "Expanse" , } , Model { regex : "Hercules(?:[);/ ]|$)" , model : "Hercules" , } , Model { regex : "Alpha Rage(?:[);/ ]|$)" , model : "Alpha Rage" , } , Model { regex : "Ice2(?:[);/ ]|$)" , model : "Ice 2" , } ,]) , }) , ("Swipe" , Brand { regex : "(Elite Sense|Elite_VR)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Etuline" , Brand { regex : "(ETL-S(?:3520|4521|5042|5084|6022)|ETL-T(?:752G|882G|9[78]0))(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(ETL-S(?:[^/); ]+))" , model : "$1" , } , Model { regex : "(ETL-T(?:[^/); ]+))" , model : "$1" , } ,]) , }) , ("X-View" , Brand { regex : "ZEN_U5\\+|AMBER_KIDS|Proton_Amber_HD|PROTON_JADE_2_PRO" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "ZEN_U5\\+" , model : "ZEN U5+" , } , Model { regex : "AMBER_KIDS" , model : "Amber Kids" , } , Model { regex : "Proton_Amber_HD" , model : "Proton Amber HD" , } , Model { regex : "PROTON_JADE_2_PRO" , model : "Proton Jade 2 Pro" , } ,]) , }) , ("Rokit" , Brand { regex : "IO Pro" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "IO Pro" , model : "IO Pro" , } ,]) , }) , ("Eurostar" , Brand { regex : "(ET7002C-H12|Onyx-[13]S)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Onyx-([13]S)(?:[);/ ]|$)" , model : "Onyx $1" , } , Model { regex : "ET7002C-H12(?:[);/ ]|$)" , model : "ePad 4S" , } ,]) , }) , ("Avvio" , Brand { regex : "Avvio[ _]?([a-z0-9\\-]+)|(?:CHIVAS_55|Colombia_2018|Mint_M353)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "CHIVAS_55" , model : "Chivas 55" , } , Model { regex : "Mint_M353" , model : "Mint M353" , } , Model { regex : "Colombia_2018" , model : "Colombia (2018)" , } , Model { regex : "Avvio[ _]PAD" , model : "PAD" , } , Model { regex : "Avvio[ _]?([a-z0-9\\-]+)" , model : "$1" , } ,]) , }) , ("Protruly" , Brand { regex : "PROTRULY[ _](D[78]|V10S)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Pentagram" , Brand { regex : "Pentagram|Quadra|Monster X5" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "(?:PENTAGRAM[_ ])?EON[_ ]PRIX" , model : "Eon Prix" , } , Model { regex : "Quadra 7(?: UltraSlim)?" , model : "Quadra 7 UltraSlim" , } , Model { regex : "Monster X5?" , model : "Monster X5" , } , Model { regex : "Quadra ?([^);/]*) Build" , model : "Quadra $1" , } , Model { regex : "Pentagram ?TAB ?([^);/]*) Build" , model : "Tab $1" , } , Model { regex : "Pentagram ?([^);/]*) Build" , model : "$1" , } ,]) , }) , ("Sanei" , Brand { regex : "(?:8312D|G(60[25]|70[3568]G?|785|803)|N83(?:-2cpu)?|N91) Build" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "N83" , model : "N83" , } , Model { regex : "N91" , model : "N91" , } , Model { regex : "8312D" , model : "G101" , } , Model { regex : "G(60[25]|70[3568]G?|785|803)" , model : "G$1" , } ,]) , }) , ("Westpoint" , Brand { regex : "WESTPOINT[;,]" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "(TETS-4919SM)" , model : "$1" , } ,]) , }) , ("Allwinner" , Brand { regex : "(?:QUAD-CORE (?:A64 p3|A33 y3|T3 K2001M)|ZY-07B|UltraOcta-T8|OCTA-CORE T8|OCTOPUS-CORE T8|QuadCore-R16)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "QUAD-CORE A64 p3" , model : "A64 QUAD-CORE p3" , } , Model { regex : "QUAD-CORE A33 y3" , model : "A33 QUAD-CORE y3" , } , Model { regex : "ZY-07B" , model : "ZY-07B" , } , Model { regex : "UltraOcta-T8" , model : "Ultra Octa T8" , } , Model { regex : "QUAD-CORE T3 K2001M" , model : "QUAD-CORE T3 K2001M" , } , Model { regex : "OCTA-CORE T8" , model : "OCTA-CORE T8" , } , Model { regex : "OCTOPUS-CORE T8" , model : "OCTOPUS-CORE T8" , } , Model { regex : "QuadCore-R16" , model : "QUAD-CORE R16" , } ,]) , }) , ("CVTE" , Brand { regex : "CVTE[_ ](MSD338_(:?1G|512M))(?:[);/ ]|$)" , device : Some ("tv") , model : Some ("$1") , models : None , }) , ("Pluzz" , Brand { regex : "Pluzz[_-](Z552|PL5[05]10|PL4010|PL501[46]|Elite_Dual)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Axxion" , Brand { regex : "Axxion ATAB-[0-9]+(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "Axxion ATAB-([0-9]+)(?:[);/ ]|$)" , model : "ATAB-$1" , } ,]) , }) , ("HannSpree" , Brand { regex : "(HSG[0-9]{4})|SN97T41W|SN1AT71W\\(B\\)|SN70T51A|SN70T31?|T7-QC" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "(HSG[0-9]{4})" , model : "$1" , } , Model { regex : "SN1AT71W\\(B\\)" , model : "SN1AT71W(B)" , } , Model { regex : "SN70T31" , model : "SN70T31" , } , Model { regex : "SN70T3" , model : "SN70T3" , } , Model { regex : "SN70T51A" , model : "SN70T51A" , } , Model { regex : "SN97T41W" , model : "SN97T41W" , } , Model { regex : "T7-QC" , model : "SNAT71BUE" , } ,]) , }) , ("Runbo" , Brand { regex : "Runbo|F1-TT(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Runbo[ _-]?(X5-W|F1 Plus|[PF]1-TT|F1-EN|[FH]1|TT|Q5-S|X5-King|X6|Q5)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "F1-TT" , model : "F1-TT" , } ,]) , }) , ("Uniscope" , Brand { regex : "Uniscope" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Uniscope[ _\\-]?([^/;]+) Build" , model : "$1" , } , Model { regex : "Uniscope[ _\\-]?([^);/ ]+)" , model : "$1" , } ,]) , }) , ("Freetel" , Brand { regex : "(?:FTJ17[AC]00|FTJ152[ABCD]|FTU18A00|FT141B|FT142D(?:_LTEXM)?|FT142A?|FTJ161[AB]|FTJ1[56]2E|FTJ162[BD]|FTE161[GE])(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "FTJ152C" , model : "Samurai Miyabi" , } , Model { regex : "FTJ17A00(?:[);/ ]|$)" , model : "Rei 2 Dual" , } , Model { regex : "FTJ17C00(?:[);/ ]|$)" , model : "Priori 5" , } , Model { regex : "FTU18A00(?:[);/ ]|$)" , model : "Cricket Wave" , } , Model { regex : "FTJ161A" , model : "Musashi" , } , Model { regex : "FTE161E" , model : "Ice 2" , } , Model { regex : "FTE161G" , model : "Ice 2 Plus" , } , Model { regex : "FTJ162E" , model : "Raijin" , } , Model { regex : "FT141B" , model : "Nico" , } , Model { regex : "FT142D(?:_LTEXM)?(?:[);/ ]|$)" , model : "XM" , } , Model { regex : "FT142A?" , model : "Priori 2" , } , Model { regex : "FTJ152A" , model : "Priori 3" , } , Model { regex : "FTJ162D" , model : "Priori 4" , } , Model { regex : "FTJ152B" , model : "Priori 3S LTE" , } , Model { regex : "FTJ152D" , model : "Samurai Kiwami" , } , Model { regex : "FTJ162B" , model : "Samurai Kiwami 2" , } , Model { regex : "FTJ161B" , model : "Samurai Rei" , } , Model { regex : "FTJ152E" , model : "Katana 1" , } ,]) , }) , ("Kivi" , Brand { regex : "(?:24H600G[RU]|24FR50WU|24HK30B|32HR55GU|32H700GU|4[39]UP50GU|40UR50G[RU]|40U600G[RU]|55U600G[RU]|65UP50GU|55U[PC]50G[RU]|50U600G[RU]|50UX10S|55UR50G[RU]|40FK30G|40FR50BR|43UK35G|50FK30G|50UK35G|32HR50GR|55UC30G|32HK30G|40FK30G|32HR50GU|43UK30G|32FR50(?:WR|BU)|32FK3[02]G)(?:_-Ver0[0-9])?(?:[);/ ]|$)" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "(24H600G[RU]|24FR50WU|24HK30B|32HR55GU|32H700GU|4[39]UP50GU|40UR50G[RU]|40U600G[RU]|55U600G[RU]|65UP50GU|55U[PC]50G[RU]|50UX10S|50U600G[RU]|55UR50G[RU]|40FK30G|40FR50BR|43UK35G|50FK30G|50UK35G|32HR50GR|32FR50(?:WR|BU)|32FK3[02]G)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "(55UC30G|40FK30G|43UK30G|32HR50G[RU]|32HK30G|32FK32G)_-Ver0([0-9])(?:[);/ ]|$)" , model : "$1 v$2" , } ,]) , }) , ("Riviera" , Brand { regex : "RIVIERA " , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "F23" , model : "F23" , } ,]) , }) , ("Ulefone" , Brand { regex : "Ulefone|Gemini Pro|Power_[356]|S10_Pro|(?:Note [89]P|Armor(?:[ _](?:[2367]|2S|X[236]|6[SE]|3WT|3W|X))?|U00[78][ _]Pro|Be[ _]X|Be[ _]Touch(?:[ _][23])?|Be[ _](?:One|Pure)(?:[ _]Lite)?)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "S10_Pro" , model : "S10 Pro" , } , Model { regex : "Be[ _]Touch([ _][23])?" , model : "Be Touch$1" , } , Model { regex : "Be[ _]Pure[ _]Lite" , model : "Be Pure Lite" , } , Model { regex : "Be[ _]Pure" , model : "Be Pure" , } , Model { regex : "Be[ _]One[ _]Lite" , model : "Be One Lite" , } , Model { regex : "Be[ _]One" , model : "Be One" , } , Model { regex : "Be[ _]X" , model : "Be X" , } , Model { regex : "U007 Pro" , model : "U007 Pro" , } , Model { regex : "U008 Pro" , model : "U008 Pro" , } , Model { regex : "Armor[ _]X([236])(?:[);/ ]|$)" , model : "Armor X$1" , } , Model { regex : "Armor[ _]6S(?:[);/ ]|$)" , model : "Armor 6S" , } , Model { regex : "Armor[ _]([679])E(?:[);/ ]|$)" , model : "Armor $1E" , } , Model { regex : "Armor[ _]X([57]) Pro(?:[);/ ]|$)" , model : "Armor X$1 Pro" , } , Model { regex : "Armor[ _]X([578])(?:[);/ ]|$)" , model : "Armor X$1" , } , Model { regex : "Armor[ _]([25])S(?:[);/ ]|$)" , model : "Armor $1S" , } , Model { regex : "Armor[ _]X(?:[);/ ]|$)" , model : "Armor X" , } , Model { regex : "Armor[ _]3W(?:[);/ ]|$)" , model : "Armor 3W" , } , Model { regex : "Armor[ _]3WT(?:[);/ ]|$)" , model : "Armor 3WT" , } , Model { regex : "Armor[ _]10 5G(?:[);/ ]|$)" , model : "Armor 10 5G" , } , Model { regex : "Armor[ _]([236789])(?:[);/ ]|$)" , model : "Armor $1" , } , Model { regex : "Armor(?:[);/ ]|$)" , model : "Armor" , } , Model { regex : "Gemini Pro(?:[);/ ]|$)" , model : "Gemini Pro" , } , Model { regex : "Power[_ ]([356])" , model : "Power $1" , } , Model { regex : "Note 8P(?:[);/ ]|$)" , model : "Note 8P" , } , Model { regex : "Note 9P(?:[);/ ]|$)" , model : "Note 9P" , } , Model { regex : "Ulefone[_ ](X|S1[ _]Pro|S[17])(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Ulefone[ _-]?([^;/]+) Build" , model : "$1" , } , Model { regex : "Ulefone[ _-]?([^;/)]+)(?:[;/)]|$)" , model : "$1" , } ,]) , }) , ("Ace" , Brand { regex : "(?:BUZZ [12]|BUZZ 2|CLEVER 1|URBAN 1(?: Pro)?)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "BUZZ ([12]) Lite" , model : "Buzz $1 Lite" , } , Model { regex : "BUZZ ([12]) Plus" , model : "Buzz $1 Plus" , } , Model { regex : "BUZZ ([12])" , model : "Buzz $1" , } , Model { regex : "CLEVER 1" , model : "Clever 1" , } , Model { regex : "URBAN 1 Pro" , model : "Urban 1 Pro" , } , Model { regex : "URBAN 1" , model : "Urban 1" , } ,]) , }) , ("Kaiomy" , Brand { regex : "KaiCloud[ ]?(7[48]4|942)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("KaiCloud $1") , models : None , }) , ("Motorola" , Brand { regex : "MOT(?!TO)|(?<!AN)DROID ?(?:Build|[a-z0-9]+)|portalmmm/2.0 (?:E378i|L6|L7|v3)|XOOM [^;/]*Build|XT1941-2|XT1924-9|XT1925-10|XT1965-6|XT1970-5|XT1799-2|XT1021|XT1710-08|XT180[3-5]|XT194[23]-1|XT1929-15|(?:XT|MZ|MB|ME)[0-9]{3,4}[a-z]?(?:\\(Defy\\)|-0[1-5])?(?:[;]? Build|\\))" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "MOT-V360" , model : "V360" , } , Model { regex : "(?:MOT-|Motorola-)?XT300" , model : "Spice" , } , Model { regex : "(?:MOT-|Motorola-)?XT30[35]" , model : "Motosmart ME" , } , Model { regex : "(?:MOT-|Motorola-)?XT31[16]" , model : "Fire" , } , Model { regex : "(?:MOT-|Motorola-)?XT32[01]" , model : "Defy Mini" , } , Model { regex : "(?:MOT-|Motorola-)?XT3(?:89|90)" , model : "Motosmart" , } , Model { regex : "(?:MOT-|Motorola-)?XT502" , model : "Quench" , } , Model { regex : "(?:MOT-|Motorola-)?XT531" , model : "Fire XT" , } , Model { regex : "(?:MOT-|Motorola-)?XT535" , model : "Defy" , } , Model { regex : "(?:MOT-|Motorola-)?XT55[567]C?" , model : "Defy XT" , } , Model { regex : "(?:MOT-|Motorola-)?XT603" , model : "Admiral" , } , Model { regex : "(?:MOT-|Motorola-)?XT610" , model : "Droid Pro" , } , Model { regex : "(?:MOT-|Motorola-)?XT615" , model : "Motoluxe" , } , Model { regex : "(?:MOT-|Motorola-)?XT621" , model : "Primus" , } , Model { regex : "(?:MOT-|Motorola-)?XT626" , model : "IronRock" , } , Model { regex : "(?:MOT-|Motorola-)?XT682" , model : "Atrix" , } , Model { regex : "(?:MOT-|Motorola-)?XT685" , model : "Motoluxe Dual-SIM" , } , Model { regex : "(?:MOT-|Motorola-)?XT687" , model : "Atrix TV" , } , Model { regex : "(?:MOT-|Motorola-)?XT720" , model : "Milestone" , } , Model { regex : "(?:MOT-|Motorola-)?XT800W" , model : "Glam" , } , Model { regex : "(?:MOT-|Motorola-)?XT860" , model : "Milestone 3" , } , Model { regex : "(?:MOT-|Motorola-)?XT881" , model : "Electrify 2" , } , Model { regex : "(?:MOT-|Motorola-)?XT882" , model : "Moto XT882" , } , Model { regex : "(?:MOT-|Motorola-)?XT88[56]" , model : "Droid RAZR V" , } , Model { regex : "(?:MOT-|Motorola-)?XT890" , model : "Droid RAZR i" , } , Model { regex : "(?:MOT-|Motorola-)?XT894" , model : "Droid 4" , } , Model { regex : "(?:MOT-|Motorola-)?XT897" , model : "Photon Q" , } , Model { regex : "(?:MOT-|Motorola-)?XT901" , model : "Electrify M" , } , Model { regex : "(?:MOT-|Motorola-)?XT90[567]" , model : "Droid RAZR M" , } , Model { regex : "(?:MOT-|Motorola-)?XT910S?" , model : "Droid RAZR" , } , Model { regex : "(?:MOT-|Motorola-)?XT91[4568]" , model : "Droid RAZR D1" , } , Model { regex : "(?:MOT-|Motorola-)?XT9(?:19|20)" , model : "Droid RAZR D3" , } , Model { regex : "(?:MOT-|Motorola-)?XT925" , model : "Droid RAZR HD" , } , Model { regex : "(?:MOT-|Motorola-)?XT102[12]" , model : "Moto E" , } , Model { regex : "(?:MOT-|Motorola-)?XT1706" , model : "Moto E3 Power" , } , Model { regex : "(?:MOT-|Motorola-)?XT1924-9" , model : "Moto E5 Plus" , } , Model { regex : "moto e\\(?([57])\\) plus" , model : "Moto E$1 Plus" , } , Model { regex : "Moto E5 Play" , model : "Moto E5 Play" , } , Model { regex : "Moto E5 go(?:[);/ ]|$)" , model : "Moto E5 Go" , } , Model { regex : "Moto E\\(?([67])\\)?(?:[);/ ]|$)" , model : "Moto E$1" , } , Model { regex : "(?:MOT-|Motorola-)?XT1030" , model : "Droid Mini" , } , Model { regex : "(?:MOT-|Motorola-)?XT1096" , model : "Moto X2" , } , Model { regex : "(?:MOT-|Motorola-)?XT1254" , model : "Droid Turbo" , } , Model { regex : "(?:MOT-|Motorola-)?XT10(?:28|3[1234]|68|69)" , model : "Moto G" , } , Model { regex : "(?:MOT-|Motorola-)?XT1799-2" , model : "Moto G5s" , } , Model { regex : "(?:MOT-|Motorola-)?XT180[3-5]" , model : "Moto G5s Plus" , } , Model { regex : "(?:MOT-|Motorola-)?XT168[57]" , model : "Moto G5 Plus" , } , Model { regex : "(?:MOT-|Motorola-)?XT1670" , model : "Moto G5" , } , Model { regex : "(?:MOT-|Motorola-)?XT1925-10" , model : "Moto G6" , } , Model { regex : "(?:MOT-|Motorola-)?XT1965-6" , model : "Moto G7 Plus" , } , Model { regex : "(?:MOT-|Motorola-)?XT10(?:49|5[23568]|60|9[23457])" , model : "Moto X" , } , Model { regex : "(?:MOT-|Motorola-)?XT1562" , model : "Moto X Play" , } , Model { regex : "(?:MOT-|Motorola-)?XT1572" , model : "Moto X Style" , } , Model { regex : "(?:MOT-|Motorola-)?XT1080" , model : "Droid Ultra" , } , Model { regex : "(?:MOT-|Motorola-)?XT1650-05" , model : "Moto Z" , } , Model { regex : "moto z4(?:[);/ ]|$)" , model : "Moto Z4" , } , Model { regex : "(?:MOT-|Motorola-)?XT1635(?:-0[1-3])?" , model : "Moto Z Play" , } , Model { regex : "(?:MOT-|Motorola-)?XT1710-(?:-0[28])?" , model : "Moto Z2 Play" , } , Model { regex : "(?:MOT-|Motorola-)?XT1789-05" , model : "Moto Z2 Force" , } , Model { regex : "(?:MOT-|Motorola-)?XT1929-15" , model : "Moto Z3" , } , Model { regex : "(?:MOT-|Motorola-)?XT1663" , model : "Moto M" , } , Model { regex : "(?:MOT-|Motorola-)?XT1943-1" , model : "P30" , } , Model { regex : "(?:MOT-|Motorola-)?XT1941-2" , model : "P30 Play" , } , Model { regex : "(?:MOT-|Motorola-)?XT1942-1" , model : "P30 Note" , } , Model { regex : "(?:MOT-|Motorola-)?XT1970-5" , model : "One Vision" , } , Model { regex : "(?:MOT-|Motorola-)?one zoom" , model : "One Zoom" , } , Model { regex : "motorola one action" , model : "One Action" , } , Model { regex : "motorola one macro" , model : "One Macro" , } , Model { regex : "motorola one 5G UW" , model : "One 5G UW" , } , Model { regex : "moto g power" , model : "Moto G Power" , } , Model { regex : "moto g\\(([0-9])\\) power lite" , model : "Moto G$1 Power Lite" , } , Model { regex : "moto g\\(([0-9])\\) power" , model : "Moto G$1 Power" , } , Model { regex : "moto g\\(([0-9])\\) supra" , model : "Moto G$1 Supra" , } , Model { regex : "moto g\\(([0-9])\\) plus" , model : "Moto G$1 Plus" , } , Model { regex : "moto g\\(([0-9]+)\\) play" , model : "Moto G$1 Play" , } , Model { regex : "moto g\\(([0-9]+)\\)" , model : "Moto G$1" , } , Model { regex : "Moto ([CGEXZ]) ?\\(([a-z0-9]+)\\)( Plus| Play)?" , model : "Moto $1$2$3" , } , Model { regex : "Moto ?([CGEXZ])([0-9]+)( Plus| Play)?" , model : "Moto $1$2$3" , } , Model { regex : "(?:Motorola-)?Moto[ _]?([CGEXZ])([ _](?:Plus|Play))?" , model : "Moto $1$2" , } , Model { regex : "MotoroiX" , model : "MotoroiX" , } , Model { regex : "Motorola[ _\\-]([^/;]+)(?: Build|[);])" , model : "$1" , } , Model { regex : "MOTORAZR[ _\\-]([a-z0-9]+)" , model : "RAZR $1" , } , Model { regex : "MOTORIZR[ _\\-]([a-z0-9]+)" , model : "RIZR $1" , } , Model { regex : "MOT(?!OROLA)[O]?[_\\-]?([a-z0-9.]+)" , model : "$1" , } , Model { regex : "(?<!AN)DROID ?([a-z0-9 ]*) Build" , model : "DROID $1" , } , Model { regex : "(?<!AN)DROID ?([a-z0-9]+)" , model : "DROID $1" , } , Model { regex : "portalmmm/2.0 ((?:E378i|L6|L7|V3)[a-z0-9]+)" , model : "$1" , } , Model { regex : "(XOOM [^;/]*)Build" , model : "$1" , } , Model { regex : "(MZ[0-9]{3})(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "((?:ME|MB|XT)[0-9]{3,4}(?:\\(Defy\\))?)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Oukitel" , Brand { regex : "OUKITEL|(?:(?:C15|C16|K10000|K[46]000)(?:[ _]Pro)|K4000Pro|U16 Max|U7 Max|U7 Plus|U11[_ ]Plus|U20_Plus|OK6000 Plus|WP5000|WP[58] Pro|K[46]000[ _](?:Plus|Lite)|Y4800|K10000|K[4-8]000| WP(?:[5-7]|12))(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(C15|C16|K10000|K[46]000|WP[258]|U15)[ _]?Pro(?:[);/ ]|$)" , model : "$1 Pro" , } , Model { regex : "OUKITEL K([37])(?:[);/ ]|$)" , model : "K$1" , } , Model { regex : "(K10000|U16|U7)[ _]Max(?:[);/ ]|$)" , model : "$1 Max" , } , Model { regex : "(U20|K[46]000|U7|U11|OK6000)[_ ]?Plus(?:[);/ ]|$)" , model : "$1 Plus" , } , Model { regex : "(K4000)[_ ]Lite(?:[);/ ]|$)" , model : "$1 Lite" , } , Model { regex : "(Y4800|K10000|K[4-8]000|WP2|WP5000|[CU]2|U10)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : " (WP(?:[5-7]|12))(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "OUKITEL; ([^;]+);" , model : "$1" , } ,]) , }) , ("Globex" , Brand { regex : "(GU1011C|GU8012C|GU7013C|GU730C|GU-6012B)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "GU8012C(?:[);/ ]|$)" , model : "X8" , } , Model { regex : "GU-6012B(?:[);/ ]|$)" , model : "GU6012B" , } , Model { regex : "(GU1011C|GU7013C|GU730C)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("M.T.T." , Brand { regex : "M.T.T." , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "M.T.T. ?Tablet([^;/]+)? Build" , model : "Tablet$1" , } , Model { regex : "M.T.T. ?([^;/]+) Build" , model : "$1" , } ,]) , }) , ("Contixo" , Brand { regex : "Contixo|(?:CX-1045 3G|KT995 3G|CX1045)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "CX-?1045(?: 3G)?(?:[);/ ]|$)" , model : "CX-1045 3G" , } , Model { regex : "CONTIXO GX 1035(?:[);/ ]|$)" , model : "GX-1035 4G 10.1\"" , } , Model { regex : "Contixo GT1160 4G(?:[);/ ]|$)" , model : "GT1160 4G 10.1\"" , } , Model { regex : "B105(?:[);/ ]|$)" , model : "B105 3G 10.1\"" , } , Model { regex : "B108(?:[);/ ]|$)" , model : "B108 4G 10.1\"" , } , Model { regex : "KT107(?: 3G)?(?:[);/ ]|$)" , model : "KT107 3G 10.1\"" , } , Model { regex : "K109(?:[);/ ]|$)" , model : "KT109 4G 10.1\"" , } , Model { regex : "KT715 3G(?:[);/ ]|$)" , model : "KT715 3G 7.0\"" , } , Model { regex : "KT995(?:[);/ ]|$)" , model : "KT995 3G 10.1\"" , } , Model { regex : "KT1100GT(?:[);/ ]|$)" , model : "KT1100GT" , } ,]) , }) , ("Proline" , Brand { regex : "(H10882M-TN)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("iSWAG" , Brand { regex : "ISWAG[ _]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "ISWAG[_ ]VIPER" , model : "Viper" , } , Model { regex : "iSWAG[_ ]Lynx" , model : "Lynx" , } , Model { regex : "iSWAG[_ ]MANTRA" , model : "Mantra" , } , Model { regex : "iSWAG[_ ]MEGA" , model : "Mega" , } , Model { regex : "iSWAG[_ ]NEMESIS" , model : "Nemesis" , } ,]) , }) , ("ONN" , Brand { regex : "(ONA19TB00[327]|10000520[6-9]|O8HD)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("OPPO" , Brand { regex : "(?:OB-)?OPPO[ _]?([a-z0-9]+)|N1T|R8001|OPG01|A00[12]OP|(?:X90[07][0679]|U70[57]T?|X909T?|R(?:10[01]1|2001|201[07]|6007|7005|7007|80[13579]|81[13579]|82[01379]|83[013]|800[067]|8015|810[679]|811[13]|820[057])[KLSTW]?|N520[79]|N5117|A33f|A33fw|A37fw?|PAAM00|PAAT00|PAC[TM]00|R7kf|R7plusf|R7Plusm|A1601|CPH[0-9]{4}|CPH19(69|79|23|1[179])|PB(A[TM]00|CT10|BT30|CM[13]0|[FD]M00)|P(E[RFHG]M\\d{2}|E[GH]T\\d{2}|DAM10|ADM00|AF[TM]00|ADT00|AHM00|BBM[03]0|BBT00|BDT00|BFT00|[CB]E[MT]00|CA[MT]00|C[CDG]M00|CA[MT]10|[CD]PM00|CRM00|CDT00|CD[TM]10|CHM[013]0|CKM[08]0|CLM[15]0|DEM[13]0|DHM00|D[RK][TM]00|DPT00|DB[TM]00|DCM00|[CD]NM00|DVM00|DY[TM][12]0|DNT00|EA[TM]00|CRT01|EDM00)|PEG[MT]10|PEM[MT][02]0|PDS[TM]00|PEC[MT]30|PE[EX]M00)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "PCHM10(?:[);/ ]|$)" , model : "A11" , } , Model { regex : "(?:CPH2083|CPH2077)(?:[);/ ]|$)" , model : "A12" , } , Model { regex : "PCHM00(?:[);/ ]|$)" , model : "A11x" , } , Model { regex : "CPH1923(?:[);/ ]|$)" , model : "A1k" , } , Model { regex : "CPH1925(?:[);/ ]|$)" , model : "A1s" , } , Model { regex : "(?:OPPO[ _]?)?(CPH1837|PAD[TM]00)(?:[);/ ]|$)" , model : "A3" , } , Model { regex : "(?:OPPO[ _]?)?A37f(w)(?:[);/ ]|$)" , model : "A37f$1" , } , Model { regex : "A37f(?:[);/ ]|$)" , model : "A37f" , } , Model { regex : "(?:OPPO[ _]?)?CPH1605(?:[);/ ]|$)" , model : "A39" , } , Model { regex : "CPH20(?:81|73|31|15)(?:[);/ ]|$)" , model : "A31" , } , Model { regex : "(?:OPPO[ _]?)?(?:CPH18(?:0[35]|53)|PBBM30)(?:[);/ ]|$)" , model : "A3s" , } , Model { regex : "(?:OPPO[ _]?)?(?:CPH1809|PBA[TM]00|PBBT30)(?:[);/ ]|$)" , model : "A5" , } , Model { regex : "CPH19(?:3[13]|43)(?:[);/ ]|$)" , model : "A5 (2020)" , } , Model { regex : "PEC[MT]30(?:[);/ ]|$)" , model : "A53 5G" , } , Model { regex : "PDVM00(?:[);/ ]|$)" , model : "A32" , } , Model { regex : "PEFM00(?:[);/ ]|$)" , model : "A35" , } , Model { regex : "(?:PDAM10|CPH2069|CPH2061)(?:[);/ ]|$)" , model : "A52" , } , Model { regex : "CPH2127(?:[);/ ]|$)" , model : "A53" , } , Model { regex : "PEM[MT][02]0(?:[);/ ]|$)" , model : "A55 5G" , } , Model { regex : "(?:OPPO[ _]?)?CPH170[15](?:[);/ ]|$)" , model : "A57" , } , Model { regex : "CPH19(?:09|1[02])(?:[);/ ]|$)" , model : "A5S" , } , Model { regex : "(?:OPPO[ _]?)?(?:CPH190[15]|PBF[TM]00)(?:[);/ ]|$)" , model : "A7" , } , Model { regex : "(?:OPPO[ _]?)?(CPH1801|CPH1717)(?:[);/ ]|$)" , model : "A71" , } , Model { regex : "(?:OPPO[ _]?)?(?:PDY[TM]20|CPH2067)(?:[);/ ]|$)" , model : "A72" , } , Model { regex : "(?:OPPO[ _]?)?(?:PDY[TM]10)(?:[);/ ]|$)" , model : "A72n 5G" , } , Model { regex : "(?:OPPO[ _]?)?CPH1715(?:[);/ ]|$)" , model : "A77" , } , Model { regex : "PCD[TM]00(?:[);/ ]|$)" , model : "A7n" , } , Model { regex : "(PBBT00|PBBM00)(?:[);/ ]|$)" , model : "A7x" , } , Model { regex : "(?:OPPO[ _]?)?(?:PDBM00)(?:[);/ ]|$)" , model : "A8" , } , Model { regex : "(?:OPPO[ _]?)?CPH1729(?:[);/ ]|$)" , model : "A83" , } , Model { regex : "(?:OPPO[ _]?)?CPH1827(?:[);/ ]|$)" , model : "A83 (2018)" , } , Model { regex : "PCA[TM]10(?:[);/ ]|$)" , model : "A9" , } , Model { regex : "(CPH1937|CPH1941|PCHM30)(?:[);/ ]|$)" , model : "A9 (2020)" , } , Model { regex : "(?:OPPO[ _]?)?CPH1938(?:[);/ ]|$)" , model : "A9 (EN)" , } , Model { regex : "(?:PCPM00|CPH20[02]1)(?:[);/ ]|$)" , model : "A91" , } , Model { regex : "CPH2059(?:[);/ ]|$)" , model : "A92" , } , Model { regex : "PDKT00(?:[);/ ]|$)" , model : "A92s" , } , Model { regex : "PEH[MT]00(?:[);/ ]|$)" , model : "A93" , } , Model { regex : "PDKM00(?:[);/ ]|$)" , model : "A93s" , } , Model { regex : "PCE[TM]00(?:[);/ ]|$)" , model : "A9x" , } , Model { regex : "(?:OPPO[ _]?)?CPH1851(?:[);/ ]|$)" , model : "AX5" , } , Model { regex : "CPH1920(?:[);/ ]|$)" , model : "AX5s" , } , Model { regex : "(?:OPPO[ _]?)?CPH1903(?:[);/ ]|$)" , model : "AX7" , } , Model { regex : "(?:OPPO[ _]?)?X9009(?:[);/ ]|$)" , model : "F1 Plus" , } , Model { regex : "CPH191[135](?:[);/ ]|$)" , model : "F11" , } , Model { regex : "CPH19(?:69|87)(?:[);/ ]|$)" , model : "F11 Pro" , } , Model { regex : "(?:OPPO[ _]?)?(?:CPH2119)(?:[);/ ]|$)" , model : "F17 Pro" , } , Model { regex : "(?:OPPO[ _]?)?A1601(?:[);/ ]|$)" , model : "F1s" , } , Model { regex : "(?:OPPO[ _]?)?CPH1609(?:[);/ ]|$)" , model : "F3" , } , Model { regex : "(?:OPPO[ _]?)?CPH1613(?:[);/ ]|$)" , model : "F3 Plus" , } , Model { regex : "(?:OPPO[ _]?)?CPH172[37](?:[);/ ]|$)" , model : "F5" , } , Model { regex : "(?:OPPO[ _]?)?CPH1725(?:[);/ ]|$)" , model : "F5 Youth" , } , Model { regex : "(?:OPPO[ _]?)?CPH(1859|18(?:19|21))(?:[);/ ]|$)" , model : "F7" , } , Model { regex : "(?:OPPO[ _]?)?(?:CPH1825|CPH1881)(?:[);/ ]|$)" , model : "F9" , } , Model { regex : "(?:OPPO[ _]?)?CPH1823(?:[);/ ]|$)" , model : "F9 Pro" , } , Model { regex : "(?:OPPO[ _]?)?X909T?(?:[);/ ]|$)" , model : "Find 5" , } , Model { regex : "(?:OPPO[ _]?)?R827T?(?:[);/ ]|$)" , model : "Find 5 Mini" , } , Model { regex : "(?:OPPO[ _]?)?X907[067](?:[);/ ]|$)" , model : "Find 7" , } , Model { regex : "(?:OPPO[ _]?)?X900[067](?:[);/ ]|$)" , model : "Find 7a" , } , Model { regex : "(?:OPPO[ _]?)?R815[TW]?(?:[);/ ]|$)" , model : "Find Clover" , } , Model { regex : "(?:OPPO[ _]?)?R8015(?:[);/ ]|$)" , model : "Find Guitar" , } , Model { regex : "(?:OPPO[ _]?)?R8111(?:[);/ ]|$)" , model : "Find Melody" , } , Model { regex : "(?:OPPO[ _]?)?R821T?(?:[);/ ]|$)" , model : "Find Muse" , } , Model { regex : "(?:OPPO[ _]?)?U707T?(?:[);/ ]|$)" , model : "Find Way S" , } , Model { regex : "(?:OPPO[ _]?)?U705T(?:[);/ ]|$)" , model : "Ulike 2" , } , Model { regex : "(?:OPPO[ _]?)?(?:CPH187[15]|PAF[MT]00)(?:[);/ ]|$)" , model : "Find X" , } , Model { regex : "(?:OPPO[ _]?)?(?:PAHM00)(?:[);/ ]|$)" , model : "Find X Lamborghini" , } , Model { regex : "(?:OPPO[ _]?)?(?:PDEM10|CPH2023)(?:[);/ ]|$)" , model : "Find X2" , } , Model { regex : "(?:OPPO[ _]?)?CPH2005(?:[);/ ]|$)" , model : "Find X2 Lite" , } , Model { regex : "(?:OPPO[ _]?)?(?:PDEM30|OPG01|CPH2025)(?:[);/ ]|$)" , model : "Find X2 Pro" , } , Model { regex : "PEDM00(?:[);/ ]|$)" , model : "Find X3" , } , Model { regex : "PEEM00(?:[);/ ]|$)" , model : "Find X3 Pro" , } , Model { regex : "(?:OPPO[ _]?)?R1011 Build" , model : "Joy Plus" , } , Model { regex : "(?:OPPO[ _]?)?(PBC(?:M30|T10))(?:[);/ ]|$)" , model : "K1" , } , Model { regex : "CPH1955(?:[);/ ]|$)" , model : "K3" , } , Model { regex : "(?:OPPO[ _]?)?(PCNM00)(?:[);/ ]|$)" , model : "K5" , } , Model { regex : "(?:OPPO[ _]?)?(PCLM50)(?:[);/ ]|$)" , model : "K7" , } , Model { regex : "(?:OPPO[ _]?)?(PERM00)(?:[);/ ]|$)" , model : "K7x" , } , Model { regex : "(?:OPPO[ _]?)?N5117(?:[);/ ]|$)" , model : "N1 Mini" , } , Model { regex : "(?:OPPO[ _]?)?N520[79](?:[);/ ]|$)" , model : "N3" , } , Model { regex : "(?:OPPO[ _]?)?R831T?(?:[);/ ]|$)" , model : "Neo" , } , Model { regex : "(?:OPPO[ _]?)?R831K(?:[);/ ]|$)" , model : "Neo 3" , } , Model { regex : "(?:OPPO[ _]?)?R831[SL](?:[);/ ]|$)" , model : "Neo 5" , } , Model { regex : "(?:OPPO[ _]?)?A33f(?:[);/ ]|$)" , model : "Neo 7" , } , Model { regex : "(?:OPPO[ _]?)?A33fw(?:[);/ ]|$)" , model : "Neo 7s" , } , Model { regex : "(?:OPPO[ _]?)?R8113(?:[);/ ]|$)" , model : "Piano" , } , Model { regex : "(?:OPPO[ _]?)?CPH1707(?:[);/ ]|$)" , model : "R11" , } , Model { regex : "R8001(?:[);/ ]|$)" , model : "R1K" , } , Model { regex : "(?:OPPO[ _]?)?CPH1719(?:[);/ ]|$)" , model : "R11s" , } , Model { regex : "(?:OPPO[ _]?)?CPH1721(?:[);/ ]|$)" , model : "R11s Plus" , } , Model { regex : "(?:OPPO[ _]?)?(?:CPH1835|PAC[TM]00|PAAM00)(?:[);/ ]|$)" , model : "R15" , } , Model { regex : "(?:OPPO[ _]?)?(?:CPH183[13]|PAAT00)(?:[);/ ]|$)" , model : "R15 Pro" , } , Model { regex : "PBCM10(?:[);/ ]|$)" , model : "R15x" , } , Model { regex : "(?:OPPO[ _]?)?(?:CPH1879|PBE[MT]00)(?:[);/ ]|$)" , model : "R17" , } , Model { regex : "(?:OPPO[ _]?)?(?:CPH1893)(?:[);/ ]|$)" , model : "R17 Neo" , } , Model { regex : "(?:OPPO[ _]?)?(?:CPH1877|PBD[MT]00)(?:[);/ ]|$)" , model : "R17 Pro" , } , Model { regex : "(?:OPPO[ _]?)?R8006(?:[);/ ]|$)" , model : "R1L" , } , Model { regex : "(?:OPPO[ _]?)?R800[07](?:[);/ ]|$)" , model : "R1S" , } , Model { regex : "(?:OPPO[ _]?)?R810[679](?:[);/ ]|$)" , model : "R5" , } , Model { regex : "(?:OPPO[ _]?)?R7kf(?:[);/ ]|$)" , model : "R7 Lite" , } , Model { regex : "(?:OPPO[ _]?)?R7Plusm(?:[);/ ]|$)" , model : "R7 Plus" , } , Model { regex : "(?:OPPO[ _]?)?R7Plusf(?:[);/ ]|$)" , model : "R7 Plus F" , } , Model { regex : "(?:OPPO[ _]?)?X9079(?:[);/ ]|$)" , model : "R9 Plus" , } , Model { regex : "(?:OPPO[ _]?)?CPH1607(?:[);/ ]|$)" , model : "R9s" , } , Model { regex : "(?:OPPO[ _]?)?(?:CPH1611|R9s Plus)(?:[);/ ]|$)" , model : "R9s Plus" , } , Model { regex : "(?:CPH1917|PCA[MT]00)(?:[);/ ]|$)" , model : "Reno" , } , Model { regex : "CPH1983(?:[);/ ]|$)" , model : "Reno A" , } , Model { regex : "PCCM00(?:[);/ ]|$)" , model : "Reno 10X" , } , Model { regex : "CPH1919(?:[);/ ]|$)" , model : "Reno 10X Zoom" , } , Model { regex : "(?:PCKM00|CPH1907)(?:[);/ ]|$)" , model : "Reno 2" , } , Model { regex : "CPH1989(?:[);/ ]|$)" , model : "Reno 2F" , } , Model { regex : "(?:PCKM80|CPH1945|CPH1951)(?:[);/ ]|$)" , model : "Reno 2Z" , } , Model { regex : "CPH2043(?:[);/ ]|$)" , model : "Reno 3" , } , Model { regex : "(?:CPH2013|A002OP)(?:[);/ ]|$)" , model : "Reno 3A" , } , Model { regex : "(?:PDCM00|A001OP)(?:[);/ ]|$)" , model : "Reno 3 5G" , } , Model { regex : "(?:PCRM00|CPH203[57]|CPH2009)" , model : "Reno 3 Pro" , } , Model { regex : "PCRT01(?:[);/ ]|$)" , model : "Reno 3 Lite" , } , Model { regex : "CPH2113(?:[);/ ]|$)" , model : "Reno 4 4G" , } , Model { regex : "CPH2125(?:[);/ ]|$)" , model : "Reno 4 Lite" , } , Model { regex : "CPH2109(?:[);/ ]|$)" , model : "Reno 4 Pro 4G" , } , Model { regex : "PDP[TM]00(?:[);/ ]|$)" , model : "Reno 4 5G" , } , Model { regex : "PEA[TM]00(?:[);/ ]|$)" , model : "Reno 4 SE 5G " , } , Model { regex : "PDN[TM]00(?:[);/ ]|$)" , model : "Reno 4 Pro 5G" , } , Model { regex : "PEG[MT]00(?:[);/ ]|$)" , model : "Reno 5 5G" , } , Model { regex : "PEG[MT]10(?:[);/ ]|$)" , model : "Reno 5K" , } , Model { regex : "PDS[TM]00(?:[);/ ]|$)" , model : "Reno 5 Pro 5G" , } , Model { regex : "PDR[TM]00(?:[);/ ]|$)" , model : "Reno 5 Pro Plus 5G" , } , Model { regex : "CPH1921(?:[);/ ]|$)" , model : "Reno 5G" , } , Model { regex : "PCLM10(?:[);/ ]|$)" , model : "Reno Ace" , } , Model { regex : "PDHM00(?:[);/ ]|$)" , model : "Reno Ace 2" , } , Model { regex : "PCGM00(?:[);/ ]|$)" , model : "Reno K3" , } , Model { regex : "(?:OPPO[ _]?)?(?:CPH1979|PCD[TM]10)(?:[);/ ]|$)" , model : "Reno Z" , } , Model { regex : "N1T?(?:[);/ ]|$)" , model : "N1T" , } , Model { regex : "R([0-9]{3,4}[KSTW]?)(?:[);/ ]|$)" , model : "R$1" , } , Model { regex : "(CPH[0-9]{4})" , model : "$1" , } , Model { regex : "(?:OB-)?OPPO[ _]?((?!Browser)[a-z0-9]+)" , model : "$1" , } ,]) , }) , ("AMGOO" , Brand { regex : "AM(350|355|40[257]|41[025]|450|50[89]|52[037]|51[58]|53[05])(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "AM350" , model : "Jack Pro" , } , Model { regex : "AM(355|407)" , model : "Tigo" , } , Model { regex : "AM402" , model : "Pronto" , } , Model { regex : "AM410" , model : "Unico" , } , Model { regex : "AM450" , model : "Swift" , } , Model { regex : "AM508" , model : "Fuego" , } , Model { regex : "AM509" , model : "Uno" , } , Model { regex : "AM515" , model : "D1" , } , Model { regex : "AM518" , model : "C1" , } , Model { regex : "AM520" , model : "Pro" , } , Model { regex : "AM523" , model : "Plus" , } , Model { regex : "AM527" , model : "Geo" , } , Model { regex : "AM530" , model : "A1" , } , Model { regex : "AM535" , model : "P1" , } , Model { regex : "AM([0-9]{3})" , model : "AM$1" , } ,]) , }) , ("Datamini" , Brand { regex : "(K908H4G)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Dell" , Brand { regex : "Dell[^a-z]|Venue|XCD35" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "XCD35" , model : "XCD35" , } , Model { regex : "Venue (8 7840|10 7040|8 3830)" , model : "Venue $1" , } , Model { regex : "(?:Dell )?Venue Build" , model : "Venue" , } , Model { regex : "Dell; Venue Pro" , model : "Venue Pro" , } , Model { regex : "(OptiPlex (?:3050|7010))" , model : "$1" , } , Model { regex : "(?:Dell )?(Streak|Venue) ?([^/;]*) Build" , model : "$1 $2" , } , Model { regex : "(?:Dell Inc./)?(XPS 13 9360|Latitude 7480)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Dell; ((?:Streak|Venue)[^;/\\)]*)" , model : "$1" , } , Model { regex : "Dell; ([^;/\\)]+)" , model : "$1" , } , Model { regex : "Dell[ _\\-]([^/;]+) Build" , model : "$1" , } ,]) , }) , ("Denver" , Brand { regex : "(?:TA[CDQ]-[0-9]+)|P(?:.+)TAQ-(?:[0-9]+)|SDQ[_-](?:550[24]4L|52001G|50002G|57004L)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "P(?:.+)TAQ-(10213GMK2|10172MK3|10242MK2|70242MK2|[0-9]+)(?:[);/ ]|$)" , model : "TAQ-$1" , } , Model { regex : "(TA[CDQ]-[0-9]+)" , model : "$1" , } , Model { regex : "SDQ[_-](550[24]4L|52001G|50002G|57004L)" , model : "SDQ-$1" , } ,]) , }) , ("Trio" , Brand { regex : "Trio V51 DT(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("V51DT") , models : None , }) , ("MLLED" , Brand { regex : "MLLED[ _]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "MLLED[ _]([^;/]+)Build" , model : "$1" , } , Model { regex : "MLLED[ _]([^);/]+)(?:[);/]|$)" , model : "$1" , } ,]) , }) , ("Amigoo" , Brand { regex : "AMIGOO (R300|R9 Max|M1 Max|X15)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("OKWU" , Brand { regex : "OKWU SIGMA(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("Sigma") , models : None , }) , ("Oale" , Brand { regex : "Apex([13])(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("Apex $1") , models : None , }) , ("Fairphone" , Brand { regex : "(FP(?:1U?|2))(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Doffler" , Brand { regex : "(24DHS54)(?:[);/ ]|$)" , device : Some ("tv") , model : Some ("$1") , models : None , }) , ("Hardkernel" , Brand { regex : "ODROID[-]?(C2|U2|XU[34])(?:[);/ ]|$)" , device : Some ("peripheral") , model : Some ("ODROID $1") , models : None , }) , ("Maxwest" , Brand { regex : "(?:Astro[_ ](?:Phablet_9|55?N[_ ]LTE|5s|[45]P|X4|5_GO_LTE|X55s?|4\\.5|4|X5)|Astro6|Virtue Z5|Nitro[_ ](?:4S?|55R|5[XR]|[45] GO|4s LTE)|Gravity_55?_GO|Nitro_Phablet_9s)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Astro[_ ](55?)N[_ ]LTE" , model : "Astro $1N LTE" , } , Model { regex : "Astro[_ ]X55[_ ]LTE" , model : "Astro X55 LTE" , } , Model { regex : "Astro_5_GO_LTE" , model : "Astro 5 Go LTE" , } , Model { regex : "Astro[_ ](X55s?|5s|4|X[45]|[45]P)(?:[);/ ]|$)" , model : "Astro $1" , } , Model { regex : "Astro[_ ](4\\.5)" , model : "Astro $1\"" , } , Model { regex : "Virtue Z5" , model : "Virtue Z5" , } , Model { regex : "Astro (X55s?|5s)" , model : "Astro $1" , } , Model { regex : "Astro[_ ]X4" , model : "Astro X4" , } , Model { regex : "Nitro ([45]) GO" , model : "Nitro $1 GO" , } , Model { regex : "Nitro 4s LTE" , model : "Nitro 4s LTE" , } , Model { regex : "Nitro[ _]4s" , model : "Nitro 4s" , } , Model { regex : "Nitro_(4|55R|5[XR])" , model : "Nitro $1" , } , Model { regex : "Gravity_(55?)_GO" , model : "Gravity $1 GO" , } , Model { regex : "Astro6" , model : "Astro 6" , } , Model { regex : "Nitro_Phablet_9s" , model : "Nitro Phablet 9s" , } , Model { regex : "Astro_Phablet_9" , model : "Astro Phablet 9" , } ,]) , }) , ("BilimLand" , Brand { regex : "BilimBook mini(?:[);/ ]|$)" , device : Some ("desktop") , model : Some ("BilimBook Mini") , models : None , }) , ("Clarmin" , Brand { regex : "Clarmin" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Clarmin[_ ](B[65]|C1)" , model : "$1" , } ,]) , }) , ("TVC" , Brand { regex : "(NuclearSX-SP5)" , device : Some ("smartphone") , model : Some ("Nuclear SX-SP5") , models : None , }) , ("SFR" , Brand { regex : "StarShine|StarTrail|STARADDICT|StarText|StarNaute|StarXtrem|StarTab" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "StarXtrem II(?:[);/ ]|$)" , model : "StarXtrem 2" , } , Model { regex : "StarXtrem ?([3-6])(?:[);/ ]|$)" , model : "StarXtrem $1" , } , Model { regex : "StarXtrem(?:[);/ ]|$)" , model : "StarXtrem" , } , Model { regex : "StarTrail III(?:[);/ ]|$)" , model : "StarTrail 3" , } , Model { regex : "StarTrail II(?:[);/ ]|$)" , model : "StarTrail 2" , } , Model { regex : "StarTrail[ _]?([1-9])[ _]([34])G(?:[);/ ]|$)" , model : "StarTrail $1 $2G" , } , Model { regex : "StarTrail[ _]?([1-9])(?:[);/ ]|$)" , model : "StarTrail $1" , } , Model { regex : "StarTrail(?:[);/ ]|$)" , model : "StarTrail" , } , Model { regex : "StarShine II(?:[);/ ]|$)" , model : "StarShine 2" , } , Model { regex : "StarShine(?:[);/ ]|$)" , model : "StarShine" , } , Model { regex : "STARADDICT 4(?:[);/ ]|$)" , model : "Staraddict 4" , } , Model { regex : "STARADDICT III(?:[);/ ]|$)" , model : "Staraddict 3" , } , Model { regex : "STARADDICT II Plus(?:[);/ ]|$)" , model : "Staraddict 2 Plus" , } , Model { regex : "STARADDICT II(?:[);/ ]|$)" , model : "Staraddict 2" , } , Model { regex : "STARADDICT(?:[);/ ]|$)" , model : "Staraddict" , } , Model { regex : "StarText II(?:[);/ ]|$)" , model : "StarText 2" , } , Model { regex : "StarText(?:[);/ ]|$)" , model : "StarText" , } , Model { regex : "StarNaute II(?:[);/ ]|$)" , model : "StarNaute 2" , } , Model { regex : "StarNaute(?:[);/ ]|$)" , model : "StarNaute" , } , Model { regex : "StarTab" , model : "StarTab" , } , Model { regex : "((?:StarShine|StarTrail|STARADDICT|StarText|StarNaute|StarXtrem)[^;/]*) Build" , model : "$1" , } ,]) , }) , ("Assistant" , Brand { regex : "(AS[-_](?:50[123]|543[1-6]|44[12]1|541[12]|54[23]1|6431|[46]01L)|AP-(?:109|115G|721N|753G|7[25]7G|10[68]|107G|110N|941|719))[;/)_ ]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "AS[-_]401L(?:[);/ ]|$)" , model : "Asper" , } , Model { regex : "AS-5432(?:[);/ ]|$)" , model : "Agio" , } , Model { regex : "AS[-_](?:5434|501)(?:[);/ ]|$)" , model : "Club" , } , Model { regex : "AS_601L(?:[);/ ]|$)" , model : "AS-601L" , } , Model { regex : "AS-5433 Secret(?:[);/ ]|$)" , model : "Secret" , } , Model { regex : "AS-5433(?:[);/ ]|$)" , model : "Max Secret" , } , Model { regex : "AS-5421(?:[);/ ]|$)" , model : "Surf" , } , Model { regex : "AS-44[12]1(?:[);/ ]|$)" , model : "Unami" , } , Model { regex : "AS-5431(?:[);/ ]|$)" , model : "Prima" , } , Model { regex : "AS-502(?:[);/ ]|$)" , model : "Shot" , } , Model { regex : "AS-503(?:[);/ ]|$)" , model : "Target" , } , Model { regex : "AS-5435(?:[);/ ]|$)" , model : "Shine" , } , Model { regex : "AS-5436[ _]" , model : "Grid" , } , Model { regex : "AS-6431(?:[);/ ]|$)" , model : "Rider" , } , Model { regex : "AS-5411[_ ]" , model : "Max Ritm" , } , Model { regex : "AS-5412 Max(?:[);/ ]|$)" , model : "AS-5412 Max" , } , Model { regex : "AP-721N(?:[);/ ]|$)" , model : "AP-721N Force" , } , Model { regex : "AP-941(?:[);/ ]|$)" , model : "AP-941" , } , Model { regex : "AP-108(?:[);/ ]|$)" , model : "Cetus" , } , Model { regex : "AP-106(?:[);/ ]|$)" , model : "AP-106 Force" , } , Model { regex : "(AP-(?:109|115G|7[25]7G|753G|107G|110N|719))(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Becker" , Brand { regex : "Becker-([a-z0-9]+)" , device : Some ("feature phone") , model : Some ("$1") , models : None , }) , ("Kyowon" , Brand { regex : "(KA-E410W)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Skyworth" , Brand { regex : "Sky_?worth" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "Sky_?worth ([^;/]+) Build" , model : "$1" , } ,]) , }) , ("Sumvision" , Brand { regex : "(Cyclone [^/;]+) Build" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("INCAR" , Brand { regex : "(KZCAR)(?:[);/ ]|$)" , device : Some ("car browser") , model : Some ("$1") , models : None , }) , ("Blaupunkt" , Brand { regex : "Blaupunkt|Soundphone S2|Atlantis[_ ](?:1001A|1010A|A10\\.G40[23])|SLplus02|Discovery[_ ](?:A10_302|111C|1000C|1001A?)|Endeavour[_ ](?:785|101[GLM]|1000|1001|101[03]|1100)|Polaris[_ ]803|BP_6010" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "Discovery[_ ]111C" , model : "Discovery 111C" , } , Model { regex : "Discovery[_ ]A10_302" , model : "Discovery A10.302" , } , Model { regex : "Discovery[_ ]1000C" , model : "Discovery 1000C" , } , Model { regex : "Discovery[_ ]1001A" , model : "Discovery 1001A" , } , Model { regex : "Discovery[_ ]1001" , model : "Discovery 1001" , } , Model { regex : "Soundphone S2" , model : "Soundphone S2" , } , Model { regex : "Endeavour[_ ](101[GLM]|785|100[01]|101[03]|1100)" , model : "Endeavour $1" , } , Model { regex : "Polaris[_ ](803)" , model : "Polaris $1" , } , Model { regex : "Atlantis[_ ](1001A|1010A|A10\\.G40[23])" , model : "Atlantis $1" , } , Model { regex : "SLplus02" , model : "SL Plus 02" , } , Model { regex : "(BP_6010)" , model : "$1" , } , Model { regex : "Blaupunkt[_ ](SL[_ ]0[124]|SM[_ ]0[12])" , model : "$1" , } , Model { regex : "(4K Android TV)" , model : "$1" , } ,]) , }) , ("Woo" , Brand { regex : "SP5026i-Scorpio" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "SP5026i-Scorpio" , model : "Scorpio" , } ,]) , }) , ("Seeken" , Brand { regex : "Seeken[ _-]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Seeken[_ -](SG1|SJ1)" , model : "$1" , } , Model { regex : "Seeken[_ -](ST-101)" , model : "$1" , } ,]) , }) , ("Vonino" , Brand { regex : "Vonino|Epic (?:E8|P7)|Gyga[ _](?:X|S|QS|XS)|Jax[ _](?:QS|[SXQN]|Mini)|Magnet[ _](?:M[19]|G50)|Navo_QS|Onyx_(QS|Z)|Orin_QS|Pluri[ _](?:[BCMQ]7|[CQM]8)|Sirius_QS|Volt[ _][XS]|Xavy_(T7|L8)|Xylo[ _][XSPQT]|Zun[ _]X[OS]?|JAX_N" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Zun[ _]XO" , model : "Zun XO" , } , Model { regex : "Zun[ _]XS" , model : "Zun XS" , } , Model { regex : "Zun[ _]X" , model : "Zun X" , } , Model { regex : "Xylo[ _]([PSXQT])" , model : "Xylo $1" , } , Model { regex : "Volt[ _]S_A7" , model : "Volt S A7" , } , Model { regex : "Volt[ _]S" , model : "Volt S" , } , Model { regex : "Volt[ _]X" , model : "Volt X" , } , Model { regex : "Gyga[ _]QS" , model : "Gyga QS" , } , Model { regex : "Gyga[ _]XS" , model : "Gyga XS" , } , Model { regex : "Gyga[ _](S|X)" , model : "Gyga $1" , } , Model { regex : "Jax[ _]QS" , model : "Jax QS" , } , Model { regex : "Jax[ _]S_A7" , model : "Jax S A7" , } , Model { regex : "Jax[ _]([SQXN])" , model : "Jax $1" , } , Model { regex : "Jax[ _]Mini" , model : "Jax Mini" , } , Model { regex : "Epic (E8|P7)" , model : "Epic $1" , } , Model { regex : "Pluri[ _](B|C|M|Q)7" , model : "Pluri $17" , } , Model { regex : "Pluri[ _]([CQM])8" , model : "Pluri $18" , } , Model { regex : "Magnet[ _](M[19]|G50)" , model : "Magnet $1" , } , Model { regex : "Navo_QS" , model : "Navo QS" , } , Model { regex : "Onyx_(QS|Z)" , model : "Onyx $1" , } , Model { regex : "Orin_QS" , model : "Orin QS" , } , Model { regex : "Sirius_QS" , model : "Sirius QS" , } , Model { regex : "Xavy_T7" , model : "Xavy T7" , } , Model { regex : "Xavy_L8" , model : "Xavy L8" , } ,]) , }) , ("Magnus" , Brand { regex : "Magnus[ _](?:bravoZ[23]0|Infinity_?(?:G8|G11))(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "bravo(Z[23]0)" , model : "Bravo $1" , } , Model { regex : "(?:Magnus[ _])?Infinity_?(G8|G11)" , model : "Infinity $1" , } ,]) , }) , ("LT Mobile" , Brand { regex : "(?:LT-NOTE 10S|LT NOTE 10M)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "LT[- ]NOTE (10[SM])" , model : "Note $1" , } ,]) , }) , ("iOcean" , Brand { regex : "iOCEAN|M6752|W180|X7[ _]?S|X8 mini" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "X7S-T" , model : "X7S-T" , } , Model { regex : "X8 mini pro" , model : "X8 Mini Pro" , } , Model { regex : "X8 mini" , model : "X8 Mini" , } , Model { regex : "X7[ _]?S" , model : "X7S Elite" , } , Model { regex : "(M6752|W180) Build" , model : "$1" , } , Model { regex : "iOCEAN[ _\\-]?([^/;]+) Build" , model : "$1" , } , Model { regex : "iOCEAN[ _\\-]?([^);/ ]+)" , model : "$1" , } ,]) , }) , ("Ross&Moor" , Brand { regex : "RMD[-_](974R|600)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("RMD-$1") , models : None , }) , ("Digicel" , Brand { regex : "DIGICEL" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "DL810" , model : "DL810" , } , Model { regex : "DIGICEL ([^/;]+) Build" , model : "$1" , } ,]) , }) , ("Masstel" , Brand { regex : "Masstel" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Masstel[_ ](Juno[_ ]Q3|X9|N4[56]0|N5[2458]0|N536|M05|M1[29]0|M1[125]|M250|M25)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Masstel[_ ]\\((M18)\\)" , model : "$1" , } , Model { regex : "Masstel_Tab7LTE(?:[);/ ]|$)" , model : "Tab 7 LTE" , } , Model { regex : "Masstel Tab (840|700i)(?:[);/ ]|$)" , model : "Tab $1" , } ,]) , }) , ("XGIMI" , Brand { regex : "XGIMI TV(?:[);/ ]|$)" , device : Some ("peripheral") , model : Some ("$1") , models : None , }) , ("Nomu" , Brand { regex : "Nomu[ _-](?:T18|S30mini|S10)(?:[);/ ]|$)|V1600S(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Nomu[ _-]T18(?:[);/ ]|$)" , model : "T18" , } , Model { regex : "Nomu[ _-]s10(?:[);/ ]|$)" , model : "S10" , } , Model { regex : "Nomu[ _-]S30mini(?:[);/ ]|$)" , model : "S30 Mini" , } , Model { regex : "(V1600S)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Blu" , Brand { regex : "BLU[ _]|(?:blu|Dash)[ _]([^/;)]+)(?: Build|[;)])|(?:Studio[ _](5.0K|5.5|View XL|Mega|C 8\\+8|[CGM][ _]HD|[CGX]|SELFIE|Selfie LTE|Touch|M5 Plus|J[1258]|X8 HD)|Advance (4.0 ?[LM]|5.[02](?: HD)?|A4|L[45])|ENERGY (DIAMOND|XL)|Energy X 2|LIFE XL|B110DL|Dash (?:X[2L]|L3)|PURE (?:X[LR]|MINI)|Life One X2|G90(?: PRO)?|Grand M3|GRAND (?:5.5 HD|XL LTE)|R1 (?:HD|PLUS)|Tank Xtreme [45].0|Tank Xtreme Pro|Touchbook M7 Pro|DASH X PLUS|C[456] 2019|BOLD N1|B130DL|Vivo 5 Mini|C5L 2020)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Advance (4.0 ?[LM]|4.0|5.[02](?: HD)?|A4|L[54])" , model : "Advance $1" , } , Model { regex : "(?:BLU[_ ])?Studio[ _](5.0 C|5.5|View XL|Mega|C 8\\+8|[CG][ _]HD|C|G|Touch|M HD|M5 Plus|J[1258]|X8 HD|X5|XL|X)(?:[);/ ]|$)" , model : "Studio $1" , } , Model { regex : "(?:BLU[_ ])?Studio[ _]5.0 ?K(?:[);/ ]|$)" , model : "Studio 5.0 K" , } , Model { regex : "STUDIO SELFIE LTE" , model : "Studio Selfie LTE" , } , Model { regex : "STUDIO ONE" , model : "Studio One" , } , Model { regex : "STUDIO SELFIE ([23]|LTE)" , model : "Studio Selfie $1" , } , Model { regex : "STUDIO SELFIE" , model : "Studio Selfie" , } , Model { regex : "(?:BLU[_ ])?NEO_ENERGY_MINI" , model : "Neo Energy Mini" , } , Model { regex : "ENERGY DIAMOND" , model : "Energy Diamond" , } , Model { regex : "ENERGY XL" , model : "Energy XL" , } , Model { regex : "Energy X 2" , model : "Energy X 2" , } , Model { regex : "ENERGY X PLUS 2" , model : "Energy X Plus 2" , } , Model { regex : "ENERGY X PLUS" , model : "Energy X Plus" , } , Model { regex : "LIFE XL" , model : "Life XL" , } , Model { regex : "DASH[ _]X[ _]PLUS[ _]LTE" , model : "Dash X Plus LTE" , } , Model { regex : "DASH X PLUS" , model : "Dash X Plus" , } , Model { regex : "DASH 4.5" , model : "Dash 4.5" , } , Model { regex : "Dash XL" , model : "Dash XL" , } , Model { regex : "PURE (X[LR])" , model : "Pure $1" , } , Model { regex : "PURE MINI" , model : "Pure Mini" , } , Model { regex : "BOLD N1" , model : "Bold N1" , } , Model { regex : "Life One X2" , model : "Life One X2" , } , Model { regex : "LIFE ONE X" , model : "Life One X" , } , Model { regex : "LIFE ONE" , model : "Life One" , } , Model { regex : "LIFE MARK" , model : "Life Mark" , } , Model { regex : "NEO X PLUS" , model : "Neo X Plus" , } , Model { regex : "NEO (XL|X)" , model : "Neo $1" , } , Model { regex : "G90 PRO" , model : "G90 Pro" , } , Model { regex : "G90" , model : "G90" , } , Model { regex : "GRAND 5.5 HD" , model : "Grand 5.5 HD" , } , Model { regex : "Grand X LTE" , model : "Grand X LTE" , } , Model { regex : "Grand XL LTE" , model : "Grand XL LTE" , } , Model { regex : "Grand M3" , model : "Grand M3" , } , Model { regex : "B110DL" , model : "View Mega" , } , Model { regex : "B130DL" , model : "View 2" , } , Model { regex : "R1 HD" , model : "R1 HD" , } , Model { regex : "R1 PLUS" , model : "R1 Plus" , } , Model { regex : "C([456]) (2019)" , model : "C$1 ($2)" , } , Model { regex : "Tank Xtreme ([45]).0" , model : "Tank Xtreme $1.0\"" , } , Model { regex : "Tank Xtreme Pro" , model : "Tank Xtreme Pro" , } , Model { regex : "VIVO AIR LTE" , model : "Vivo Air LTE" , } , Model { regex : "Touchbook G7" , model : "Touchbook G7" , } , Model { regex : "C5L 2020" , model : "C5L (2020)" , } , Model { regex : "(?:BLU[_ ])?VIVO[ _]SELFIE" , model : "Vivo Selfie" , } , Model { regex : "(?:BLU[_ ])?Vivo 5 Mini" , model : "Vivo 5 Mini" , } , Model { regex : "Touchbook M7 Pro" , model : "Touchbook M7 Pro" , } , Model { regex : "STUDIO 7.0 II" , model : "Studio 7.0\" II" , } , Model { regex : "DASH (L[45] LTE|5.0|L[45]X|L3|X2|[LMX])(?:[);/ ]|$)" , model : "Dash $1" , } , Model { regex : "DASH[ _]([^)/;]+)(?: Build|\\))" , model : "Dash $1" , } , Model { regex : "blu[ _]([^/;]+)( Build|[);])" , model : "$1" , } ,]) , }) , ("Essential" , Brand { regex : "PH-1[ )]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "PH-1[ )]" , model : "PH-1" , } ,]) , }) , ("Overmax" , Brand { regex : "OV-[a-z]+(?:[^;(/]*)[();/ ]|Qualcore 10(?:10|27)|Vertis 5021 Aim|OV1027[34]G" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "OV-V10" , model : "Vertis Yard" , } , Model { regex : "Vertis 5021 Aim" , model : "Vertis 5021 Aim" , } , Model { regex : "OV-Vertis[ _-]([^;/]+) Build" , model : "Vertis $1" , } , Model { regex : "Qualcore 1010" , model : "Qualcore 1010" , } , Model { regex : "Qualcore 1027 4G" , model : "Qualcore 1027 4G" , } , Model { regex : "OV1027([34])G" , model : "Qualcore 1027 $1G" , } , Model { regex : "(OV-[a-z]+(?:[^;(/]*))(?<!Build)[();/ ]" , model : "$1" , } ,]) , }) , ("Yxtel" , Brand { regex : "YXTEL_([HU]1|U3)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("SMARTEC" , Brand { regex : "(Atractivo)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Smadl" , Brand { regex : "Android.+(?:Safari)(?!/[\\d.]+)(?: Build|\\) AppleWebKit)|SMADL[ _]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Android.+(?:Safari)(?!/[\\d.]+)(?: Build|\\) AppleWebKit)" , model : "Safari" , } , Model { regex : "SMADL[ _]Matri([2X])" , model : "Matri $1" , } ,]) , }) , ("Orbic" , Brand { regex : "(?:RC555L|RC501L)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "RC555L(?:[);/ ]|$)" , model : "Wonder" , } , Model { regex : "RC501L(?:[);/ ]|$)" , model : "Slim" , } ,]) , }) , ("Gigaset" , Brand { regex : "Gigaset|(?: GS80|GS1[0189]0|GS1[89]5|GS2[89]0|GS5[357]-6|GS[23]70(?:_Plus)?)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Gigaset QV(1030|830)" , model : "Gigaset QV$1" , } , Model { regex : "G(S[23]70)[_ ]Plus(?:[);/ ]|$)" , model : "G$1 Plus" , } , Model { regex : "GS([23]70|1[0189]0|1[89]5|2[89]0|80)(?:[);/ ]|$)" , model : "GS$1" , } , Model { regex : "GS57-6" , model : "ME Pro" , } , Model { regex : "GS55-6" , model : "ME" , } , Model { regex : "GS53-6" , model : "ME Pure" , } , Model { regex : "Gigaset ([^;/]+) Build" , model : "$1" , } , Model { regex : "Gigaset ([^;/)]+)(?:[);/]|$)" , model : "$1" , } ,]) , }) , ("FaRao Pro" , Brand { regex : "(FTRW100)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Ditecma" , Brand { regex : "(M1092R(?:-[12]|V[45])?)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("SOLO" , Brand { regex : "SOLO[_ ](Aspire(?: M)?)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Ytone" , Brand { regex : "YTONE[ _\\-]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "YTONE[ _\\-]?([^/;]+) Build" , model : "$1" , } , Model { regex : "YTONE[ _\\-]?([^);/ ]+)" , model : "$1" , } ,]) , }) , ("Winds" , Brand { regex : "NOTE GRACE V(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("Note Grace V") , models : None , }) , ("Beetel" , Brand { regex : "Beetel ([a-z0-9]+)" , device : Some ("feature phone") , model : Some ("$1") , models : None , }) , ("Innostream" , Brand { regex : "INNO([a-z0-9]+)" , device : Some ("feature phone") , model : Some ("INNO$1") , models : None , }) , ("Tesco" , Brand { regex : "Hudl (?:[^/;]+)(?: Build|[;)])|W032i-C3(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "Hudl ([^/;]+)(?: Build|[;)])" , model : "Hudl $1" , } , Model { regex : "W032i-C3(?:[);/ ]|$)" , model : "Op3n Dott" , } ,]) , }) , ("BrightSign" , Brand { regex : "BrightSign" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "(HD1023|XD233|XD230|XD1030|XT114[34]|4K1142|LS424)" , model : "$1" , } ,]) , }) , ("Cricket" , Brand { regex : "Cricket-([a-z0-9]+)|(?:U325AC|U705AC|V350C)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "U325AC" , model : "Icon 2" , } , Model { regex : "U705AC" , model : "Ovation" , } , Model { regex : "V350C" , model : "Influence" , } , Model { regex : "Cricket-([a-z0-9]+)" , model : "$1" , } ,]) , }) , ("Bitmore" , Brand { regex : "(?:Mobitab10c-3G|Tab1011Q_II|Colortab[ _]?(10(?:M| II)?|816i))(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "(Mobitab)(10)c-3G(?:[);/ ]|$)" , model : "$1 $2C 3G" , } , Model { regex : "Tab1011Q_II(?:[);/ ]|$)" , model : "Tab1011Q II" , } , Model { regex : "Colortab[ _]?(10(?:M| II)?|816i)(?:[);/ ]|$)" , model : "ColorTab $1" , } ,]) , }) , ("Droxio" , Brand { regex : "DROXIO (C40|B45)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Mobistel" , Brand { regex : "(Cynus[ _][^/;)]+)( Build|\\))" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("T-Mobile" , Brand { regex : "T-Mobile[ _][a-z0-9 ]+|(?:REVVLRY|REVVL 2(?: PLUS)?|5062[ZW]|5007[ZW])(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "5062[ZW]" , model : "REVVL 4 Plus" , } , Model { regex : "5007[ZW]" , model : "REVVL 4" , } , Model { regex : "REVVL 2 PLUS" , model : "REVVL 2 Plus" , } , Model { regex : "REVVLRY" , model : "REVVL Plus" , } , Model { regex : "REVVL 2(?:[);/ ]|$)" , model : "REVVL 2" , } , Model { regex : "T-Mobile[ _]([a-z0-9_ ]+) Build" , model : "$1" , } , Model { regex : "T-Mobile[ _]([a-z0-9_ ]+)" , model : "$1" , } ,]) , }) , ("Asanzo" , Brand { regex : "ASANZO[ _](?:A2|S[23]|[SZ]5|S3_PLUS)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "ASANZO[ _]S3[ _]PLUS" , model : "S3 Plus" , } , Model { regex : "ASANZO[ _](A2|S[23]|[SZ]5)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Pico" , Brand { regex : "Pico (G2 4K)(?:[);/ ]|$)" , device : Some ("wearable") , model : Some ("$1") , models : None , }) , ("Polytron" , Brand { regex : "POLYTRON|W8480|W7430|PW1100S|W7550|W7531|W8570|R2401" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "R2508" , model : "Rocket" , } , Model { regex : "POLYTRON[ _]R1500" , model : "Rocket Q-Five" , } , Model { regex : "R2401" , model : "Rocket 2X" , } , Model { regex : "POLYTRON[ _-]R2402" , model : "Rocket R2402" , } , Model { regex : "POLYTRON[ _-]R2403" , model : "Rocket R1" , } , Model { regex : "POLYTRON[ _-]R2406" , model : "Rocket R2" , } , Model { regex : "POLYTRON[ _-]R2407" , model : "Rocket R3" , } , Model { regex : "POLYTRON[ _-]R2452" , model : "Rocket S1" , } , Model { regex : "POLYTRON[ _-]R2457" , model : "Rocket S2" , } , Model { regex : "POLYTRON[ _-]R2501" , model : "Rocket T1" , } , Model { regex : "POLYTRON[ _-]R2507" , model : "Rocket T3" , } , Model { regex : "POLYTRON[ _-]R2509SE" , model : "Rocket T6 SE" , } , Model { regex : "POLYTRON[ _-]R2509" , model : "Rocket T6" , } , Model { regex : "POLYTRON[ _-]R250A" , model : "Rocket T7" , } , Model { regex : "POLYTRON[ _-]R2506" , model : "Rocket T4" , } , Model { regex : "POLYTRON[ _-](?:R3450|W1400)" , model : "Rocket Jetz" , } , Model { regex : "POLYTRON[ _-]R3500" , model : "Rocket Jetz 5.0" , } , Model { regex : "4G450" , model : "Zap 5" , } , Model { regex : "W6500" , model : "Quadra Rocket" , } , Model { regex : "W7452" , model : "Quadra S2" , } , Model { regex : "W7550" , model : "Quadra V5" , } , Model { regex : "W8570" , model : "Quadra V7" , } , Model { regex : "POLYTRON[ _]L501" , model : "Rocket L501" , } , Model { regex : "POLYTRON[ _]P520" , model : "Prime 7S" , } , Model { regex : "POLYTRON[ _]P552" , model : "Prime 7 Pro" , } , Model { regex : "4G500" , model : "Zap 6 Cleo" , } , Model { regex : "W8480" , model : "Crystal 4 W8480" , } , Model { regex : "W7531" , model : "Wizard V" , } , Model { regex : "W7430" , model : "Quadra Mini W7430" , } , Model { regex : "POLYTRON[ _]4G501" , model : "Zap 6 Posh" , } , Model { regex : "POLYTRON[ _]4G502" , model : "Zap 6 Power" , } , Model { regex : "POLYTRON[ _]4G503" , model : "Zap 6 Flaz" , } , Model { regex : "POLYTRON[_ ]?[ _]4G550" , model : "Zap 6 Note" , } , Model { regex : "POLYTRON[ _]4G551" , model : "Zap 6 Posh Note" , } , Model { regex : "PW1100S" , model : "PW1100S" , } , Model { regex : "Q2352" , model : "Q2352" , } , Model { regex : "POLYTRON[ _]T7800" , model : "Cosmica T7800" , } , Model { regex : "POLYTRON[ _]T7700" , model : "Rocket Pad" , } ,]) , }) , ("U.S. Cellular" , Brand { regex : "USCC-" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "USCC-E6762" , model : "Kyocera DuraForce" , } , Model { regex : "(USCC-[a-z0-9_\\-]+)" , model : "$1" , } ,]) , }) , ("DNS" , Brand { regex : "(?:DNS|AirTab)[ _\\-]([^;/)]+)|(?:S4505M|S4004M|SD01M)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(?:DNS[_ ])?(S4505M|S4004M|SD01M|S4502|S4003|S4003)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "AirTab[ _\\-]([^;/]+)(?: Build|[);])" , model : "AirTab $1" , } , Model { regex : "DNS[ _\\-]([^;/]+)(?: Build|[);])" , model : "$1" , } ,]) , }) , ("Senseit" , Brand { regex : "SENSEIT[ _]?([^;/)]+)( Build|\\))" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Lesia" , Brand { regex : "ANOVA A5(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("Anova A5") , models : None , }) , ("Selenga" , Brand { regex : "Selenga[ _](A[134])(?:[);/ ]|$)" , device : Some ("tv") , model : Some ("$1") , models : None , }) , ("Symphony" , Brand { regex : "SYMPHONY[ \\_]([a-z0-9]+)|(?:roar[ _](?:V20|V78|E80|V150))|roarV95|ZVIII(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "ZVIII" , model : "ZVIII" , } , Model { regex : "roar[ _]?(V20|E80|V78|V95|V150)(?:[);/ ]|$)" , model : "Roar $1" , } , Model { regex : "SYMPHONY[ \\_]([a-z0-9]+)" , model : "$1" , } ,]) , }) , ("Philips" , Brand { regex : "Philips|AND1E(?:[);/ ]|$)|NETTV/|PI3210G|TLE(821L|722G)|TPM1[79]1E|70PUH6774_96|QM16[134]E|Xenium S[25]66|S397|W5510" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(?:Philips[_ ])?Xenium[ _](S[25]66|V787)(?:[);/ ]|$)" , model : "Xenium $1" , } , Model { regex : "(?:Philips[_ ])?(S397|W5510)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "AND1E(?: TV)?(?:[);/ ]|$)" , model : "Android TV" , } , Model { regex : "(PI3210G)" , model : "$1" , } , Model { regex : "(TPM1[79]1E)" , model : "$1" , } , Model { regex : "(QM16[134]E)" , model : "$1" , } , Model { regex : "(70PUH6774)_96" , model : "$1/96 4K UHD" , } , Model { regex : "(TLE821L)(?:[);/ ]|$)" , model : "$1 4G LTE" , } , Model { regex : "(TLE722G)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Philips, BDP([0-9]{4})" , model : "Blu-ray Player (BDP$1)" , } , Model { regex : "Philips, ([a-z0-9-]+)" , model : "$1" , } , Model { regex : "(NETTV/[0-9\\.]{5})" , model : "NetTV Series" , } , Model { regex : "Philips-FISIO ([a-z0-9]+)" , model : "Fisio $1" , } , Model { regex : "Philips[ _-]?([a-z0-9\\-@]+)" , model : "$1" , } ,]) , }) , ("Lingwin" , Brand { regex : "Lingwin[ _\\-]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Lingwin[ _\\-]?([^/;]+) Build" , model : "$1" , } , Model { regex : "Lingwin[ _\\-]?([^);/ ]+)" , model : "$1" , } ,]) , }) , ("GOCLEVER" , Brand { regex : "GOCLEVER|QUANTUM_[0-9]{3}|QUANTUM [0-9]{1}|QUANTUM 700N|Quantum2 500|QUANTUM_(1010N|1010M|900)|ARIES|INSIGNIA|ORION_|ELIPSO|LIBRA[ _]97" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "QUANTUM_(1010N|1010M|900)" , model : "QUANTUM $1" , } , Model { regex : "INSIGNIA_(785_PRO|1010M|800M)" , model : "INSIGNIA $1" , } , Model { regex : "(ORION|ARIES|ELIPSO)[_ ](71|101|102)" , model : "$1 $2" , } , Model { regex : "TQ700N" , model : "QUANTUM 700N" , } , Model { regex : "Quantum2 500" , model : "Quantum 2 500" , } , Model { regex : "((?:QUANTUM|ARIES|INSIGNIA|ORION|ELIPSO)[ _-]?[^;/]+)(?: Build|\\))" , model : "$1" , } , Model { regex : "GOCLEVER[ _-]TAB[ _-]?([^;/]+) Build" , model : "TAB $1" , } , Model { regex : "GOCLEVER[ _-]?([^;/]+) Build" , model : "$1" , } , Model { regex : "TAB ([^;/)]+) Build/GOCLEVER" , model : "TAB $1" , } , Model { regex : "([^;/)]+) Build/GOCLEVER" , model : "$1" , } , Model { regex : "GOCLEVER[ _-]?TAB[ _-]([^;/)]+)(?:[;/)]|$)" , model : "TAB $1" , } , Model { regex : "GOCLEVER[ _-]?([^;/)]+)(?:[;/)]|$)" , model : "$1" , } , Model { regex : "LIBRA[ _]97" , model : "Libra 97" , } ,]) , }) , ("Newman" , Brand { regex : "Newman[ _](P308|K1)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("EXO" , Brand { regex : "(?:EXO_)?(Wave_i101G|Wave_i007B?|Wave i101[Hb])(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Hyundai" , Brand { regex : "Hyundai|Ultra (?:Active|Air|Charm|Dream|Energy|Latitude|Link|Live|Shadow|Shine|Storm|Style|Sync|Trend|Vision|Wave)|G(24027|2552[34])K|W25042L|HP554O|Seoul S8|L503F Plus|HT0701L16|HT0704K08|HT1004L16|HT1004LI16|Koral_8W2|Eternity[_ ]G25" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Ultra (Active|Air|Charm|Dream|Energy Lite|Energy Plus|Energy|Latitude|Link|Live II|Live|Shadow|Shine|Storm|Style|Sync|Trend|Vision|Wave)" , model : "Ultra $1" , } , Model { regex : "Seoul S8" , model : "Seoul S8" , } , Model { regex : "G25523K" , model : "Eternity G23" , } , Model { regex : "Eternity[_ ]G25" , model : "Eternity G25" , } , Model { regex : "G25524K" , model : "Eternity G24" , } , Model { regex : "G24027K" , model : "Eternity G27" , } , Model { regex : "W25042L" , model : "Eternity W42" , } , Model { regex : "HP554O" , model : "HP554O" , } , Model { regex : "L503F Plus" , model : "L503F Plus" , } , Model { regex : "L503F Plus" , model : "L503F Plus" , } , Model { regex : "(?:Hyundai_)?(Eternity_G57L)" , model : "$1" , } , Model { regex : "HT0701L16" , model : "Koral 7XL" , } , Model { regex : "HT1004LI16" , model : "Koral 10XL" , } , Model { regex : "Koral_8W2" , model : "Koral 8W2" , } , Model { regex : "HT1004L16" , model : "Koral 10XL" , } , Model { regex : "HT0704K08" , model : "Koral 7M4" , } , Model { regex : "Hyundai ([^;/]+) Build" , model : "$1" , } , Model { regex : "Hyundai[ _\\-]?([a-z0-9_-]+)" , model : "$1" , } ,]) , }) , ("NEXBOX" , Brand { regex : "(MXQ|MXQ-Pro)-NEXBOX|NEXBOX-([^) ]+)" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "MXQ-Pro-NEXBOX" , model : "MXQ Pro" , } , Model { regex : "MXQ-NEXBOX" , model : "MXQ" , } , Model { regex : "NEXBOX-([^) ]+)" , model : "$1" , } ,]) , }) , ("Zeemi" , Brand { regex : "ZEEMI[ _-]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "ZEEMI[ _-]([^/;]+) Build" , model : "$1" , } , Model { regex : "ZEEMI[ _-]([^/;)]+)(?:[);/]|$)" , model : "$1" , } ,]) , }) , ("AfriOne" , Brand { regex : "(CYGNUSX?|Gravity Z2|ChampionPro)(?:[);/ ]|$)" , device : Some ("phablet") , model : None , models : Some (& [Model { regex : "CYGNUSX(?:[);/ ]|$)" , model : "Cygnus X" , } , Model { regex : "CYGNUS(?:[);/ ]|$)" , model : "Cygnus" , } , Model { regex : "Gravity Z2(?:[);/ ]|$)" , model : "Gravity Z2" , } , Model { regex : "ChampionPro(?:[);/ ]|$)" , model : "Champion Pro" , } ,]) , }) , ("Fujitsu" , Brand { regex : "(?:F-01[FHJKLM]|F-02[EFGHLK]|F-03[DEFGKHL]|F-04[EGFHKJ]|F-05[DEFJG]|F-06[EF]|F-07[DE]|F-08D|F-09[DE]|F-10D|F-[45]1A|F-[45]2A|F-11D|F-12C|M532|FARTM933KZ|901FJ|arrows(?:RX|M03|M0[45](?:-PREMIUM)?)|801FJ|FJL2[12])(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "F-51A(?:[);/ ]|$)" , model : "Arrows 5G F-51A" , } , Model { regex : "F-01F(?:[);/ ]|$)" , model : "Arrows NX F-01F" , } , Model { regex : "(F-01[LM]|F-06F|F-03K|F-42A)(?:[);/ ]|$)" , model : "Easy Phone $1" , } , Model { regex : "F-03L(?:[);/ ]|$)" , model : "Arrows Phone F-03L" , } , Model { regex : "F-01J(?:[);/ ]|$)" , model : "Arrows NX F-01J" , } , Model { regex : "F-01K(?:[);/ ]|$)" , model : "Arrows NX F-01K" , } , Model { regex : "F-01H(?:[);/ ]|$)" , model : "Arrows Fit F-01H" , } , Model { regex : "F-02E(?:[);/ ]|$)" , model : "Arrows X F-02E" , } , Model { regex : "F-02G(?:[);/ ]|$)" , model : "Arrows NX F-02G" , } , Model { regex : "FJL21(?:[);/ ]|$)" , model : "Arrows EF FJL21" , } , Model { regex : "FJL22(?:[);/ ]|$)" , model : "Arrows Z FJL22" , } , Model { regex : "F-02H(?:[);/ ]|$)" , model : "Arrows NX F-02H" , } , Model { regex : "F-52A(?:[);/ ]|$)" , model : "Arrows NX9 F-52A" , } , Model { regex : "F-03D(?:[);/ ]|$)" , model : "Arrows Kiss F-03D" , } , Model { regex : "F-03E(?:[);/ ]|$)" , model : "Arrows Kiss F-03E" , } , Model { regex : "F-03F(?:[);/ ]|$)" , model : "Disney Mobile F-03F" , } , Model { regex : "F-03H(?:[);/ ]|$)" , model : "Arrows SV F-03H" , } , Model { regex : "901FJ(?:[);/ ]|$)" , model : "Arrows J 901FJ" , } , Model { regex : "F-04E(?:[);/ ]|$)" , model : "Arrows V F-04E" , } , Model { regex : "F-04G(?:[);/ ]|$)" , model : "Arrows NX F-04G" , } , Model { regex : "F-05D(?:[);/ ]|$)" , model : "Arrows X LTE F-05D" , } , Model { regex : "F-05F(?:[);/ ]|$)" , model : "Arrows NX F-05F" , } , Model { regex : "F-05J(?:[);/ ]|$)" , model : "Arrows Be F-05J" , } , Model { regex : "F-05G(?:[);/ ]|$)" , model : "Arrows K-tai" , } , Model { regex : "F-04K(?:[);/ ]|$)" , model : "Arrows Be F-04K" , } , Model { regex : "F-02L(?:[);/ ]|$)" , model : "Arrows Be 3 F-02L" , } , Model { regex : "F-41A(?:[);/ ]|$)" , model : "Arrows Be 4 F-41A" , } , Model { regex : "F-06E(?:[);/ ]|$)" , model : "Arrows NX F-06E" , } , Model { regex : "F-07D(?:[);/ ]|$)" , model : "Arrows μ F-07D" , } , Model { regex : "801FJ(?:[);/ ]|$)" , model : "Arrows U 801FJ" , } , Model { regex : "F-07E(?:[);/ ]|$)" , model : "Disney Mobile F-07E" , } , Model { regex : "F-08D(?:[);/ ]|$)" , model : "Disney Mobile F-08D" , } , Model { regex : "F-09D(?:[);/ ]|$)" , model : "ANTEPRIMA F-09D" , } , Model { regex : "F-09E(?:[);/ ]|$)" , model : "Raku-Raku Smartphone Premium F-09E" , } , Model { regex : "F-10D(?:[);/ ]|$)" , model : "Arrows X F-10D" , } , Model { regex : "F-11D(?:[);/ ]|$)" , model : "Arrows Me F-11D" , } , Model { regex : "F-12C(?:[);/ ]|$)" , model : "F-12C" , } , Model { regex : "(F-04[JF])(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "arrowsM03(?:[);/ ]|$)" , model : "Arrows M03" , } , Model { regex : "arrowsRX(?:[);/ ]|$)" , model : "Arrows RX" , } , Model { regex : "arrowsM04-PREMIUM(?:[);/ ]|$)" , model : "Arrows M04 Premium" , } , Model { regex : "arrowsM(0[45])(?:[);/ ]|$)" , model : "Arrows M$1" , } , Model { regex : "(F-0[32]F|F-03G|F-04H|F-05E|F-02K)(?:[);/ ]|$)" , model : "Arrows Tab $1" , } , Model { regex : "FARTM933KZ" , model : "Arrows Tab M504/HA4" , } , Model { regex : "M532(?:[);/ ]|$)" , model : "Stylistic" , } ,]) , }) , ("Fonos" , Brand { regex : "Fonos-(O1)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("EE" , Brand { regex : "Hawk_from_EE|Rook from EE" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Hawk_from_EE" , model : "Hawk" , } , Model { regex : "Rook from EE" , model : "Rock" , } ,]) , }) , ("Evolio" , Brand { regex : "Evolio|M4MAGIC" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "M4MAGIC" , model : "M4 Magic" , } , Model { regex : "Evolio_M5Pro" , model : "M5 Pro" , } , Model { regex : "Evolio[ _](M6|S4 Cobalt|S5|X10|Yuppi)" , model : "$1" , } ,]) , }) , ("iBall" , Brand { regex : "iBall[ _]([^;/)]+)[ _]Build|iBall_Slide|(?:Snap[_ ]4G2|6351-Q400i|iT-KSA0003|iT-KSA0012|iT-KSA0066|Avid|Twinkle_i5|Gorgeo[_ ]4GL|Brisk 4G2|Blaze_V4|Wondro 10|Q27 4G|Andi (?:Wink|5G Blink) 4G)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "Andi Wink 4G" , model : "Andi Wink 4G" , } , Model { regex : "Andi 5G Blink 4G" , model : "Andi 5G Blink 4G" , } , Model { regex : "(Snap[_ ]4G2|Avid|Twinkle_i5|Gorgeo[_ ]4GL|Blaze_V4|Wondro 10|Q27 4G|Brisk 4G2)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "6351-Q400i(?:[);/ ]|$)" , model : "Slide" , } , Model { regex : "iT-KSA0003(?:[);/ ]|$)" , model : "iTAB BizniZ" , } , Model { regex : "iT-KSA0066(?:[);/ ]|$)" , model : "iTAB BizniZ Mini" , } , Model { regex : "iT-KSA0012(?:[);/ ]|$)" , model : "iTAB Moviez Pro" , } , Model { regex : "iBall[ _]([^;/)]+)(?:[ _]Build|\\))" , model : "$1" , } ,]) , }) , ("iLife" , Brand { regex : "(ITELL[_ ](?:K3300|K3500N?|K4700))(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Ghong" , Brand { regex : "GHONG(V10)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Softbank" , Brand { regex : "Softbank|J-PHONE" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Softbank/[12]\\.0/([a-z0-9]+)" , model : "$1" , } , Model { regex : "([a-z0-9]+);Softbank;" , model : "$1" , } , Model { regex : "J-PHONE/[0-9]\\.[0-9]/([a-z0-9\\-]+)" , model : "$1" , } ,]) , }) , ("AGM" , Brand { regex : "AGM ([^/;)]+)(?: Build|[;)])" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("OzoneHD" , Brand { regex : "Ozone HD|OzoneHD[ _](T2 WiFi|4K(?: TV)?|Fun)(?:[);/ ]|$)" , device : Some ("tv") , model : Some ("$1") , models : None , }) , ("Wink" , Brand { regex : "(?<!mismart )Wink[_ ]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Wink[_ ]((?:Glory|World|Share|City)(?:[_ ](?:SE|S))?)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Wink[ _](Primo|Highway)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Lanix" , Brand { regex : "LANIX-([a-z0-9]+)|Ilium[ _]|IliumPad|X120C|Alpha 950" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "ILIUM[ _]?PAD[ _]?([^;/]+)(?: Build|[;)])" , model : "Ilium Pad $1" , } , Model { regex : "X120C" , model : "Ilium X120C" , } , Model { regex : "Ilium[ _](Alpha [15]s|Alpha [379]|L(?:200|6[12]0|9[0125]0|1[0124]00|1050|1120)|LT5[012]0|M[13579]|S(?:106|520|6[27]0)|X(?:1[12]0|2[0126]0|5[12]0|500B|710)|M[579]s)(?:[);/ ]|$)" , model : "Ilium $1" , } , Model { regex : "ILIUM[ _]([^;/]+) Build" , model : "Ilium $1" , } , Model { regex : "Alpha 950" , model : "Ilium Alpha 950" , } , Model { regex : "LANIX-([a-z0-9]+)" , model : "$1" , } ,]) , }) , ("Mobo" , Brand { regex : "(?:(?:MOBO[_ ]MB7005|MT7-421HD)|(?:MT7-442D|MT7-411D))(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "(?:MOBO[_ ])?(MB7005|MT7-421HD|MT7-442D|MT7-411D)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Elephone" , Brand { regex : "Elephone|P6000( ?Pro| ?Plus|\\+| ?02| 5.0 01)?" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Elephone Trunk(?:[);/ ]|$)" , model : "Trunk" , } , Model { regex : "P6000(\\+| ?Plus)(?:[);/ ]|$)" , model : "P6000 Plus" , } , Model { regex : "P6000 02(?:[);/ ]|$)" , model : "P6000 02" , } , Model { regex : "P6000 5.0 01(?:[);/ ]|$)" , model : "P6000 01" , } , Model { regex : "P6000 ?Pro(?:[);/ ]|$)" , model : "P6000 Pro" , } , Model { regex : "(?:Elephone[ _])?(P[768]000|S2)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Elephone[ _\\-]([^/;]+)(?: Build|[;)])" , model : "$1" , } ,]) , }) , ("Bird" , Brand { regex : "BIRD[\\-. _]([^;/]+)" , device : Some ("feature phone") , model : None , models : Some (& [Model { regex : "BIRD[\\-. _]([^;/]+) Build" , model : "$1" , } , Model { regex : "BIRD[\\-. _]([^;/]+)" , model : "$1" , } ,]) , }) , ("Ginzzu" , Brand { regex : "GINZZU[_ ]|((?:RS(?:7[14]|81|9[67])D)|S5002|(?<!Wave Pro )S5021|S5230|S50[45]0|S5120|RS(6[12]|9[45])D|S40[23]0|RS850[12]|RS9602)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "GINZZU[_ ]?(S40[17]0|S4710|ST60[14]0|ST6120)" , model : "$1" , } , Model { regex : "GINZZU[_ ]?(GT-(?:1050|7105|70[1-4]0|7115|7210|[WX]831|X[78]70|7810|8[01]10|X853))" , model : "$1" , } , Model { regex : "(RS6[12]D) ULTIMATE" , model : "$1 Ultimate" , } , Model { regex : "(?:GINZZU[ _])?((?:RS(?:7[14]|81|9[4-7])D)|S50[45]0|S5002|S5021|S5230|S5120|S40[23]0|RS850[12]|RS9602|RS94D)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Bravis" , Brand { regex : "Bravis[ _]|A501 Bright|A552 JOY Max|A504 Trace|A505 JOY Plus|A503 Joy|NB(?:106M|10[1-8]|751|7[145]|8[57]1|76)|NP101|NB961|NP 104 3G|B501|N1-570 Space|Atlas A551|A512 Harmony Pro|A510_Jeans_4G|A509_Jeans|N1_550_Cruiser" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "A501 BRIGHT" , model : "A501 Bright" , } , Model { regex : "Bravis[_ ]X500" , model : "Trace Pro" , } , Model { regex : "Bravis[_ ]A506" , model : "Crystal" , } , Model { regex : "Bravis[_ ]A553" , model : "Discovery" , } , Model { regex : "BRAVIS[ _]TAU" , model : "Tau" , } , Model { regex : "BRAVIS[ _]DELTA" , model : "Delta" , } , Model { regex : "BRAVIS[ _]TREND" , model : "Trend" , } , Model { regex : "B501" , model : "Easy" , } , Model { regex : "N1-570" , model : "Space" , } , Model { regex : "BRAVIS[ ]A554" , model : "A554 Grand" , } , Model { regex : "BRAVIS[ ]S500" , model : "S500 Diamond" , } , Model { regex : "A505 JOY Plus" , model : "A505 Joy Plus" , } , Model { regex : "A552 JOY Max" , model : "A552 Joy Max" , } , Model { regex : "Atlas A551" , model : "A551 Atlas" , } , Model { regex : "A503 Joy" , model : "A503 Joy" , } , Model { regex : "A504 Trace" , model : "A504 Trace" , } , Model { regex : "A512 Harmony Pro" , model : "A512 Harmony Pro" , } , Model { regex : "A510_Jeans_4G" , model : "A510 Jeans 4G" , } , Model { regex : "A509_Jeans" , model : "A509 Jeans" , } , Model { regex : "BRAVIS NEO" , model : "A401 Neo" , } , Model { regex : "N1_550_Cruiser" , model : "N1-550 Cruiser" , } , Model { regex : "BRAVIS OMEGA" , model : "Omega" , } , Model { regex : "BRAVIS BIZ" , model : "Biz" , } , Model { regex : "BRAVIS POWER" , model : "Power" , } , Model { regex : "BRAVIS[ _]SPARK" , model : "Spark" , } , Model { regex : "BRAVIS[ _]SLIM[ _]3G" , model : "Slim 3G" , } , Model { regex : "NP 104 3G" , model : "NP104 3G" , } , Model { regex : "BRAVIS NP 103" , model : "NP103" , } , Model { regex : "BRAVIS NP 844" , model : "NP844" , } , Model { regex : "Bravis[_ ]([^;\\)]+) Build" , model : "$1" , } , Model { regex : "(NB(?:106M|10[1-8]|751|7[145]|8[57]1|76)|NP101|NB961)" , model : "$1" , } ,]) , }) , ("Vesta" , Brand { regex : "VESTA32LD86(?:[);/ ]|$)" , device : Some ("tv") , model : Some ("SmartT V2.0 32LD86S") , models : None , }) , ("PiPO" , Brand { regex : "Pipo[_ ]|PipoM9Pro" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "Pipo[_ ]([TP]9)" , model : "$1" , } , Model { regex : "PipoM9Pro" , model : "M9 Pro" , } , Model { regex : "PIPO[_ ](X10|X9S)" , model : "$1" , } ,]) , }) , ("EKO" , Brand { regex : "EKO" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "EKO[ _-]?([^;/)]+) Build" , model : "$1" , } , Model { regex : "EKO[ _-]?([^;/)]+)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Jolla" , Brand { regex : "Jolla" , device : Some ("smartphone") , model : Some ("") , models : None , }) , ("bogo" , Brand { regex : "BO-(FRSP4|LFSPBS5|LFSP4|LFSPSL4|LFSPBS5|LFSPSL6QCI)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "BO-LFSP4" , model : "LifeStyle 4DC" , } , Model { regex : "BO-LFSPSL4" , model : "LifeStyle 4SL" , } , Model { regex : "BO-LFSPBS5" , model : "LifeStyle 5BS" , } , Model { regex : "BO-LFSPSL6QCI" , model : "LifeStyle 6QC" , } , Model { regex : "BO-(FRSP4)" , model : "$1" , } ,]) , }) , ("BDF" , Brand { regex : "(BDF[- ](?:819|P10|K107H|KT107|MT6753|X20)|K960N_MT(?:6580|6753)(?:_32_N)?)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "BDF[- ](819|P10|K107H|KT107|MT6753|X20)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "K960N_MT(6580|6753)(_32_N)?(?:[);/ ]|$)" , model : "BK960N MT$1" , } ,]) , }) , ("Arian Space" , Brand { regex : "Arian Space" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "100 ST1004PG" , model : "100" , } , Model { regex : "80 SS8003PG" , model : "80" , } , Model { regex : "71 ST7002PG" , model : "71" , } , Model { regex : "70 ST7001RW" , model : "70" , } ,]) , }) , ("FNB" , Brand { regex : "ConeXis (A[12]|X[12])|SP5045V" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "SP5045V" , model : "SP5045V" , } , Model { regex : "ConeXis A1" , model : "ConeXis A1" , } , Model { regex : "ConeXis A2" , model : "ConeXis A2" , } , Model { regex : "ConeXis X1" , model : "ConeXis X1" , } , Model { regex : "ConeXis X2" , model : "ConeXis X2" , } ,]) , }) , ("Bush" , Brand { regex : "Bush[ _-]|Bush10Nou" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Bush10Nou" , model : "10Nou" , } , Model { regex : "BUSH ([^;/)]+)Tablet(?: Build|[);])" , model : "$1Tablet" , } , Model { regex : "BUSH ([^;/)]+)(?: Build|[);])" , model : "$1" , } ,]) , }) , ("GoMobile" , Brand { regex : "GO Onyx|GO[0-9]{3,4}" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "GO Onyx" , model : "Go Onyx" , } , Model { regex : "GO([0-9]{3,4})" , model : "Go$1" , } ,]) , }) , ("Xtouch" , Brand { regex : "Xtouch[ _](X10|A5)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Bkav" , Brand { regex : "Bphone[ _](B111[45]|B2017)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("Bphone $1") , models : None , }) , ("Zentality" , Brand { regex : "C-723ULTRA(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("C-723 Ultra") , models : None , }) , ("Pixela" , Brand { regex : "Infineum[_ ](Z4?5)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("Infineum $1") , models : None , }) , ("Smartfren" , Brand { regex : "Smartfren|Androtab|Andromax|PD6D1J|AD682J|AD68[89]G|AD6B1H|AD9A1H|AD682H|AD683G" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "S7 Build" , model : "Andromax Tab 7.0" , } , Model { regex : "PD6D1J" , model : "Andromax V3s" , } , Model { regex : "AD682J" , model : "Andromax T" , } , Model { regex : "AD688G" , model : "Andromax C2" , } , Model { regex : "AD689G" , model : "Andromax i3" , } , Model { regex : "AD682H" , model : "Andromax i3s" , } , Model { regex : "AD6B1H" , model : "Andromax G2 Hot" , } , Model { regex : "AD9A1H" , model : "Andromax G2" , } , Model { regex : "AD683G" , model : "Andromax I" , } , Model { regex : "New Andromax-i" , model : "New Andromax I" , } , Model { regex : "Andromax[ _\\-]([^/;]+) Build" , model : "Andromax $1" , } , Model { regex : "Andromax[ _\\-]([a-z0-9]+)" , model : "Andromax $1" , } , Model { regex : "Smartfren[ _\\-]([^/;\\)]+)(?: Build|[/;\\)])" , model : "$1" , } , Model { regex : "(Androtab[^/;]+) Build" , model : "$1" , } ,]) , }) , ("Inoi" , Brand { regex : "INOI" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "INOI 2 Lite 2019" , model : "2 Lite (2019)" , } , Model { regex : "INOI ([257]) (2019|202[01])(?:[);/ ]|$)" , model : "$1 ($2)" , } , Model { regex : "INOI[_ ]([^);/]+)(?: Build|[;)])" , model : "$1" , } ,]) , }) , ("Kult" , Brand { regex : "(Ambition|Beyond)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Prixton" , Brand { regex : "PRIXTON |(T7012Q)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "PRIXTON (C18)" , model : "$1" , } , Model { regex : "(T7012Q)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("GEOFOX" , Brand { regex : "GEOFOX[_](MID743)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Polaroid" , Brand { regex : "Polaroid|(?:PMID|MIDC)[0-9a-z]+(?:[);/ ]|$)|MID(?:1014|0714)|PRO[VG]?(?:[0-9]{3,}[a-z]*|[0-9]{2}[a-z])|(?:P(?:400[56]|4526|500[56]|502[56]|504[67]|552[56])A|P902/A900|PSPC(?:505|550|[MZL]20A0|K2[01]NA)|SIGMA 5|MIDS145PXE|MIDS747PX|MID4004JBL|MIDS185PR|PSPTD21NA)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "P4005A" , model : "Turbo C4" , } , Model { regex : "P5005A" , model : "Turbo C5" , } , Model { regex : "P4006A" , model : "Turbo D4" , } , Model { regex : "PSPTD21NA" , model : "Turbo D2 Plus" , } , Model { regex : "P4526A" , model : "Turbo E" , } , Model { regex : "PSPC(505|550)" , model : "Cosmo $1" , } , Model { regex : "P5006A" , model : "Cosmo K" , } , Model { regex : "P5526A" , model : "Cosmo K Plus" , } , Model { regex : "PSPCK20NA" , model : "Cosmo K2" , } , Model { regex : "PSPCK21NA" , model : "Cosmo K2 Plus" , } , Model { regex : "P5026A" , model : "Cosmo L" , } , Model { regex : "PSPCL20A0" , model : "Cosmo L2" , } , Model { regex : "PSPCM20A0" , model : "Cosmo M2" , } , Model { regex : "P5046A" , model : "Cosmo P5s" , } , Model { regex : "P5525A" , model : "Cosmo Q5s" , } , Model { regex : "P5047A" , model : "Cosmo Z" , } , Model { regex : "PSPCZ20A0" , model : "Cosmo Z2" , } , Model { regex : "P5025A" , model : "L5s" , } , Model { regex : "PRO4611(?:PR201)?" , model : "Pro4611" , } , Model { regex : "PROV400" , model : "Agate" , } , Model { regex : "PROV350" , model : "ProV350" , } , Model { regex : "SIGMA 5(?:[);/ ]|$)" , model : "Sigma 5" , } , Model { regex : "PRO([VG]?(?:[0-9]{3,}[a-z]*|[0-9]{2}[a-z]))" , model : "Pro$1" , } , Model { regex : "PSPT350" , model : "Turbo 350 Gris" , } , Model { regex : "MIDS185PR" , model : "Pure 10.1\"" , } , Model { regex : "(MID(?:1014|0714|S145PXE|S747PX|4004JBL))" , model : "$1" , } , Model { regex : "((?:PMID|MIDC)[0-9a-z]+)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "(P902/A900)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Polaroid" , model : "" , } ,]) , }) , ("Telefunken" , Brand { regex : "TELEFUNKEN|Foxtrot|TEL-1013GIQA|TF-SP(?:500[12]|4002)|(TF-MID(?:[78]02G|70[78]G|80[46]G|9705RG|9707G|7805G|100[57]G|1010G))|(TF-LED(?:65S75T2SU|32S39T2S|32S5[289]T2S|32S70T2S|40S63T2S))" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "TEL-1013GIQA" , model : "Giqa 10.1 3G" , } , Model { regex : "Foxtrot2" , model : "Foxtrot 2" , } , Model { regex : "(?:TELEFUNKEN)?(TF-SP(?:500[12]|4002)|Outdoor LTE|Foxtrot)" , model : "$1" , } , Model { regex : "(TF-MID(?:[78]02G|70[78]G|80[46]G|9705RG|9707G|7805G|100[57]G|1010G))" , model : "$1" , } , Model { regex : "(TF-LED(?:65S75T2SU|32S39T2S|32S5[289]T2S|32S70T2S|40S63T2S))" , model : "$1" , } ,]) , }) , ("SOLE" , Brand { regex : "SOLE[_ ]POP[_ ]S([45]0)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("Pop S$1") , models : None , }) , ("R-TV" , Brand { regex : "R-TV BOX[ _]?(MINI\\+|X99|X10 PRO|[RXS]10)" , device : Some ("tv") , model : Some ("Box $1") , models : None , }) , ("iVooMi" , Brand { regex : "(?:Innelo_1|iV 505)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Innelo_1" , model : "Innelo 1" , } , Model { regex : "iV 505" , model : "Me 1" , } ,]) , }) , ("KINGZONE" , Brand { regex : "KINGZONE_" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "KINGZONE_(N5)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("4ife" , Brand { regex : "4ife (4K Smart TV Box)(?:[);/ ]|$)" , device : Some ("tv") , model : Some ("$1") , models : None , }) , ("Yarvik" , Brand { regex : "Xenta[ \\-]Tab|Luna TAB|TAB09-410|TAB10-410|TAB07-485|TAB0[78]-200|TAB08-201-3G|TAB9-200|TAB09-211|TAB10-2[01]1|TAB13-201" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "Luna TAB07-920N" , model : "Luna 7" , } , Model { regex : "Luna TAB07-10[01]" , model : "Luna 7c" , } , Model { regex : "Luna TAB274" , model : "Luna 7c" , } , Model { regex : "Luna TAB474" , model : "Luna 10" , } , Model { regex : "Luna TAB10-150" , model : "Luna 10c" , } , Model { regex : "TAB09-410" , model : "Noble 9.7" , } , Model { regex : "TAB10-410" , model : "Noble 10.1" , } , Model { regex : "TAB07-485" , model : "Noble Mini" , } , Model { regex : "Xenta-TAB07-21[01]" , model : "Xenta 7c" , } , Model { regex : "TAB07-200" , model : "Xenta 7ic" , } , Model { regex : "TAB08-200" , model : "Xenta 8ic" , } , Model { regex : "TAB08-201-3G" , model : "Xenta 8c" , } , Model { regex : "TAB9-200" , model : "Xenta 9.7ic" , } , Model { regex : "TAB09-211" , model : "Xenta 9.7ic+" , } , Model { regex : "TAB10-2[01]1" , model : "Xenta 10ic" , } , Model { regex : "TAB13-201" , model : "Xenta 13c" , } ,]) , }) , ("JKL" , Brand { regex : "JKL[_ ](A28)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("iRulu" , Brand { regex : "iRULU[ _-](X11|V[34]|U2|AL101)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "iRULU[ _-](X11|V[34]|AL101)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "iRULU[ _](U2)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Medion" , Brand { regex : "Medion|(?:MD_)?LIFETAB|([SPX]10[0-9]{2}X|E10[45]1X|X5001|P851X|P850X|E691X|E1050X)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(?:MD_)?LIFETAB_([a-z0-9]+)" , model : "Lifetab $1" , } , Model { regex : "(E450[46]|E5004|S5004|X5001|E5020|P5015|P500[45]|X6001)(?:[);/ ]|$)" , model : "Life $1" , } , Model { regex : "(B5530)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "(E10[45]1X)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "([SPX]10[0-9]{2}X|P851X|P850X|E691X|E1050X)(?:[);/ ]|$)" , model : "Lifetab $1" , } , Model { regex : "Medion(?: Smartphone)? ([^/;]+) Build" , model : "$1" , } ,]) , }) , ("360" , Brand { regex : "(?:180[1379]-A01|1713-A01|1707-A01|1509-A00|1603-A03|1607-A01|1503-A01)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "1807-A01(?:[);/ ]|$)" , model : "N7" , } , Model { regex : "1803-A01(?:[);/ ]|$)" , model : "N7 Lite" , } , Model { regex : "1809-A01(?:[);/ ]|$)" , model : "N7 Pro" , } , Model { regex : "1713-A01(?:[);/ ]|$)" , model : "N6 Lite" , } , Model { regex : "1707-A01(?:[);/ ]|$)" , model : "N6" , } , Model { regex : "1801-A01(?:[);/ ]|$)" , model : "N6 Pro" , } , Model { regex : "1509-A00(?:[);/ ]|$)" , model : "Q5 Plus" , } , Model { regex : "1503-A01(?:[);/ ]|$)" , model : "N4" , } , Model { regex : "1603-A03(?:[);/ ]|$)" , model : "N4A" , } , Model { regex : "1607-A01(?:[);/ ]|$)" , model : "N5S" , } ,]) , }) , ("Cherry Mobile" , Brand { regex : "Cherry|Superion S1 DTV|Flare([ _])?(2X|4|A[123]|J[123568]|P[13]|S[4-8]|X2|Y[367]|S Play|HD|LITE|XL|X_V2|Y3s|Tab)(?:[ _](?:Pro|Plus|Max|LTE))?|Fusion Bolt|Omega[_ ](?:Icon 2|Icon Lite 2|lite[_ ][43][Cs]?|HD [45]|HD_Duo)|Spin Max 2|Selfie_Two" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(Flare2X)" , model : "$1" , } , Model { regex : "Flare[_ ]HD[_ ]([345])" , model : "Flare HD $1" , } , Model { regex : "Flare_HD_MAX" , model : "Flare HD Max" , } , Model { regex : "FLARE LITE" , model : "Flare Lite" , } , Model { regex : "Flare S Play" , model : "Flare S Play" , } , Model { regex : "Flare[_ ]J([26])S" , model : "Flare J$1s" , } , Model { regex : "Flare_(J2|S7)_Prime" , model : "Flare $1 Prime" , } , Model { regex : "Flare_S7_Deluxe" , model : "Flare S7 Deluxe" , } , Model { regex : "Flare_S7_Power" , model : "Flare S7 Power" , } , Model { regex : "Flare[_ ]Y([367])[_ ]Pro" , model : "Flare Y$1 Pro" , } , Model { regex : "Flare XL Plus" , model : "Flare XL Plus" , } , Model { regex : "Flare[ _]X[_ ]V2" , model : "Flare X V2" , } , Model { regex : "Flare[ _](A2|J3|P1|S[467])[ _]Lite" , model : "Flare $1 Lite" , } , Model { regex : "Flare[ _](J[12]|S[57]|Y3|J6)[ _]mini" , model : "Flare $1 Mini" , } , Model { regex : "Flare_J2_2018" , model : "Flare J2 (2018)" , } , Model { regex : "Flare S4 Max LTE" , model : "Flare S4 Max LTE" , } , Model { regex : "Flare[_ ](S[47]|J2)[_ ]Max" , model : "Flare $1 Max" , } , Model { regex : "FlareS5LiteDTV" , model : "Flare S5 Lite DTV" , } , Model { regex : "Flare[_ ](S[567]|J6)[_ ]Plus" , model : "Flare $1 Plus" , } , Model { regex : "FLARE S6 POWER" , model : "Flare S6 Power" , } , Model { regex : "Flare(?:[ _])?(4|A[123]|J8 LTE|J[13568]|P[13]|S[4-8]|X2|Y3s|Y7_LTE|Y[673])" , model : "Flare $1" , } , Model { regex : "OMEGA HD ([45])" , model : "Omega HD $1" , } , Model { regex : "Omega_HD_Duo" , model : "Omega HD Duo" , } , Model { regex : "Omega Icon Lite 2" , model : "Omega Icon Lite 2" , } , Model { regex : "Omega Icon 2" , model : "Omega Icon 2" , } , Model { regex : "Omega[_ ]Lite[_ ](3[Cs]|4)" , model : "Omega Lite $1" , } , Model { regex : "Spin Max 2" , model : "Spin Max 2" , } , Model { regex : "Selfie_Two" , model : "Selfie Two" , } , Model { regex : "(Fusion Bolt|Flare Tab Pro|Flare Tab|Superion S1 DTV)" , model : "$1" , } , Model { regex : "Cherry(?:[ _]?Mobile)?[ _]?([^/;]+)(?: Build|[);])" , model : "$1" , } ,]) , }) , ("Casper" , Brand { regex : "CASPER[_ ]|VIA[- _](T7D|A[34]|E3|F[123]|G[34]|M4|[LS]8|S7|P2|V8C|A[13]_Plus(?:_64)?|A1(?:_1)?|S[13]0|S|T17_M|T1[07]|T7|T7-3G|T8B|T8D-3G|S1[78])(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(?:CASPER[_ ])?VIA_A1_Plus(?:_64)?" , model : "VIA A1 Plus" , } , Model { regex : "(?:CASPER[_ ])?VIA[_ ](G1_Plus|A3_Plus|G[13]|E1|[AE]2|M[123]|V[35689]|V10|G3|V6X|A[34]|E3|F[123]|G4|M4|P2|S|V8C|A1(?:_1)?)(?:[);/ ]|$)" , model : "VIA $1" , } , Model { regex : "CASPER_VIA_E1c" , model : "VIA E1C" , } , Model { regex : "CASPER_L10_4.5G" , model : "L10 4.5G" , } , Model { regex : "CASPER_(S[23]8)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "VIA[- _](T7|T8D)-3G" , model : "VIA $1 3G" , } , Model { regex : "VIA[- _](T7D|S[13]0|[LS]8|S7|T17_M|T1[07]|T7|T8B|S1[78])(?:[);/ ]|$)" , model : "VIA $1" , } ,]) , }) , ("Google" , Brand { regex : "Nexus|GoogleTV|Glass(?<!Browser)|CrKey[^a-z0-9]|Pixel(?: Build|\\))|Pixel (?:XL|C|[2-5]|[2-4] XL)|Google 2XL|G011A" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Glass" , model : "Glass" , } , Model { regex : "Galaxy Nexus" , model : "Galaxy Nexus" , } , Model { regex : "(Nexus (?:S|4|5X?|One))" , model : "$1" , } , Model { regex : "(Nexus (?:6P?))" , model : "$1" , } , Model { regex : "(Nexus (?:7|9|10))" , model : "$1" , } , Model { regex : "CrKey[^a-z0-9]" , model : "Chromecast" , } , Model { regex : "GoogleTV" , model : "GoogleTV" , } , Model { regex : "Pixel(?: Build|\\))" , model : "Pixel" , } , Model { regex : "Pixel XL" , model : "Pixel XL" , } , Model { regex : "Pixel 3 XL" , model : "Pixel 3 XL" , } , Model { regex : "Pixel 2 XL" , model : "Pixel 2 XL" , } , Model { regex : "Pixel 3a XL" , model : "Pixel 3a XL" , } , Model { regex : "Pixel 3a" , model : "Pixel 3a" , } , Model { regex : "Pixel 4 XL" , model : "Pixel 4 XL" , } , Model { regex : "Pixel 4a \\(5G\\)" , model : "Pixel 4a (5G)" , } , Model { regex : "pixel 4a" , model : "Pixel 4a" , } , Model { regex : "G011A" , model : "Pixel 2" , } , Model { regex : "Google 2XL" , model : "Pixel 2 XL" , } , Model { regex : "pixel ([2-5])" , model : "Pixel $1" , } , Model { regex : "Pixel C" , model : "Pixel C" , } ,]) , }) , ("Mpman" , Brand { regex : "(?:MPQC|MPDC)[0-9]+|PH(?:150|340|350|360|451|500|520|544|604)|(?:MID(?:7C|74C|82C|84C|801|811|701|711|170|77C|43C|102C|103C|104C|114C)|MP100i OCTA|MP(?:843|717|718|1010|7007|7008|843|888|959|969|QCG(1[01]|77)(?: 3G)?)|MGP7)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "((?:MPQC|MPDC)[0-9]+[^/;)]+)(?: Build|\\))" , model : "$1" , } , Model { regex : "MP100i OCTA(?:[);/ ]|$)" , model : "MP100i OCTA" , } , Model { regex : "MPQCG10(?: 3G)?(?:[);/ ]|$)" , model : "MPQCG10 3G" , } , Model { regex : "(MID(?:7C|74C|82C|84C|801|811|701|711|170|77C|43C|102C|103C|104C|114C)|MP(?:843|717|718|1010|7007|7008|843|888|959|969|QCG(?:11|77))|MGP7)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "(PH(?:150|340|350|360|451|500|520|544|604))" , model : "$1" , } ,]) , }) , ("Pixelphone" , Brand { regex : "Pixelphone S1(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("S1") , models : None , }) , ("Microsoft" , Brand { regex : "KIN\\.(One|Two)|RM-(?:1010|1031|106[57]|107[23467]|1089|109[02]|1096|1099|1109|111[348]|1127|1141|115[24]|994)|Microsoft; Lumia|Lumia (?:1530|1320|950|850|650|640|550|535|435)|Corporation/Surface" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "KIN\\.(One|Two)" , model : "Kin $1" , } , Model { regex : "RM-1099|Lumia 430" , model : "Lumia 430" , } , Model { regex : "RM-1114|Lumia 435" , model : "Lumia 435" , } , Model { regex : "RM-1031|Lumia 532" , model : "Lumia 532" , } , Model { regex : "Lumia 535 Dual SIM" , model : "Lumia 535 Dual SIM" , } , Model { regex : "RM-109[02]|RM-1089|Lumia 535" , model : "Lumia 535" , } , Model { regex : "RM-1141|Lumia 540" , model : "Lumia 540" , } , Model { regex : "RM-1127|Lumia 550" , model : "Lumia 550" , } , Model { regex : "RM-1010" , model : "Lumia 638" , } , Model { regex : "Lumia 640 XL LTE" , model : "Lumia 640 XL LTE" , } , Model { regex : "RM-106[57]|RM-1096|Lumia 640 XL" , model : "Lumia 640 XL" , } , Model { regex : "Lumia 640 LTE Dual SIM" , model : "Lumia 640 LTE Dual SIM" , } , Model { regex : "Lumia 640 LTE" , model : "Lumia 640 LTE" , } , Model { regex : "Lumia 640 Dual SIM" , model : "Lumia 640 Dual SIM" , } , Model { regex : "RM-1109|RM-1113|RM-107[23467]|Lumia 640" , model : "Lumia 640" , } , Model { regex : "RM-1154|Lumia 650" , model : "Lumia 650" , } , Model { regex : "RM-1152" , model : "Lumia 650 SS" , } , Model { regex : "Lumia 850" , model : "Lumia 850" , } , Model { regex : "Lumia 950 XL Dual SIM" , model : "Lumia 950 XL Dual SIM" , } , Model { regex : "Lumia 950 XL" , model : "Lumia 950 XL" , } , Model { regex : "Lumia 950 Dual SIM" , model : "Lumia 950 Dual SIM" , } , Model { regex : "Lumia 950|RM-1118" , model : "Lumia 950" , } , Model { regex : "RM-994|Lumia 1320" , model : "Lumia 1320" , } , Model { regex : "Lumia 1530" , model : "Lumia 1530" , } , Model { regex : "Surface Book 3" , model : "Surface Book 3" , } , Model { regex : "Surface Pro( [34])?" , model : "Surface Pro$1" , } , Model { regex : "Microsoft; Lumia ([^;/)]+)(?:[;/)]|$)" , model : "Lumia $1" , } ,]) , }) , ("Xoro" , Brand { regex : "(?:TelePAD(?:795|731|1032|10A3|7A3)|Era 2X|HMT(?:390Q?|400)|HST 260)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "TelePAD(7|10)A3 4G(?:[);/ ]|$)" , model : "TelePad $1 A3 4G" , } , Model { regex : "TelePAD(795|731|1032)(?:[);/ ]|$)" , model : "TelePad $1" , } , Model { regex : "HMT(390Q?|400)(?:[);/ ]|$)" , model : "HMT $1" , } , Model { regex : "HST 260(?:[);/ ]|$)" , model : "HST 260" , } , Model { regex : "(Era 2X)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("NEXON" , Brand { regex : "NEXON (X[12589])(?:[);/ ]|$)" , device : Some ("tv") , model : Some ("$1") , models : None , }) , ("TEENO" , Brand { regex : "TEENO" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "TEENO[_ ](S9|A1|S11)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Anry" , Brand { regex : "ANRY-(RS10|[SX]20)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Necnot" , Brand { regex : "(M002[DGQK]-2|M002N|M002N-3T|M002W-2T|6M-3T)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("ECS" , Brand { regex : "(?:TA10CA3|TM105A?|TR10[CR]S1)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "TA10CA3(?:[);/ ]|$)" , model : "TA10CA3" , } , Model { regex : "(TR10[CR]S1)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "TM105A(?:[);/ ]|$)" , model : "TM105A" , } , Model { regex : "TM105(?:[);/ ]|$)" , model : "TM105" , } ,]) , }) , ("Bluboo" , Brand { regex : "Bluboo|Xfire|Picasso 4G|Maya Build" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Maya Build" , model : "Maya" , } , Model { regex : "Xfire2" , model : "Xfire 2" , } , Model { regex : "Picasso 4G" , model : "Picasso 4G" , } , Model { regex : "Xfire" , model : "Xfire" , } , Model { regex : "Bluboo[ _-]?([^;/)]+) Build" , model : "$1" , } , Model { regex : "Bluboo[ _-]?([^;/)]+)" , model : "$1" , } ,]) , }) , ("Celkon" , Brand { regex : "Celkon|Android 7.+ UNIQ(?: Build|[);])|(?:Millennia Hero|2GBStar|2GBXpress|CliQ2|Campus Prime)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Celkon[ _*](C[78]20)" , model : "$1" , } , Model { regex : "Celkon[_ ]4G_TAB-8" , model : "4G Tab 8" , } , Model { regex : "Millennia Hero" , model : "Millennia Hero" , } , Model { regex : "2GBStar" , model : "2GB Star" , } , Model { regex : "2GBXpress" , model : "2GB Xpress" , } , Model { regex : "CliQ2(?:[);/ ]|$)" , model : "CliQ 2" , } , Model { regex : "Android 7.+ UniQ(?: Build|[);])" , model : "UniQ" , } , Model { regex : "(Campus Prime)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Celkon[ _*](CT[^;/]+) Build" , model : "$1" , } , Model { regex : "Celkon[ _*]([^;/]+) Build" , model : "$1" , } , Model { regex : "Celkon[\\. _*]([^;/\\)]+)[\\)/]" , model : "$1" , } ,]) , }) , ("Lemhoov" , Brand { regex : "Lemhoov" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Lemhoov[ _-]([^/;]+) Build" , model : "$1" , } ,]) , }) , ("High Q" , Brand { regex : "(ELT070[46]H|ELT0802H)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("WE" , Brand { regex : "WE (A[15]0|B3|F[12]0|E[12]|L[3469]|R[34]|V[34]|S1|X[13]|T1)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Lexibook" , Brand { regex : "(MFC[0-9]{3}[a-z]{2,})" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "MFC191FR" , model : "Tablet Ultra 3 XL" , } , Model { regex : "MFC045FR" , model : "TabTab" , } , Model { regex : "MFC163FR" , model : "Tablet Master 3" , } , Model { regex : "MFC142FR" , model : "Tablet Kids" , } , Model { regex : "MFC250FR" , model : "Tablet Junior" , } , Model { regex : "MFC270FR" , model : "Tablet Junior Power Touch" , } , Model { regex : "MFC280FR" , model : "Tablet Junior 2" , } , Model { regex : "MFC156FR" , model : "Tablet One" , } , Model { regex : "MFC155FR" , model : "Tablet Master" , } , Model { regex : "MFC157FR" , model : "Tablet Master 2" , } , Model { regex : "MFC17[05]FR" , model : "Tablet Ultra" , } , Model { regex : "MFC375FR" , model : "Tablet Ultra 2" , } , Model { regex : "MFC162FR" , model : "Power Tablet" , } , Model { regex : "MFC180FR" , model : "Tablet Advanced" , } , Model { regex : "MFC181FR" , model : "Tablet Advanced 2" , } , Model { regex : "MFC500FR" , model : "Tablet XL" , } , Model { regex : "MFC190BBFR" , model : "Barbie Tablet" , } , Model { regex : "MFC195DCFR" , model : "Tablet Disney Cars HD" , } , Model { regex : "MFC195FUFR" , model : "Furby Tablet" , } , Model { regex : "MFC195DPFR" , model : "Tablet Disney Princesse HD" , } , Model { regex : "MFC140FR" , model : "LapTab" , } , Model { regex : "MFC141FR" , model : "LapTab 2" , } , Model { regex : "(MFC[0-9]{3}[a-z]{2,})" , model : "$1" , } ,]) , }) , ("Cat" , Brand { regex : "Cat ?(tablet|stargate|nova)|B15Q|CAT B35|CAT-B100" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "B15Q" , model : "B15Q" , } , Model { regex : "CAT B35" , model : "B35" , } , Model { regex : "Cat ?(?:tablet)? ?((?:Galactica|Nova|StarGate|PHOENIX)[^/;]*) Build" , model : "$1" , } , Model { regex : "Cat ?tablet" , model : "Nova" , } , Model { regex : "CAT-(B100)" , model : "$1" , } ,]) , }) , ("Pantech" , Brand { regex : "Pantech|P[GN]-|PT-[a-z0-9]{3,}|(?<!Winmax )TX[T]?[0-9]+|IM-[a-z0-9]+(?:[);/ ]|$)|ADR910L" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "ADR910L" , model : "Star Q" , } , Model { regex : "IM-A870K" , model : "Vega Iron" , } , Model { regex : "Pantech[ \\-]?([a-z0-9]+)" , model : "$1" , } , Model { regex : "Pantech_([a-z0-9\\-]+)" , model : "$1" , } , Model { regex : "(P[GTN]-[a-z0-9]+)" , model : "$1" , } , Model { regex : "(TX[T]?[0-9]+)" , model : "$1" , } , Model { regex : "(IM-[a-z0-9]+)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Fourel" , Brand { regex : "(?:EASYSMARTM3|EasySmart M2)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "EASY ?SMART ?M([32])" , model : "Easy Smart M$1" , } ,]) , }) , ("Takara" , Brand { regex : "(MID211H)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Connectce" , Brand { regex : "(?:CP6001A)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("Connect Core 6") , models : None , }) , ("NewsMy" , Brand { regex : "(CarPad-(?:II|III)-P)(?:[);/ ]|$)" , device : Some ("car browser") , model : Some ("$1") , models : None , }) , ("Videocon" , Brand { regex : "Videocon[_ \\-]|(?:VT75C|V406018|V512930|V50(?:2430|3630|5024|5430|4630|5[98]20)|Z45_(?:Dazzle|Amaze)|Z45Q Star|Z50 Nova)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Videocon_V1585" , model : "V1585" , } , Model { regex : "Videocon[_ \\-]([a-z0-9]+)" , model : "$1" , } , Model { regex : "VT75C(?:[);/ ]|$)" , model : "VT75C" , } , Model { regex : "V502430(?:[);/ ]|$)" , model : "Kryton 3" , } , Model { regex : "V505024(?:[);/ ]|$)" , model : "Kryton 22 Plus" , } , Model { regex : "V503630(?:[);/ ]|$)" , model : "Delite 11" , } , Model { regex : "V505920(?:[);/ ]|$)" , model : "Metal Pro 2" , } , Model { regex : "V505820(?:[);/ ]|$)" , model : "Metal Pro 1" , } , Model { regex : "V406018(?:[);/ ]|$)" , model : "Starr 100" , } , Model { regex : "V512930(?:[);/ ]|$)" , model : "Ultra 50" , } , Model { regex : "(V505430|V504630)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Z45_(Dazzle|Amaze)(?:[);/ ]|$)" , model : "Infinium Z45 $1" , } , Model { regex : "Z45Q Star(?:[);/ ]|$)" , model : "Infinium Z45Q Star" , } , Model { regex : "Z50 Nova(?:[);/ ]|$)" , model : "Infinium Z50 Nova" , } ,]) , }) , ("NorthTech" , Brand { regex : "(NT-TP10)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("TouchPad 10.0\"") , models : None , }) , ("Cube" , Brand { regex : "(<!myPhone ?)Cube|(U[0-9]+GT|K8GT)|(?:T8-PLUSM?S?|T8PLUSML|I1-TF[BD]?|I1-TC|i1002S|Iwork10 Flagship|iwork10 Pro)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "U27GT" , model : "Talk 8" , } , Model { regex : "(?:T8-PLUSM?S?|T8PLUSML)(?:[);/ ]|$)" , model : "T8 Ultimate" , } , Model { regex : "U55GT" , model : "Talk 79" , } , Model { regex : "U65GT" , model : "Talk 9X" , } , Model { regex : "I1-TF[BD]?(?:[);/ ]|$)" , model : "iWork 8 Air" , } , Model { regex : "I1-TC(?:[);/ ]|$)" , model : "iWork 8 Ultimate" , } , Model { regex : "(?:i1002S|iwork10 Pro)(?:[);/ ]|$)" , model : "iWork 10 Pro" , } , Model { regex : "Iwork10 Flagship(?:[);/ ]|$)" , model : "iWork 10 Flagship" , } , Model { regex : "(U[0-9]+GT[^;/]*) Build" , model : "$1" , } , Model { regex : "(U[0-9]+GT(?:[0-9]|[\\-_][a-z]+)?)" , model : "$1" , } , Model { regex : "(K8GT)" , model : "$1" , } ,]) , }) , ("CORN" , Brand { regex : "CORN " , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "CORN R20" , model : "R20" , } ,]) , }) , ("Raspberry" , Brand { regex : "Raspberry (Pi [0-9]+)(?:[);/ ]|$)" , device : Some ("peripheral") , model : Some ("$1") , models : None , }) , ("MyTab" , Brand { regex : "MyTAB[ _-](?:8 MINI Dual Core|U55GT)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "MyTAB[ _-]8 MINI Dual Core(?:[);/ ]|$)" , model : "8 Mini Dual Core" , } , Model { regex : "MyTAB-U55GT(?:[);/ ]|$)" , model : "U55GT" , } ,]) , }) , ("Vsmart" , Brand { regex : "(?:Joy [123]\\+|Joy [34]|Active 1\\+|Bee 3|Active 3)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Joy ([123])\\+(?:[);/ ]|$)" , model : "Joy $1 Plus" , } , Model { regex : "Joy ([34])(?:[);/ ]|$)" , model : "Joy $1" , } , Model { regex : "Active 1\\+(?:[);/ ]|$)" , model : "Active 1 Plus" , } , Model { regex : "Bee 3(?:[);/ ]|$)" , model : "Bee 3" , } , Model { regex : "Active 3(?:[);/ ]|$)" , model : "Active 3" , } ,]) , }) , ("Q-Touch" , Brand { regex : "( Q09|QS701|Q05A)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("HP" , Brand { regex : "Hewlett-Packard|HP/HP|HP EliteBook 820|TouchPad/\\d+\\.\\d+|hp-tablet|HP ?iPAQ|webOS.*P160U|HP (?:Pro )?Slate|HP [78]|HP 10 Plus|Compaq [7|8]|HP; [^;/)]+" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "HP Slate 6 Voice Tab" , model : "Slate 6 VoiceTab" , } , Model { regex : "HP 10 Plus" , model : "10 Plus" , } , Model { regex : "HP ([78][^)/;]*)(?: Build|\\))" , model : "Slate $1" , } , Model { regex : "Compaq ([78][^/;]*) Build" , model : "Compaq $1" , } , Model { regex : "HP Pro Slate 8" , model : "Pro Slate 8" , } , Model { regex : "HP Slate ?(.+) Build" , model : "Slate $1" , } , Model { regex : "HP Slate ?([0-9]+)" , model : "Slate $1" , } , Model { regex : "TouchPad/(\\d+\\.\\d+)|hp-tablet" , model : "TouchPad" , } , Model { regex : "HP; ([^;/)]+)" , model : "$1" , } , Model { regex : "HP ?iPAQ ?([a-z0-9]+)" , model : "iPAQ $1" , } , Model { regex : "webOS.*(P160U)" , model : "Veer" , } , Model { regex : "HP ProBook (6560b)" , model : "ProBook $1" , } , Model { regex : "HP EliteBook 820 G2" , model : "EliteBook 820 G2" , } , Model { regex : "Z240 Tower Workstation" , model : "Z240 Tower Workstation" , } ,]) , }) , ("M-Tech" , Brand { regex : "(?:EROS 4G|MTECH ACE9)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "EROS 4G" , model : "Eros 4G" , } , Model { regex : "ACE9" , model : "Ace 9" , } ,]) , }) , ("Tele2" , Brand { regex : "Tele2[ _]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Tele2[ _](Mi[dn]i)[ _]1.1(?:[);/ ]|$)" , model : "$1 1.1" , } , Model { regex : "Tele2[ _]Midi[ _]2.0(?:[);/ ]|$)" , model : "Midi 2.0" , } , Model { regex : "Tele2[ _]((?:Maxi|Midi)(?:[_ ](?:Plus|LTE))?)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Tele2[ _](Mi[dn]i)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("NG Optics" , Brand { regex : "(NG3128HD)(?:[);/ ]|$)" , device : Some ("tv") , model : Some ("$1") , models : None , }) , ("Sugar" , Brand { regex : "SUGAR[ _]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "SUGAR Y([78]) MAX(?:[);/ ]|$)" , model : "Y$1 Max" , } , Model { regex : "SUGAR F7 Mini(?:[);/ ]|$)" , model : "F7 Mini" , } , Model { regex : "SUGAR (C[12]1|C1[23]|S11|C11s|[SF]20s?|[YF]11|[YFS]9|C[679]|[FY]7|Y12s|Y1[256]|P1)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Sky" , Brand { regex : "(?:SKY|Elite|Fuego)[_ ][3-7]\\.[05](?:[A-Z]{1,2})?|Elite[ _](?:5_0T|M45|[45]T|45T|GO|M5Plus|T55|T[46]|[AB]5|5_5_Octa|[BC]55)|Platinum[_ ](?:5.0M|5\\.5C|[56]\\.[05]\\+?|M5|[ABCM]4|[ACG]55|[ABDEFG]5|A57|P9|X|UNO|VIEW2|O|4\\.0|4_0Plus)|PLATINUMVIEW|SKY[ _](?:55M|Pro_III)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Platinum[_ ](?:5\\.0M|M5)" , model : "Platinum 5.0M" , } , Model { regex : "Platinum[_ ]5\\.5C" , model : "Platinum 5.5C" , } , Model { regex : "Platinum[_ ]([56])\\.([05])\\+" , model : "Platinum $1.$2 Plus" , } , Model { regex : "Platinum_4_0Plus" , model : "Platinum 4.0 Plus" , } , Model { regex : "Platinum[ _]4\\.0" , model : "Platinum 4.0" , } , Model { regex : "Platinum[_ ](P9) Pro(?:[);/ ]|$)" , model : "Platinum $1 Pro" , } , Model { regex : "Platinum[_ ]([ABCM]4|[ACG]55|[ABDEFG]5|A57|P9|X|UNO|O|6\\.0)(?:[);/ ]|$)" , model : "Platinum $1" , } , Model { regex : "Platinum[_ ]?VIEW(2)?(?:[);/ ]|$)" , model : "Platinum View$1" , } , Model { regex : "Elite_5_5_Octa" , model : "Elite 5.5 Octa" , } , Model { regex : "Elite M5Plus" , model : "Elite M5 Plus" , } , Model { regex : "Elite[ _](M45|Go|[45]T|T[46]|T55|[AB]5|[ABC]55|45T)(?:[);/ ]|$)" , model : "Elite $1" , } , Model { regex : "Elite[_ ]([3-7])[\\._]([05](?:[A-Z]{1,2})?\\+?)" , model : "Elite $1.$2" , } , Model { regex : "Fuego[_ ]([3-7]\\.[05](?:[A-Z]{1,2})?\\+?)" , model : "Fuego $1" , } , Model { regex : "SKY_Pro_III" , model : "Pro III" , } , Model { regex : "SKY 55M" , model : "55M" , } , Model { regex : "SKY[_ ]([3-7]\\.[05](?:[A-Z]{1,2})?)" , model : "$1" , } ,]) , }) , ("Lenco" , Brand { regex : "Lenco ([^/;]*) Build" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Vivo" , Brand { regex : "((?:VIV-|BBG-)?(?<!FBCR/)vivo(?!(?:Browser)))|(?:V1730(D[AT]|GA)|V18(18CA|01A0|13B[AT]|18T|09[AT]|1[346][AT]|[13]8[AT]|14A|24[B]?A|2[19][AT]|3[12][AT]|36[AT])|V1731CA|V1732[AT]|V1818CT|V19[01]1[AT]|V1932[AT]|V191[3469][AT]|V192[1348]A|V193[04]A|V194[15]A|V1938CT|V1955A|V1938T|V1730EA|V19[26]2A|V196[35]A|V198[16]A|V1936A[L]?|V19[59]0A|V200[125]A|1819|V201[12]A|V202[0345]C?A|V202[235-9]|V205[47]A|V203[026]|V2031[E]?A|V203[46]A|V204[013]|V204[6789]A|V20(6[158]|99|5[56]|66[B]?|7[23]|80)A|X50 Pro\\+|I1927)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "V1824[B]?A(?:[);/ ]|$)" , model : "iQOO" , } , Model { regex : "V1955A(?:[);/ ]|$)" , model : "iQOO 3" , } , Model { regex : "I1927(?:[);/ ]|$)" , model : "iQOO 3 5G" , } , Model { regex : "V2049A(?:[);/ ]|$)" , model : "iQOO 7" , } , Model { regex : "V1922A(?:[);/ ]|$)" , model : "iQOO Pro" , } , Model { regex : "V1916A(?:[);/ ]|$)" , model : "iQOO Pro 5G" , } , Model { regex : "V1914A(?:[);/ ]|$)" , model : "iQOO Neo" , } , Model { regex : "V1981A(?:[);/ ]|$)" , model : "iQOO Neo 3" , } , Model { regex : "V1936A[L]?(?:[);/ ]|$)" , model : "iQOO Neo 855" , } , Model { regex : "V2055A(?:[);/ ]|$)" , model : "iQOO Neo 5" , } , Model { regex : "V1986A(?:[);/ ]|$)" , model : "iQOO Z1" , } , Model { regex : "V2012A(?:[);/ ]|$)" , model : "iQOO Z1x" , } , Model { regex : "V2073A(?:[);/ ]|$)" , model : "iQOO Z3" , } , Model { regex : "V1919A(?:[);/ ]|$)" , model : "iQOO Z5x" , } , Model { regex : "V2023A(?:[);/ ]|$)" , model : "iQOO U1" , } , Model { regex : "V2065A(?:[);/ ]|$)" , model : "iQOO U1x" , } , Model { regex : "V2061A(?:[);/ ]|$)" , model : "iQOO U3" , } , Model { regex : "V2024A(?:[);/ ]|$)" , model : "iQOO 5" , } , Model { regex : "V2025A(?:[);/ ]|$)" , model : "iQOO 5 Pro" , } , Model { regex : "V2025(?:[);/ ]|$)" , model : "V20" , } , Model { regex : "V2040(?:[);/ ]|$)" , model : "V20 (2021)" , } , Model { regex : "vivo 1805(?:[);/ ]|$)" , model : "Nex" , } , Model { regex : "V1923A(?:[);/ ]|$)" , model : "Nex 3" , } , Model { regex : "V1924A(?:[);/ ]|$)" , model : "Nex 3 5G" , } , Model { regex : "V1950A(?:[);/ ]|$)" , model : "Nex 3S" , } , Model { regex : "V1821[AT](?:[);/ ]|$)" , model : "Nex Dual Display" , } , Model { regex : "Vivo ONE(?:[);/ ]|$)" , model : "One" , } , Model { regex : "V1831[AT](?:[);/ ]|$)" , model : "S1" , } , Model { regex : "V1832[AT](?:[);/ ]|$)" , model : "S1 Pro" , } , Model { regex : "V1932[AT](?:[);/ ]|$)" , model : "S5" , } , Model { regex : "V1962A(?:[);/ ]|$)" , model : "S6 5G" , } , Model { regex : "V2020C?A(?:[);/ ]|$)" , model : "S7" , } , Model { regex : "V2031EA(?:[);/ ]|$)" , model : "S7e" , } , Model { regex : "V2080A(?:[);/ ]|$)" , model : "S7t" , } , Model { regex : "V2072A(?:[);/ ]|$)" , model : "S9 (2021)" , } , Model { regex : "V2048A(?:[);/ ]|$)" , model : "S9e" , } , Model { regex : "V1941A(?:[);/ ]|$)" , model : "U3" , } , Model { regex : "V1928A(?:[);/ ]|$)" , model : "U3X" , } , Model { regex : "vivo 1804(?:[);/ ]|$)" , model : "V11 Pro" , } , Model { regex : "vivo 1806(?:[);/ ]|$)" , model : "V11i" , } , Model { regex : "1819(?:[);/ ]|$)" , model : "V15" , } , Model { regex : "vivo 1818(?:[);/ ]|$)" , model : "V15 Pro" , } , Model { regex : "vivo 1909(?:[);/ ]|$)" , model : "V17 Pro" , } , Model { regex : "V2022(?:[);/ ]|$)" , model : "V20 SE" , } , Model { regex : "(?:VIV-|BBG-)?vivo[ _]1601(?:[);/ ]|$)" , model : "V5" , } , Model { regex : "vivo 1609(?:[);/ ]|$)" , model : "V5 Lite" , } , Model { regex : "vivo 1611(?:[);/ ]|$)" , model : "V5 Plus" , } , Model { regex : "vivo (1713|1612)(?:[);/ ]|$)" , model : "V5s" , } , Model { regex : "vivo 1718(?:[);/ ]|$)" , model : "V7" , } , Model { regex : "vivo 1716(?:[);/ ]|$)" , model : "V7 Plus" , } , Model { regex : "vivo 1723(?:[);/ ]|$)" , model : "V9" , } , Model { regex : "vivo 1727(?:[);/ ]|$)" , model : "V9 Youth" , } , Model { regex : "vivo 1721(?:[);/ ]|$)" , model : "X20" , } , Model { regex : "X20Plus(?:[);/ ]|$)" , model : "X20 Plus" , } , Model { regex : "vivo 1725(?:[);/ ]|$)" , model : "X21" , } , Model { regex : "V1814[AT](?:[);/ ]|$)" , model : "X21S" , } , Model { regex : "V1809[AT](?:[);/ ]|$)" , model : "X23" , } , Model { regex : "V1816[AT](?:[);/ ]|$)" , model : "X23" , } , Model { regex : "V18(38|29)[AT](?:[);/ ]|$)" , model : "X27" , } , Model { regex : "V1836[AT](?:[);/ ]|$)" , model : "X27 Pro" , } , Model { regex : "V1938CT(?:[);/ ]|$)" , model : "X30" , } , Model { regex : "V1938T(?:[);/ ]|$)" , model : "X30 Pro" , } , Model { regex : "V2001A(?:[);/ ]|$)" , model : "X50" , } , Model { regex : "V2005A(?:[);/ ]|$)" , model : "X50 Pro" , } , Model { regex : "(?:V2011A|X50 Pro\\+)(?:[);/ ]|$)" , model : "X50 Pro Plus" , } , Model { regex : "V2046A(?:[);/ ]|$)" , model : "X60" , } , Model { regex : "V2047A(?:[);/ ]|$)" , model : "X60 Pro" , } , Model { regex : "V2056A(?:[);/ ]|$)" , model : "X60 Pro Plus" , } , Model { regex : "X9Plus(?:[);/ ]|$)" , model : "X9 Plus" , } , Model { regex : "vivo 1902(?:[);/ ]|$)" , model : "Y17" , } , Model { regex : "vivo 1915(?:[);/ ]|$)" , model : "Y19" , } , Model { regex : "V202[79](?:[);/ ]|$)" , model : "Y20" , } , Model { regex : "V2028(?:[);/ ]|$)" , model : "Y11s" , } , Model { regex : "V2043(?:[);/ ]|$)" , model : "Y20 (2021)" , } , Model { regex : "V2041(?:[);/ ]|$)" , model : "Y72 5G" , } , Model { regex : "V2032(?:[);/ ]|$)" , model : "Y20i" , } , Model { regex : "V2023(?:[);/ ]|$)" , model : "V20 SE" , } , Model { regex : "V1901[AT](?:[);/ ]|$)" , model : "Y3" , } , Model { regex : "V1930A(?:[);/ ]|$)" , model : "Y3 Standard" , } , Model { regex : "V203[46]A(?:[);/ ]|$)" , model : "Y30" , } , Model { regex : "V2099A(?:[);/ ]|$)" , model : "Y30 (2021)" , } , Model { regex : "V2066[B]?A(?:[);/ ]|$)" , model : "Y30g" , } , Model { regex : "V2036(?:[);/ ]|$)" , model : "Y31" , } , Model { regex : "V2068A(?:[);/ ]|$)" , model : "Y31s" , } , Model { regex : "V1934A(?:[);/ ]|$)" , model : "Y5s" , } , Model { regex : "V1965A(?:[);/ ]|$)" , model : "Y50" , } , Model { regex : "V2030(?:[);/ ]|$)" , model : "Y51" , } , Model { regex : "V2054A(?:[);/ ]|$)" , model : "Y31s" , } , Model { regex : "V2057A(?:[);/ ]|$)" , model : "Y52s" , } , Model { regex : "vivo 1606(?:[);/ ]|$)" , model : "Y53i" , } , Model { regex : "vivo 1603(?:[);/ ]|$)" , model : "Y55l" , } , Model { regex : "vivo 1610(?:[);/ ]|$)" , model : "Y55s" , } , Model { regex : "vivo 1719(?:[);/ ]|$)" , model : "Y65" , } , Model { regex : "vivo 1714(?:[);/ ]|$)" , model : "Y69" , } , Model { regex : "V2002A(?:[);/ ]|$)" , model : "Y70s" , } , Model { regex : "vivo 1724(?:[);/ ]|$)" , model : "Y71" , } , Model { regex : "vivo 1801(?:[);/ ]|$)" , model : "Y71i" , } , Model { regex : "V1731CA(?:[);/ ]|$)" , model : "Y73" , } , Model { regex : "V2031A(?:[);/ ]|$)" , model : "Y73s" , } , Model { regex : "V1913[AT](?:[);/ ]|$)" , model : "Y7s" , } , Model { regex : "vivo 180([38]|8i)(?:[);/ ]|$)" , model : "Y81" , } , Model { regex : "vivo 1812(?:[);/ ]|$)" , model : "Y81i" , } , Model { regex : "V1732[AT](?:[);/ ]|$)" , model : "Y81s" , } , Model { regex : "vivo 1726(?:[);/ ]|$)" , model : "Y83 Pro" , } , Model { regex : "V1730EA(?:[);/ ]|$)" , model : "Y89" , } , Model { regex : "vivo 181[17](?:[);/ ]|$)" , model : "Y91" , } , Model { regex : "V1945A(?:[);/ ]|$)" , model : "Y9s" , } , Model { regex : "V2026(?:[);/ ]|$)" , model : "Y12s" , } , Model { regex : "vivo 18(16|20)(?:[);/ ]|$)" , model : "Y91i" , } , Model { regex : "(V1818[AT]|vivo 181[45])(?:[);/ ]|$)" , model : "Y93" , } , Model { regex : "V1818C[AT](?:[);/ ]|$)" , model : "Y93s" , } , Model { regex : "vivo 1807(?:[);/ ]|$)" , model : "Y95" , } , Model { regex : "V1813[AT](?:[);/ ]|$)" , model : "Y97" , } , Model { regex : "V1801A0(?:[);/ ]|$)" , model : "Z1" , } , Model { regex : "V1730D[AT](?:[);/ ]|$)" , model : "Z1i" , } , Model { regex : "vivo 1917(?:[);/ ]|$)" , model : "Z1x" , } , Model { regex : "V1813B[AT](?:[);/ ]|$)" , model : "Z3" , } , Model { regex : "V1730GA(?:[);/ ]|$)" , model : "Z3x" , } , Model { regex : "V1921A(?:[);/ ]|$)" , model : "Z5" , } , Model { regex : "V1911A(?:[);/ ]|$)" , model : "Z5x" , } , Model { regex : "V1990A(?:[);/ ]|$)" , model : "Z5x (2020)" , } , Model { regex : "V1963A(?:[);/ ]|$)" , model : "Z6" , } , Model { regex : "(?:VIV-|BBG-)?vivo[ _]([^/;]+) Build" , model : "$1" , } , Model { regex : "(?:VIV-|BBG-)?vivo[ _]([^);/]+)(?:[);/]|$)" , model : "$1" , } ,]) , }) , ("F150" , Brand { regex : "Bison2021(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("B2021") , models : None , }) , ("Evertek" , Brand { regex : "(Ever(?:Glory|Shine|Miracle|Mellow|Classic|Trendy|Fancy|Vivid|Slim|Glow|Magic|Smart|Star)[^/;]*) Build|E70[25]0HD|E805[01]HD|E9054HD|E8050HG|E7914HG" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(E70[25]0HD|E805[01]HD|E9054HD|E8050HG|E7914HG)" , model : "Everpad $1" , } , Model { regex : "(Ever(?:Glory|Shine|Miracle|Mellow|Classic|Trendy|Fancy|Vivid|Slim|Glow|Magic|Smart|Star)[^/;]*) Build" , model : "$1" , } ,]) , }) , ("iBrit" , Brand { regex : "IBRIT_|(?:SI5[12])(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "IBRIT_I([57])(?:[);/ ]|$)" , model : "I$1" , } , Model { regex : "iBRIT_POWER6(?:[);/ ]|$)" , model : "Power 6" , } , Model { regex : "iBRIT_Speed Pro(?:[);/ ]|$)" , model : "Speed Pro" , } , Model { regex : "SI51(?:[);/ ]|$)" , model : "Speed" , } , Model { regex : "SI52(?:[);/ ]|$)" , model : "Speed Plus" , } ,]) , }) , ("Andowl" , Brand { regex : "ANDOWL-(Q[45])(?:[);/ ]|$)" , device : Some ("tv") , model : Some ("$1") , models : None , }) , ("Jeka" , Brand { regex : "(?:JK(?:960|[71]03) 3G|JK702|JK101|JK[17]00 v2.0)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "JK(960|[71]03) 3G(?:[);/ ]|$)" , model : "JK $1 3G" , } , Model { regex : "JK(702|[17]00 v2.0|101)(?:[);/ ]|$)" , model : "JK $1" , } ,]) , }) , ("TB Touch" , Brand { regex : "Ignis [89]" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "Ignis ([89])" , model : "Ignis $1" , } ,]) , }) , ("EBEST" , Brand { regex : "EBEST" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "EBEST[ _-]?([^;/)]+) Build" , model : "$1" , } , Model { regex : "EBEST[ _-]?([^;/)]+)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Panacom" , Brand { regex : "T-i708D" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "T-i708D" , model : "T-i708D" , } ,]) , }) , ("eSTAR" , Brand { regex : "eSTAR[_ ](?:Grand|GO\\!?|Zoom Quad|Gemini|MINI[_ ]3G|BEAUTY|MOON)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "eSTAR (Grand|GO\\!?) (HD Intel|IPS Intel|IPS|HD|Intel) Quad Core 3G" , model : "$1 $2 Quad Core 3G" , } , Model { regex : "eSTAR (Zoom Quad|Gemini|GO)" , model : "$1" , } , Model { regex : "eSTAR GRAND HD quad core( [34]G)?" , model : "Grand HD Quad Core$1" , } , Model { regex : "eSTAR GRAND" , model : "Grand" , } , Model { regex : "eSTAR BEAUTY HD Quad core" , model : "Beauty HD Quad Core" , } , Model { regex : "eSTAR MOON HD Quad core" , model : "Moon HD Quad Core 3G" , } , Model { regex : "eSTAR BEAUTY 2 HD Quad core" , model : "Beauty 2 HD Quad Core" , } , Model { regex : "eSTAR[_ ]MINI[_ ]3G" , model : "Mini 3G" , } ,]) , }) , ("Forstar" , Brand { regex : "Amosta ?3G5" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Amosta ?3G5" , model : "Amosta 3G5" , } ,]) , }) , ("FMT" , Brand { regex : "(?:16M4HI105024|FMT-NM7058-02|176HS1050(?:232|531)|175WT1050231|175HS1050231|175FT1050241)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "16M4HI105024" , model : "Netsurfer Storm" , } , Model { regex : "FMT-NM7058-02" , model : "Flash" , } , Model { regex : "176HS1050531" , model : "Falcon" , } , Model { regex : "176HS1050232" , model : "B52" , } , Model { regex : "175WT1050231" , model : "Eagle" , } , Model { regex : "175HS1050231" , model : "Tomcat" , } , Model { regex : "175FT1050241" , model : "Viper" , } ,]) , }) , ("Concord" , Brand { regex : "Concord[ _-]|(?:Flyfix 6|C-721|Plus-7_C777|Plus_M19_C779|Plus-9_C778)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "M10" , model : "M10" , } , Model { regex : "Flyfix 6" , model : "Flyfix 6" , } , Model { regex : "C-721" , model : "Flyfix Q" , } , Model { regex : "Plus[-_]([79]|M19)_(C77[789])(?:[);/ ]|$)" , model : "Plus-$1 $2" , } ,]) , }) , ("Colors" , Brand { regex : "(?:Colors[ _](S(?:[19]|11)|P70|P[456]5|P32|E15|P50 Plus)|Pride_1A|P52_Pride5C|P90_Pride5X)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Pride_1A(?:[);/ ]|$)" , model : "Pride 1A" , } , Model { regex : "P52_Pride5C(?:[);/ ]|$)" , model : "Pride 5C" , } , Model { regex : "P90_Pride5X(?:[);/ ]|$)" , model : "Pride 5X" , } , Model { regex : "Colors[ _](S(?:[19]|11)|P70|E15|P[456]5|P32|P50 Plus)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Kurio" , Brand { regex : "Kurio" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "Kurio[_ ]?(10S|7S)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Kurio[_ ]?Phone(?:[);/ ]|$)" , model : "Phone C14500" , } ,]) , }) , ("SunVan" , Brand { regex : "SUNVAN[ _\\-]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "SUNVAN[ _\\-]?([^/;]+) Build" , model : "$1" , } , Model { regex : "SUNVAN[ _\\-]?([^);/ ]+)" , model : "$1" , } ,]) , }) , ("MyWigo" , Brand { regex : "MyWigo " , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "City3" , model : "City 3" , } ,]) , }) , ("Sharp" , Brand { regex : "SHARP|SBM|SH-?[0-9]+[a-z]?(?:[);/ ]|$)|AQUOS|(?:SH-M0[14-9]|SH-M1[1-7](?:-y)?|S[357]-SH|SH-[MZ](10|01)|SH-[CL]02|SH-RM(?:1[125]|02)|[34]04SH|401SH|[45]02SH|306SH|[36]05SH|70[1246]SH|80[138]SH|90[1678]SH|50[3679]SH|SHL2[25]|SHV4[0-8]|SHV3[1-9](?:[-_]u)?|FS80(?:1[08]|32|28|0[29])|TG-L900S|NP601SH|403SH|603SH|SHF3[1-4]|SHV4[035][-_]u|SW001SH|SHG0[123]|X4-SH|A002SH|SH-A01|DM-01[JH]|SH-D01|SH-01FDQ|A001SH|606SH|FS801[56]|d-41A|NP80[567]SH|NP501SH|A00[34]SH|IS05)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "506SH(?:[);/ ]|$)" , model : "Aquos Xx3" , } , Model { regex : "603SH(?:[);/ ]|$)" , model : "Aquos Xx3 Mini" , } , Model { regex : "50[23]SH(?:[);/ ]|$)" , model : "Aquos Xx2" , } , Model { regex : "[34]04SH(?:[);/ ]|$)" , model : "Aquos Xx" , } , Model { regex : "606SH(?:[);/ ]|$)" , model : "Aquos ea" , } , Model { regex : "507SH(?:[);/ ]|$)" , model : "Android One" , } , Model { regex : "S3-SH(?:[);/ ]|$)" , model : "Android One S3" , } , Model { regex : "S5-SH(?:[);/ ]|$)" , model : "Android One S5" , } , Model { regex : "S7-SH(?:[);/ ]|$)" , model : "Android One S7" , } , Model { regex : "X4-SH(?:[);/ ]|$)" , model : "Android One X4" , } , Model { regex : "SH-M04(?:[);/ ]|$)" , model : "Aquos SH-M04" , } , Model { regex : "SH-M05(?:[);/ ]|$)" , model : "Aquos Sense Lite" , } , Model { regex : "SH-M07(?:[);/ ]|$)" , model : "Aquos Sense Plus" , } , Model { regex : "A003SH(?:[);/ ]|$)" , model : "Aquos Sense 4 Basic" , } , Model { regex : "(?:SHG03|A004SH|SH-M17)(?:[);/ ]|$)" , model : "Aquos Sense 5G" , } , Model { regex : "SH-D01(?:[);/ ]|$)" , model : "Aquos D10" , } , Model { regex : "SH-M12(?:-y)?(?:[);/ ]|$)" , model : "Aquos S3 Dual SIM" , } , Model { regex : "(?:SH-[MZ]10|801SH)(?:[);/ ]|$)" , model : "Aquos Zero" , } , Model { regex : "(?:SH-M13|906SH)(?:[);/ ]|$)" , model : "Aquos Zero 2" , } , Model { regex : "(?:SHG02|A002SH)(?:[);/ ]|$)" , model : "Aquos Zero 5G Basic" , } , Model { regex : "SH-Z01(?:[);/ ]|$)" , model : "Aquos S2 (C10)" , } , Model { regex : "(?:SH-02E|SH-01[GH]|SH-04H)(?:[);/ ]|$)" , model : "Aquos Phone Zeta" , } , Model { regex : "SH-01FDQ(?:[);/ ]|$)" , model : "Dragon Quest" , } , Model { regex : "SH-?06D(?:[);/ ]|$)" , model : "Aquos Phone SH-06D" , } , Model { regex : "(SHL2[25]|SH-M01)(?:[);/ ]|$)" , model : "Aquos Phone $1" , } , Model { regex : "SH-L02(?:[);/ ]|$)" , model : "Aquos L2" , } , Model { regex : "(?:605SH|SH-03J|SHV39)(?:[);/ ]|$)" , model : "Aquos R" , } , Model { regex : "(?:605SH|SH-03J|SHV39)(?:[);/ ]|$)" , model : "Aquos R" , } , Model { regex : "(?:701SH|SHV41|SH-M06)(?:[);/ ]|$)" , model : "Aquos R Compact" , } , Model { regex : "(?:SH-M09|SHV42|706SH|SH-03K)(?:[);/ ]|$)" , model : "Aquos R2" , } , Model { regex : "803SH(?:[);/ ]|$)" , model : "Aquos R2 Compact" , } , Model { regex : "(?:908SH|SHG01|SH-M14)(?:[);/ ]|$)" , model : "Aquos R5G" , } , Model { regex : "SH-M16(?:[);/ ]|$)" , model : "Aquos S4 Plus" , } , Model { regex : "SH-M15(?:[);/ ]|$)" , model : "Aquos S4 SIM" , } , Model { regex : "SH-C02(?:[);/ ]|$)" , model : "Aquos V" , } , Model { regex : "(SHF3[1-4])(?:[);/ ]|$)" , model : "Aquos K $1" , } , Model { regex : "704SH(?:[);/ ]|$)" , model : "Simple Smartphone 4" , } , Model { regex : "(?:SH-02J|SH-04G)(?:[);/ ]|$)" , model : "Aquos Ever" , } , Model { regex : "SH-02H(?:[);/ ]|$)" , model : "Aquos Compact" , } , Model { regex : "30[56]SH(?:[);/ ]|$)" , model : "Aquos Crystal" , } , Model { regex : "402SH(?:[);/ ]|$)" , model : "Aquos Crystal X" , } , Model { regex : "403SH(?:[);/ ]|$)" , model : "Aquos Crystal 2" , } , Model { regex : "509SH(?:[);/ ]|$)" , model : "Aquos 3" , } , Model { regex : "NP601SH(?:[);/ ]|$)" , model : "Aquos 2" , } , Model { regex : "(?:SHV40|SHV3[24])(?:_u)?(?:[);/ ]|$)" , model : "Aquos S" , } , Model { regex : "702SH(?:[);/ ]|$)" , model : "Aquos S Basic" , } , Model { regex : "SHV3[183](?:[);/ ]|$)" , model : "Aquos S Mini" , } , Model { regex : "(?:FS8010|SH-M08|SHV43(?:-u)?|SH-01[KL])(?:[);/ ]|$)" , model : "Aquos S2" , } , Model { regex : "FS8016(?:[);/ ]|$)" , model : "Aquos S2 Plus" , } , Model { regex : "(?:SHV46|SH-R?M11|901SH)(?:[);/ ]|$)" , model : "Aquos S3 Plus" , } , Model { regex : "(?:SHV44|808SH|SH-04L|SH-03G)(?:[);/ ]|$)" , model : "Aquos R3" , } , Model { regex : "(?:FS8032|FS8015|SH-02M|SHV45(?:-U)?)(?:[);/ ]|$)" , model : "Aquos S3" , } , Model { regex : "FS8018(?:[);/ ]|$)" , model : "Aquos S3 Mini" , } , Model { regex : "(?:SHV48|907SH)(?:[);/ ]|$)" , model : "Aquos S3 Basic" , } , Model { regex : "SH-RM12(?:[);/ ]|$)" , model : "Aquos S3 Lite" , } , Model { regex : "SH-RM15(?:[);/ ]|$)" , model : "Aquos S4 Lite" , } , Model { regex : "SH-51A(?:[);/ ]|$)" , model : "Aquos R5G" , } , Model { regex : "SHV3[57](?:_u)?(?:[);/ ]|$)" , model : "Aquos U" , } , Model { regex : "TG-L900S(?:[);/ ]|$)" , model : "Luna S" , } , Model { regex : "SH-A01(?:[);/ ]|$)" , model : "B10" , } , Model { regex : "(?:FS8002|SHV47)(?:[);/ ]|$)" , model : "Z2" , } , Model { regex : "FS8009(?:[);/ ]|$)" , model : "Z3" , } , Model { regex : "FS8028(?:[);/ ]|$)" , model : "R1S" , } , Model { regex : "SHV36(?:[);/ ]|$)" , model : "Basio 2" , } , Model { regex : "SW001SH(?:[);/ ]|$)" , model : "Star Wars" , } , Model { regex : "SH-RM02" , model : "Aquos SH-RM02" , } , Model { regex : "401SH" , model : "Aquos 401SH" , } , Model { regex : "(DM-01[JH])" , model : "Disney Mobile $1" , } , Model { regex : "A001SH" , model : "Simple Sumaho 5" , } , Model { regex : "NP80[56]SH" , model : "Aquos Keitai 3" , } , Model { regex : "NP807SH" , model : "Aquos Keitai 10" , } , Model { regex : "NP501SH" , model : "Aquos Keitai" , } , Model { regex : "SH-08E(?:[);/ ]|$)" , model : "Sharp Aquos Pad" , } , Model { regex : "d-41A(?:[);/ ]|$)" , model : "dtab d-41A" , } , Model { regex : "(LC-(?:[0-9]{2})[a-z0-9]+)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "SHARP-AQUOS|AQUOSBrowser" , model : "Aquos Net Plus" , } , Model { regex : "SHARP[ \\-]([a-z0-9\\-]+)" , model : "$1" , } , Model { regex : "(?:SHARP|SBM)([a-z0-9]+)" , model : "$1" , } , Model { regex : "(SH-?[0-9]+[a-z]?|IS05)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Nvidia" , Brand { regex : "NVIDIA|SHIELD Tablet K1|SHIELD Android TV|Tegra(Note-P1640| Note 7)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "TegraNote-P1640" , model : "Tegra Note P1640" , } , Model { regex : "(SHIELD Tablet K1|Tegra Note 7)(?: Build|[;)])" , model : "$1" , } , Model { regex : "SHIELD Android TV" , model : "SHIELD Android TV" , } , Model { regex : "NVIDIA_SHIELD_PRO_2019" , model : "SHIELD TV Pro" , } , Model { regex : "NVIDIA Shield" , model : "SHIELD TV" , } ,]) , }) , ("Subor" , Brand { regex : "SUBOR[ _]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "SUBOR[ _](S5|2019)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "SUBOR[_ ]K10PLUS(?:[);/ ]|$)" , model : "K10 Plus" , } ,]) , }) , ("Noblex" , Brand { regex : "Noblex|NBX-" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(?:Noblex|NBX)[ _-]([^;/]+) Build" , model : "$1" , } , Model { regex : "(?:Noblex|NBX)[ _-]([^;/)]+)(?:[;/)]|$)" , model : "$1" , } ,]) , }) , ("Kingsun" , Brand { regex : "Kingsun[ _-]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Kingsun[ _-]([^;/]+) Build" , model : "$1" , } , Model { regex : "Kingsun[ -]((?!Build)[a-z0-9_-]+)" , model : "$1" , } ,]) , }) , ("FORME" , Brand { regex : "FORME[ _-]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "FORME[ _-]F520(?:[);/ ]|$)" , model : "Forever" , } , Model { regex : "FORME[ _-](A[35]7|R7S?|P6)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Twoe" , Brand { regex : "(?:TWOE[-_ ]E450R|F534L|F572L|E500A)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "TWOE[-_ ](E450R)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "(F534L|F572L|E500A)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Reach" , Brand { regex : "(Allure[_ ](?:Ultra(?:[_]Curve)?|Secure|Admire|Rise))(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Black Bear" , Brand { regex : "(B6 Master|B6 Note X)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Electroneum" , Brand { regex : "electroneum(M1)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("O+" , Brand { regex : "O\\+[ _](Air|Crunch|Ultra|Upsized|Venti|360 ALPHA PLUS 2.0)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "O\\+[ _](Crunch|Ultra 2.0|Ultra|Upsized|Venti 4G)" , model : "$1" , } , Model { regex : "O\\+_AIR" , model : "Air" , } , Model { regex : "O\\+ 360 ALPHA PLUS 2.0" , model : "360 Alpha Plus 2.0" , } ,]) , }) , ("RCA Tablets" , Brand { regex : "RCT([^;/]+) Build|RCA RLTP4028|RCT6513W87|RCT6973W43(?:MD)?|RCT6703W12|RCT(?:6A06P22|6603W47M7|6303W87(?:DK|M)|6773W22B|6203W46L|6873W42M|6K03W13)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "RCA RLTP4028" , model : "RLTP4028" , } , Model { regex : "RCT6513W87" , model : "Galileo Pro 11.5\"" , } , Model { regex : "RCT6873W42M" , model : "Voyager 7.0\"" , } , Model { regex : "RCT6973W43(?:MD)?" , model : "Voyager III 7.0\"" , } , Model { regex : "RCT6773W22B" , model : "Voyager II 7.0\"" , } , Model { regex : "RCT6703W12" , model : "Atlas 10.0\"" , } , Model { regex : "RCT6203W46L" , model : "Pro 10 Edition II" , } , Model { regex : "RCT6A06P22" , model : "Endeavor 10.0\" HD" , } , Model { regex : "RCT(?:6303W87(?:DK|M)|6K03W13)" , model : "Viking Pro 10.0\"" , } , Model { regex : "RCT6603W47M7" , model : "Viking II 10.0\"" , } , Model { regex : "RCT([^;/)]+)(?: Build|[;)])" , model : "RCT$1" , } ,]) , }) , ("YUHO" , Brand { regex : "YUHO_" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "YUHO_(O2|H2|Y[123])_PRO" , model : "$1 Pro" , } , Model { regex : "YUHO_Vast_Plus" , model : "Vast Plus" , } , Model { regex : "YUHO_Y1_ACE" , model : "Y1 Ace" , } , Model { regex : "YUHO_Y1_STAR" , model : "Y1 Star" , } , Model { regex : "YUHO_O1_LITE" , model : "O1 Lite" , } , Model { regex : "YUHO_(Vast2?|O[12]|Y2)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Verykool" , Brand { regex : "verykool" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "verykoolS5004" , model : "Lotus JR." , } , Model { regex : "verykoolS5005" , model : "Lotus II" , } , Model { regex : "verykool[ _]?([^/;]+) Build" , model : "$1" , } , Model { regex : "verykool[ _]?([^/;]+);" , model : "$1" , } ,]) , }) , ("Phonemax" , Brand { regex : "PHONEMAX[_ ](Saturn(?:[_ ]X)?|Mars|Venus X)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "PHONEMAX[_ ]Saturn[_ ]X(?:[);/ ]|$)" , model : "Saturn X" , } , Model { regex : "PHONEMAX[_ ]Saturn(?:[);/ ]|$)" , model : "Saturn" , } , Model { regex : "PHONEMAX[_ ]Mars(?:[);/ ]|$)" , model : "Mars" , } , Model { regex : "PHONEMAX[_ ]Venus X(?:[);/ ]|$)" , model : "Venus X" , } ,]) , }) , ("Pioneer" , Brand { regex : "Pioneer|.*; R1 Build|dvr700pi|XDP-300R" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : ".*; R1 Build" , model : "R1" , } , Model { regex : "Pioneer[ _-]?([^;/]+) Build" , model : "$1" , } , Model { regex : "Pioneer[ _-]?([^;/)]+)(?:[;/)]|$)" , model : "$1" , } , Model { regex : "dvr700pi" , model : "DVR700PI 7.0\"" , } , Model { regex : "(XDP-300R)" , model : "$1" , } ,]) , }) , ("Sunstech" , Brand { regex : "(TAB2323GMQC)(?:[);/ ]|$)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("MobiWire" , Brand { regex : "(?:Kiona|KANUNA|Halona|Kicka[_ ][45][ _]Plus|Kohana|Kosumi|KWANITA|Lonan|Hotah|Kicka 5|Kiona)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "KANUNA" , model : "Kanuna" , } , Model { regex : "KWANITA" , model : "Kwanita" , } , Model { regex : "(Kiona|Kicka[_ ][45][ _]Plus|Kohana|Kosumi|Lonan|Halona|Hotah|Kicka 5|Kiona)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("ExMobile" , Brand { regex : "EX(29|45)i(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("EX $1i") , models : None , }) , ("Cloudfone" , Brand { regex : "CloudFone[ _]|(?:Thrill (?:Boost[ ]?(2|3)?|Snap|Access)|Excite Prime 2 Pro|NBA Edition)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Thrill Boost (2|3)(?:[);/ ]|$)" , model : "Thrill Boost $1" , } , Model { regex : "Thrill Boost(?:[);/ ]|$)" , model : "Thrill Boost" , } , Model { regex : "Thrill Snap(?:[);/ ]|$)" , model : "Thrill Snap" , } , Model { regex : "Thrill Access(?:[);/ ]|$)" , model : "Thrill Access" , } , Model { regex : "Excite Prime 2 Pro(?:[);/ ]|$)" , model : "Excite Prime 2 Pro" , } , Model { regex : "NBA Edition(?:[);/ ]|$)" , model : "NBA Edition" , } , Model { regex : "Next(?:[);/ ]|$)" , model : "Next" , } ,]) , }) , ("UTime" , Brand { regex : "UTIME[ _](U6|G7|U100|[TX]1|FX)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("iKoMo" , Brand { regex : "iKoMo ([a-z0-9]+)" , device : Some ("feature phone") , model : Some ("$1") , models : None , }) , ("Bleck" , Brand { regex : "(?:BE_(xl|se|o2|fr|et|dg)|BL-919845)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "BE_(xl|se|o2|fr|et|dg)(?:[);/ ]|$)" , model : "BE $1" , } , Model { regex : "BL-919845" , model : "BE clever 7.0\"" , } ,]) , }) , ("Zen" , Brand { regex : "(Admire[_ ][^/;]+|Cinemax[^/;)]+)(?:Build|\\))|AdmireGlam" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "AdmireGlam(?:[);/ ]|$)" , model : "Admire Glam" , } , Model { regex : "(Admire[_ ][^/;]+|Cinemax[^/;)]+)(?:Build|\\))" , model : "$1" , } ,]) , }) , ("Dbtel" , Brand { regex : "DBTEL(?:[\\-/])?([a-z0-9]+)" , device : Some ("feature phone") , model : Some ("$1") , models : None , }) , ("MIXC" , Brand { regex : "(M35|M20|G7106|G7108)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(M[0-9]{1,2})(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "(G[0-9]{4})(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Toplux" , Brand { regex : "Toplux ([a-z0-9]+)" , device : Some ("feature phone") , model : Some ("$1") , models : None , }) , ("GLX" , Brand { regex : "GLX (?:Aria|Dorna|Taban|Shine|Spark|ASA)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "GLX ASA" , model : "Asa" , } , Model { regex : "GLX (Aria|Taban|Shine|Spark)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "GLX (Dorna)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("RugGear" , Brand { regex : "(RugGear|RG(?:310|500|65[05]|702|7[13]0|850))(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "(RG[0-9]+)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("i-mobile" , Brand { regex : "i-mobile ?[a-z0-9]+|i-Style|IQ ?(9\\.1|5\\.5|5\\.6A?)" , device : Some ("feature phone") , model : None , models : Some (& [Model { regex : "i-mobile (i-note[^/;]*) Build" , model : "$1" , } , Model { regex : "i-Style ?([^;/]+) Build" , model : "i-Style $1" , } , Model { regex : "IQ ?(9\\.1|5\\.5|5\\.6A?)" , model : "IQ $1" , } , Model { regex : "i-mobile (IQ[^/;]*) Build" , model : "$1" , } , Model { regex : "i-mobile(?: )?([a-z0-9\\- ]+) Build" , model : "$1" , } , Model { regex : "i-mobile(?: )?([a-z0-9]+)" , model : "$1" , } ,]) , }) , ("NEC" , Brand { regex : "NEC[ _\\-]|KGT/2\\.0|PC-TE508(?:S1|[BH]AW)|PC-TE510(?:HAW|BAL|S1)|PC-TS708T1W|PC-TS507N1S|PC-TE507JAW|portalmmm/1\\.0 (?:DB|N)|(?:portalmmm|o2imode)/2.0[ ,]N|(?:N-06C|N-02E|LAVIE Tab E (?:10|8)FHD1)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "N-06C(?:[);/ ]|$)" , model : "Medias Amadana" , } , Model { regex : "N-02E(?:[);/ ]|$)" , model : "Medias U" , } , Model { regex : "(?:NEC[ _\\-]|KGT/2\\.0 )([a-z0-9]+)" , model : "$1" , } , Model { regex : "portalmmm/1\\.0 ((?:DB|N)[a-z0-9]+)" , model : "$1" , } , Model { regex : "(?:portalmmm|o2imode)/2\\.0[ ,](N[a-z0-9]+)" , model : "$1" , } , Model { regex : "PC-TE508[BH]AW(?:[);/ ]|$)" , model : "LAVIE Tab E TE508" , } , Model { regex : "PC-TE510(?:BAL|HAW|S1)(?:[);/ ]|$)" , model : "LAVIE Tab E TE510" , } , Model { regex : "PC-TS507N1S(?:[);/ ]|$)" , model : "LAVIE Tab S TS507" , } , Model { regex : "PC-TS708T1W(?:[);/ ]|$)" , model : "LAVIE Tab S TS708" , } , Model { regex : "PC-TE507JAW(?:[);/ ]|$)" , model : "LAVIE Tab E TS507" , } , Model { regex : "PC-TE508S1(?:[);/ ]|$)" , model : "LAVIE Tab E TE508" , } , Model { regex : "(LAVIE Tab E (?:10|8)FHD1)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Spice" , Brand { regex : "(?<![\\d];)Spice" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Spice[ _\\-]?([^/;]+)(?:[\\)]| Build)" , model : "$1" , } , Model { regex : "Spice[ _\\-]?([^/;]+)(?:/|$)" , model : "$1" , } ,]) , }) , ("Acer" , Brand { regex : "acer|(?<!Satellite |ZTE BLADE |ImSmart |ERGO |X-Style Tab )a(?:101|110|2[10]0|211|50[10]|51[10]|70[10])(?:[);/ ]|$)|Android.*V3[67]0(?:[);/ ]|$)|Android.*Z1[23456]0 Build|Android.*Z5\\d{2} Build|Android.*T0[234678] Build|Android.*S55(?:[);/ ]|$)|(?:A1-(713(HD)?|7[23]4|830|841|840FHD|81[01])|A3-A[1234][01]|B1-(7[1235-8][01](HD)?|7[23]3|7A0|8[1235]0|A71|860A)|TPA60W|B3-(A[125]0|A3[02]|A40FHD)|E39)(?:[);/ ]|$)|S5[12]0 Build|(DA[0-9]+HQ?L|Aspire (?:V5-121|XC-704G|V5-573G)|Chromebook 14 \\(CB3-431\\)|Predator G9-793|GT-810|B1-870|B3-A4[02]|B3-A50FHD)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "DA220HQL(?:[);/ ]|$)" , model : "DA220HQL" , } , Model { regex : "DA241HL(?:[);/ ]|$)" , model : "DA241HL" , } , Model { regex : "(DA[0-9]+HQ?L)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "A1-81[01]" , model : "Iconia A" , } , Model { regex : "TPA60W" , model : "TPA60W" , } , Model { regex : "A1-84(1|0FHD)" , model : "Iconia Tab 8" , } , Model { regex : "A1-713(HD)?" , model : "Iconia Tab 7" , } , Model { regex : "A1-830" , model : "Iconia A1" , } , Model { regex : "A1-7[23]4" , model : "Iconia Talk S" , } , Model { regex : "A3-A[12][01]" , model : "Iconia A3" , } , Model { regex : "A3-A[34]0" , model : "Iconia Tab 10" , } , Model { regex : "B1-7(?:[5678]0|30HD|A0)" , model : "Iconia One 7" , } , Model { regex : "B1-7[123][01]|B1-A71" , model : "Iconia B1" , } , Model { regex : "B1-7[23]3" , model : "Iconia Talk 7" , } , Model { regex : "B1-8[123567]0" , model : "Iconia One 8" , } , Model { regex : "B3-A([125]0|3[02]|[45]0FHD|4[02])" , model : "Iconia One 10" , } , Model { regex : "A101" , model : "Vangogh" , } , Model { regex : "A200" , model : "Picasso E" , } , Model { regex : "A50[01]" , model : "Picasso" , } , Model { regex : "Acer One 7" , model : "One 7" , } , Model { regex : "GT-810" , model : "Predator 8" , } , Model { regex : "E39(?:[);/ ]|$)" , model : "Liquid E700" , } , Model { regex : "E310(?:[);/ ]|$)" , model : "Liquid Mini" , } , Model { regex : "E320(?:-orange)?(?:[);/ ]|$)" , model : "Liquid Express" , } , Model { regex : "E310(?:[);/ ]|$)" , model : "beTouch E210" , } , Model { regex : "Android.*V360(?:[);/ ]|$)" , model : "Liquid E1 Duo" , } , Model { regex : "Android.*V370(?:[);/ ]|$)" , model : "Liquid E2 Duo" , } , Model { regex : "S510(?:[);/ ]|$)" , model : "Liquid S1" , } , Model { regex : "S520(?:[);/ ]|$)" , model : "Liquid S2" , } , Model { regex : "(?:Acer_)?P400(?:[);/ ]|$)" , model : "neoTouch P400" , } , Model { regex : "(?:Acer_)?P300(?:[);/ ]|$)" , model : "neoTouch P300" , } , Model { regex : "(?:Acer_)?S200(?:[);/ ]|$)" , model : "neoTouch S200" , } , Model { regex : "(?:Acer_)?E100(?:[);/ ]|$)" , model : "beTouch E100" , } , Model { regex : "Android.*Z1([234])0(?:[);/ ]|$)" , model : "Liquid Z$1" , } , Model { regex : "Android.*Z110(?:[);/ ]|$)" , model : "Liquid Z110" , } , Model { regex : "Android.*Z150(?:[);/ ]|$)" , model : "Liquid Z5 Duo" , } , Model { regex : "Android.*Z160(?:[);/ ]|$)" , model : "Liquid Z4 Duo" , } , Model { regex : "Android.*Z(5\\d{2})(?:[);/ ]|$)" , model : "Liquid Z$1" , } , Model { regex : "Android.*S57(?:[);/ ]|$)" , model : "Liquid Jade Z" , } , Model { regex : "Android.*T02(?:[);/ ]|$)" , model : "Liquid Z530" , } , Model { regex : "Android.*T03(?:[);/ ]|$)" , model : "Liquid Z630" , } , Model { regex : "Android.*T04(?:[);/ ]|$)" , model : "Liquid Z630S" , } , Model { regex : "Android.*T06(?:[);/ ]|$)" , model : "Liquid Zest" , } , Model { regex : "Android.*T07(?:[);/ ]|$)" , model : "Liquid Zest 4G" , } , Model { regex : "Android.*T08(?:[);/ ]|$)" , model : "Liquid Zest Plus" , } , Model { regex : "TM01(?:[);/ ]|$)" , model : "Liquid M330" , } , Model { regex : "M220(?:[);/ ]|$)" , model : "Liquid M220" , } , Model { regex : "AcerTD600" , model : "TD600" , } , Model { regex : "Android.*S55(?:[);/ ]|$)" , model : "Liquid Jade" , } , Model { regex : "(?:Acer )?(Chromebook R1[13])" , model : "$1" , } , Model { regex : "(?:Acer )?(Chromebook 14)" , model : "$1" , } , Model { regex : "(Aspire (?:V5-121|XC-704G|V5-573G|A515-51G))" , model : "$1" , } , Model { regex : "(Predator G9-793|Aspire E5-511)" , model : "$1" , } , Model { regex : "Acer; ?([^;\\(\\)/]+)" , model : "$1" , } , Model { regex : "Acer(?! ?inc)[ _\\-]?([^;\\(\\)/]+)[();/ ]" , model : "$1" , } , Model { regex : "acer[\\-_]([a-z0-9]+)" , model : "$1" , } , Model { regex : "a(101|110|2[10]0|211|50[10]|51[10]|70[10])(?:[);/ ]|$)" , model : "Iconia Tab A$1" , } ,]) , }) , ("Lava" , Brand { regex : "Lava[ _]|LAVAA1|(?:DISCOVER136|KKT QUADRA)|iris[ _]?([^/;]+)(?:\\)| Build)|A(?:67|76) Build|X1 Selfie Build|X41 Plus Build|(?:Flair Z1|PixelV1|Pixel V2\\+?|Z60s|Z61_2GB|A97 IPS|A97 2GB PLUS|L[EH]9920(?:[_ ]P)?|L[NEH]9910|LH9810|Ivory(?:S1|S4G)?|A76Plus)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "Flair Z1(?:[);/ ]|$)" , model : "Flair Z1" , } , Model { regex : "A97 IPS(?:[);/ ]|$)" , model : "A97 IPS" , } , Model { regex : "A97 2GB PLUS(?:[);/ ]|$)" , model : "A97 2GB Plus" , } , Model { regex : "A76Plus(?:[);/ ]|$)" , model : "A76 Plus" , } , Model { regex : "Pixel V2\\+(?:[);/ ]|$)" , model : "Pixel V2 Plus" , } , Model { regex : "Pixel ?V([12])(?:[);/ ]|$)" , model : "Pixel V$1" , } , Model { regex : "X1 Selfie(?:[);/ ]|$)" , model : "Iris X1 Selfie" , } , Model { regex : "X41 Plus(?:[);/ ]|$)" , model : "X41 Plus" , } , Model { regex : "(?:LAVA[_ ]?)?A([13]|67|76)(?:[);/ ]|$)" , model : "A$1" , } , Model { regex : "LAVA_R1" , model : "R1" , } , Model { regex : "Z61_2GB(?:[);/ ]|$)" , model : "Z61" , } , Model { regex : "Z60s(?:[);/ ]|$)" , model : "Z60s" , } , Model { regex : "LE9920[ _]P(?:[);/ ]|$)" , model : "V7" , } , Model { regex : "LE9920(?:[);/ ]|$)" , model : "Z53" , } , Model { regex : "LH9910(?:[);/ ]|$)" , model : "Z52" , } , Model { regex : "LH9810(?:[);/ ]|$)" , model : "Iris 52" , } , Model { regex : "LN9910(?:[);/ ]|$)" , model : "Z41" , } , Model { regex : "LE9910(?:[);/ ]|$)" , model : "V8" , } , Model { regex : "LH9920(?:[);/ ]|$)" , model : "V+6" , } , Model { regex : "DISCOVER136" , model : "Discover 136" , } , Model { regex : "KKT QUADRA" , model : "KKT Quadra" , } , Model { regex : "KKT40[ ]?Power[P\\+]" , model : "KKT40 Power Plus" , } , Model { regex : "Ivory(S1|S4G)?(?:[);/ ]|$)" , model : "Ivory $1" , } , Model { regex : "iris[ _]?([^/;]+)(?:\\)| Build)" , model : "Iris $1" , } , Model { regex : "Lava[ _]?([^/;]+)(?:/| Build)" , model : "$1" , } ,]) , }) , ("Alcatel" , Brand { regex : "Alcatel|Alc(?!or )[a-z0-9]+|One[ _]?Touch|idol3|TIMXL|(?:(?:4003[AJ]|4009[ADEFIKMSX]|4013[DEJKMX]|4014[ADEKMX]|4015[ADNTX]|4016[ADX]|4017[ADEFSX]|4018[ADEFMX]|4024[EDX]|4027[ADNX]|4028[AEJS]|4032[ADEX]|4034[ADEFGXTL]|4035[ADXY]|4045[ADEX]|4047[ADFGNX]|4049[DEGMX]|4060[SW]|A466BG|A621BL|4114E|4087U|5001[ADJTU]|5002[ADFH]|5003[ADGU]|5006D|5007[AU]|5008[ADUYT]|5009[AD]|5010[DEGSUX]|5011A|5012[DFG]|5015[ADEX]|5016[AXJ]|5017[ABDEOX]|5019D|5022[EDX]|5023[EF]|5024[ADJF]|5025[DEG]|5026[ADJ]|5027B|5028[AYD]|5029[EYD]|5030[DE]|5032W|5033[AEFXDJGMOTXYQS]|5034D|5036D|5038[ADEX]|5039[DY]|5041[CD]|5042[ADEFGWXT]|5044[ADGIKOPSTY]|5045[ADFGIJTXY]|5046[ADGIJSTUY]|5047[DIUY]|5048[AYUI]|5049[EGSWZ]|5050[ASXY]|5051[ADEJMTWX]|5052[ADY]|5053[ADKY]|5054[ADNSTWX]|5056[ADEGIJMNTUWX]|5057M|5058[AIY]|5059[ADJXYZIST]|5060[ADJ]|5061[KU]|5065[ADNWX]|5070D|5080[ADFQUX]|5085[ABCDGHIJNOQY]|5086[ADY]|5090[AIY]|5095[IKY]|5098[OS]|5099[ADYUI]|5116J|5145A|6016[ADEX]|6025H|6036[AXY]|6037[BKY]|6039[AHJKY]|6042D|6043[AD]|6044D|6045[BFIKOYX]|6050[AFY]|6055[ABDHIKPUYZ]|6058[ADX]|6060[SX]|6062W|6070K|7040[ADEFKRT]|7041[DX]|7042A|7043[AEKY]|7044[AX]|7045Y|7048[ASWX]|7053D|7055A|7070X|7071[ADX]|8030Y|8050[DEGX]|8063|8088[XQM]|9001[DIX]|9002X|9003[AX]|9024O|9005X|9026X|9007[ATX]|9008[ADIJNTUX]|9009G|9010X|9020A|9022X|9027[FTWX]|9029Z|9203A|A(?:464BG|570BL|50[13]DL|57[17]VL|574BL)|I213|I216X|(?<!\\.)80(?:82|6[78])|A576CC)(?:_(?:EEA|RU))?|P360X)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "4087U" , model : "1SE Light" , } , Model { regex : "5022[EDX]|5070D" , model : "One Touch Pop Star" , } , Model { regex : "6044D" , model : "One Touch Pop Up" , } , Model { regex : "4015[ATX]|4016A" , model : "One Touch Pop C1" , } , Model { regex : "4015[DN]|4016[DX]" , model : "One Touch Pop C1 Dual SIM" , } , Model { regex : "4032[AX]" , model : "One Touch Pop C2" , } , Model { regex : "4032[DE]" , model : "One Touch Pop C2 Dual SIM" , } , Model { regex : "5036D" , model : "One Touch Pop C5 Dual SIM" , } , Model { regex : "7040[AFK]|7041X|7042A" , model : "One Touch Pop C7" , } , Model { regex : "7040[DE]|7041D" , model : "One Touch Pop C7 Dual SIM" , } , Model { regex : "4018[ADEFMX]" , model : "One Touch Pop D1" , } , Model { regex : "4035[ADXY]" , model : "One Touch Pop D3" , } , Model { regex : "5038[ADEX]" , model : "One Touch Pop D5" , } , Model { regex : "4045[AX]" , model : "One Touch Pop 2 4\"" , } , Model { regex : "4045[DE]" , model : "One Touch Pop 2 4\" Dual SIM" , } , Model { regex : "5042[AFGWX]" , model : "One Touch Pop 2 4.5\"" , } , Model { regex : "5042[DE]" , model : "One Touch Pop 2 4.5\" Dual SIM" , } , Model { regex : "7043[AY]|7044[AX]" , model : "One Touch Pop 2 5\"" , } , Model { regex : "7043[EK]" , model : "One Touch Pop 2 5\" Dual SIM" , } , Model { regex : "50[16]5X" , model : "One Touch Pop 3" , } , Model { regex : "5015[AE]|5016[AJ]|5065[ADWX]|5116J" , model : "One Touch Pop 3 5\"" , } , Model { regex : "5025[DEG]|5054[ADSTX]" , model : "One Touch Pop 3 5.5\"" , } , Model { regex : "5015D" , model : "One Touch Pop 3 Dual SIM" , } , Model { regex : "5051[AEJMTWX]" , model : "One Touch Pop 4" , } , Model { regex : "5051D" , model : "One Touch Pop 4 Dual SIM" , } , Model { regex : "5095[IKY]" , model : "One Touch Pop 4S" , } , Model { regex : "5056[ADEGJMTUX]" , model : "One Touch Pop 4+" , } , Model { regex : "7070X" , model : "One Touch Pop 4 6\"" , } , Model { regex : "5057M" , model : "One Touch Pop Mirage" , } , Model { regex : "5050[ASXY]" , model : "One Touch Pop S3" , } , Model { regex : "7045Y" , model : "One Touch Pop S7" , } , Model { regex : "6037[BKY]" , model : "One Touch Idol 2" , } , Model { regex : "5042T" , model : "One Touch Astro" , } , Model { regex : "5027B" , model : "One Touch Dawn" , } , Model { regex : "5024[ADF]|5028Y|6025H" , model : "1S" , } , Model { regex : "7071[ADX]" , model : "A7 XL" , } , Model { regex : "5002[ADH]" , model : "1B (2020)" , } , Model { regex : "4034T" , model : "1E" , } , Model { regex : "5002F" , model : "1A (2020)" , } , Model { regex : "5034D" , model : "3L" , } , Model { regex : "A576CC" , model : "Kora A576CC" , } , Model { regex : "7040[RT]" , model : "One Touch Fierce 2" , } , Model { regex : "5056[NW]" , model : "One Touch Fierce 4" , } , Model { regex : "5054N" , model : "One Touch Fierce XL" , } , Model { regex : "6042D" , model : "One Touch Flash" , } , Model { regex : "6016[AX]" , model : "One Touch Idol 2 mini" , } , Model { regex : "6016[DE]" , model : "One Touch Idol 2 mini Dual SIM" , } , Model { regex : "6036[AXY]" , model : "One Touch Idol 2 mini S" , } , Model { regex : "6050[AFY]" , model : "One Touch Idol 2S" , } , Model { regex : "6039[AHJKY]|idol3" , model : "One Touch Idol 3" , } , Model { regex : "6045[BFIKOYX]" , model : "One Touch Idol 3 5.5\"" , } , Model { regex : "6055[ABDHIKPUYZ]" , model : "One Touch Idol 4" , } , Model { regex : "6070K" , model : "One Touch Idol 4S" , } , Model { regex : "6058[ADX]" , model : "One Touch Idol 5" , } , Model { regex : "6060[SX]" , model : "One Touch Idol 5S" , } , Model { regex : "6043[AD]" , model : "One Touch Idol X+" , } , Model { regex : "8030Y" , model : "One Touch Hero 2" , } , Model { regex : "7055A" , model : "One Touch Hero 2C" , } , Model { regex : "7053D" , model : "One Touch X1" , } , Model { regex : "5065N" , model : "TRU" , } , Model { regex : "A574BL" , model : "Raven" , } , Model { regex : "A577VL" , model : "Zip" , } , Model { regex : "A466BG" , model : "Pixi Unite" , } , Model { regex : "5056I" , model : "One Touch Optus X Smart" , } , Model { regex : "A570BL" , model : "One Touch Pixi Avion LTE" , } , Model { regex : "A571VL" , model : "One Touch Pixi Avion 4G LTE" , } , Model { regex : "4024[DEX]" , model : "One Touch Pixi First" , } , Model { regex : "A464BG" , model : "One Touch Pixi Glitz" , } , Model { regex : "A621BL" , model : "One Touch Pixi Glory" , } , Model { regex : "4014D" , model : "One Touch Pixi 2" , } , Model { regex : "4009[AFIKMSX]" , model : "One Touch Pixi 3 3.5\"" , } , Model { regex : "4009[DE]" , model : "One Touch Pixi 3 3.5\" Dual SIM" , } , Model { regex : "4003[AJ]|4013[DEJKMX]|4014[AEKMX]|4114E" , model : "One Touch Pixi 3 4\"" , } , Model { regex : "4027[ADNX]|4028[AEJS]|5019D" , model : "One Touch Pixi 3 4.5\"" , } , Model { regex : "5017[ABDEOX]" , model : "One Touch Pixi 3 4.5\" 4G" , } , Model { regex : "9002X" , model : "One Touch Pixi 3 7\"" , } , Model { regex : "9007A" , model : "One Touch Pixi 3 7\"" , } , Model { regex : "9007[TX]" , model : "One Touch Pixi 3 7\" 4G" , } , Model { regex : "9009G" , model : "1T" , } , Model { regex : "(?!<\\.)8082(?:_(?:EEA|RU))?(?:[);/ ]|$)" , model : "1T 10" , } , Model { regex : "(?!<\\.)806[78](?:_(?:EEA|RU))?(?:[);/ ]|$)" , model : "1T 7" , } , Model { regex : "9022X" , model : "One Touch Pixi 3 8\"" , } , Model { regex : "9010X" , model : "One Touch Pixi 3 10\"" , } , Model { regex : "4017[ADEFSX]" , model : "One Touch Pixi 4 3.5\"" , } , Model { regex : "4034[ADEFGXL]" , model : "One Touch Pixi 4 4\"" , } , Model { regex : "4060[SW]" , model : "One Touch Pixi 4 4.5\"" , } , Model { regex : "5023[EF]" , model : "One Touch Pixi 4 Plus Power" , } , Model { regex : "5010[DEGSUX]" , model : "One Touch Pixi 4 5\" 3G" , } , Model { regex : "5041D" , model : "One Touch Pixi 4 5.0\"" , } , Model { regex : "5012[DFG]" , model : "One Touch Pixi 4 5.5\" 3G" , } , Model { regex : "5045[ADFGIJTXY]|5145A" , model : "One Touch Pixi 4 5\" 4G" , } , Model { regex : "5098O" , model : "One Touch Pixi Theatre" , } , Model { regex : "A501DL" , model : "A1" , } , Model { regex : "A503DL" , model : "A1X" , } , Model { regex : "5046[ADIJTUY]" , model : "A3" , } , Model { regex : "5011A|5049[EG]" , model : "A3 Plus" , } , Model { regex : "9008[ADIJNTUX]" , model : "A3 XL" , } , Model { regex : "9203A" , model : "A3 7\" 3G" , } , Model { regex : "9027[FTWX]" , model : "3T 8.0\"" , } , Model { regex : "9026X" , model : "A3 10\"" , } , Model { regex : "5085[BQ]" , model : "A5" , } , Model { regex : "5085[ADHIJY]" , model : "A5 LED" , } , Model { regex : "5085N" , model : "A5 Max LED" , } , Model { regex : "5090[AIY]" , model : "A7" , } , Model { regex : "5046[GS]" , model : "A30" , } , Model { regex : "5049S" , model : "A30 Plus" , } , Model { regex : "5049Z" , model : "A30 Fierce" , } , Model { regex : "5085[GO]" , model : "A50" , } , Model { regex : "5048[AYUI]" , model : "3X (2019)" , } , Model { regex : "5049W" , model : "Revvl" , } , Model { regex : "8050[GX]" , model : "One Touch Pixi 4 6\" 3G" , } , Model { regex : "8050[ED]" , model : "One Touch Pixi 4 6\" 3G Dual SIM" , } , Model { regex : "5098S|9001[DIX]" , model : "One Touch Pixi 4 6\" 4G" , } , Model { regex : "9003[AX]" , model : "One Touch Pixi 4 7\" 3G" , } , Model { regex : "8063" , model : "One Touch Pixi 4 7\" WiFi" , } , Model { regex : "9024O" , model : "One Touch Pixi 5" , } , Model { regex : "I216X" , model : "One Touch Pixi 7" , } , Model { regex : "I213" , model : "One Touch Pixi 7" , } , Model { regex : "9005X" , model : "One Touch Pixi 8" , } , Model { regex : "P320X" , model : "One Touch POP 8" , } , Model { regex : "P310X" , model : "One Touch POP 7" , } , Model { regex : "9020A" , model : "One Touch Trek HD" , } , Model { regex : "7048[ASWX]" , model : "One Touch Go Play" , } , Model { regex : "(?:Alcatel-)?OT-802" , model : "Wave" , } , Model { regex : "ALCATEL_ONE_TOUCH_768T" , model : "Island" , } , Model { regex : "(?:TRIBE_)?3075A" , model : "One Touch Tribe" , } , Model { regex : "ALCATEL_one_touch_585" , model : "One Touch 585" , } , Model { regex : "ALCATEL_ONE_TOUCH_838" , model : "One Touch 838" , } , Model { regex : "ALCATEL_one_touch_813d" , model : "One Touch 813D" , } , Model { regex : "ALCATEL_one_touch_813" , model : "One Touch 813" , } , Model { regex : "OT871A" , model : "One Touch 871A" , } , Model { regex : "P360X" , model : "One Touch Pop 10" , } , Model { regex : "(?:Alcatel[ _])?One[ _]?Touch[ _]((?:T[0-9]+|TAB[^/;]+|EVO[78](?:HD)?)) Build" , model : "One Touch $1" , } , Model { regex : "(?:Alcatel[ _])?One[ _]?Touch([^/;]*) Build" , model : "One Touch$1" , } , Model { regex : "(?:Alcatel[ _])?One[ _]?Touch([^/;\\)]*)\\)" , model : "One Touch$1" , } , Model { regex : "5080[ADFQUX]" , model : "Shine Lite" , } , Model { regex : "TIMXL" , model : "TIM XL" , } , Model { regex : "5085C" , model : "PulseMix" , } , Model { regex : "4049[DEGMX]" , model : "U3" , } , Model { regex : "5044[ADIKOPTY]" , model : "U5" , } , Model { regex : "4047[DFXN]" , model : "U5 3G" , } , Model { regex : "5047[DIUY]" , model : "U5 HD" , } , Model { regex : "4047G" , model : "U5 Lite" , } , Model { regex : "4047A" , model : "U5 Plus" , } , Model { regex : "4044[CV]" , model : "Quick Flip" , } , Model { regex : "4044O" , model : "Cingular Flip 2" , } , Model { regex : "(?:Alcatel)?4044[MNT]" , model : "Go Flip" , } , Model { regex : "5044[GS]" , model : "U50" , } , Model { regex : "5033[ADXJEFGMOTXYQS]" , model : "1" , } , Model { regex : "5009[AD]" , model : "1C" , } , Model { regex : "5008[ADUYT]" , model : "1X (2019)" , } , Model { regex : "5007[AU]" , model : "1V (2020)" , } , Model { regex : "5003[ADGU]" , model : "1C (2019)" , } , Model { regex : "5006D" , model : "3C (2019)" , } , Model { regex : "5024J" , model : "1S" , } , Model { regex : "5028[AD]" , model : "1S (2020)" , } , Model { regex : "5030[DE]" , model : "1SE (2020)" , } , Model { regex : "5001[ADJTU]" , model : "1V" , } , Model { regex : "5059[ADJXYZIT]" , model : "1X" , } , Model { regex : "5059S" , model : "Avalon V" , } , Model { regex : "5060[ADJ]" , model : "5V" , } , Model { regex : "5052[ADY]|5053[ADKY]" , model : "3" , } , Model { regex : "5029E" , model : "3 (2020)" , } , Model { regex : "5029[DY]" , model : "3L (2020)" , } , Model { regex : "5032W|5099[ADYUI]" , model : "3V" , } , Model { regex : "5026[ADJ]" , model : "3C" , } , Model { regex : "5039[DY]" , model : "3L" , } , Model { regex : "5058[AIY]" , model : "3X" , } , Model { regex : "5061[KU]" , model : "3X (2020)" , } , Model { regex : "5086[ADY]" , model : "5" , } , Model { regex : "6062W" , model : "7" , } , Model { regex : "8088[XQM]" , model : "3T 10" , } , Model { regex : "9029Z" , model : "Joy Tab" , } , Model { regex : "9029Z" , model : "Joy Tab" , } , Model { regex : "9029Z" , model : "Joy Tab" , } , Model { regex : "Alcatel UP" , model : "" , } , Model { regex : "(?:ALCATEL_)?A383G" , model : "Big Easy Plus" , } , Model { regex : "5041C" , model : "TETRA" , } , Model { regex : "ALCATEL([^/;]+) Build" , model : "$1" , } , Model { regex : "ALCATEL[ \\-]?([^/;\\)]+)" , model : "$1" , } , Model { regex : "ALCATEL_([^/;\\)]+)" , model : "$1" , } , Model { regex : "Alc([a-z0-9]+)" , model : "$1" , } ,]) , }) , ("Positivo BGH" , Brand { regex : "(?:T1060B|S455|Positivo (?:Twist|Ypy|Mini I)|Twist[ _](?:\\(2018\\)|2 (?:Fit|Pro)|Mini|Tab|Metal(?: 32GB)?|Max|XL|SE|[23SM]))(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "S455(?:[);/ ]|$)" , model : "Selfie" , } , Model { regex : "Twist \\(2018\\)(?:[);/ ]|$)" , model : "Twist (2018)" , } , Model { regex : "Twist Metal 32GB(?:[);/ ]|$)" , model : "Twist Metal 32GB" , } , Model { regex : "Twist Metal(?:[);/ ]|$)" , model : "Twist Metal" , } , Model { regex : "Twist Max(?:[);/ ]|$)" , model : "Twist Max" , } , Model { regex : "Twist[ _]Mini(?:[);/ ]|$)" , model : "Twist Mini" , } , Model { regex : "Twist 2 Fit(?:[);/ ]|$)" , model : "Twist 2 Fit" , } , Model { regex : "Twist 2 Pro(?:[);/ ]|$)" , model : "Twist 2 Pro" , } , Model { regex : "Twist XL(?:[);/ ]|$)" , model : "Twist XL" , } , Model { regex : "Twist SE(?:[);/ ]|$)" , model : "Twist SE" , } , Model { regex : "(?:Positivo )?Twist ([23SM])(?:[);/ ]|$)" , model : "Twist $1" , } , Model { regex : "(?:Positivo )Mini I(?:[);/ ]|$)" , model : "Mini I" , } , Model { regex : "T1060B(?:[);/ ]|$)" , model : "T1060B" , } , Model { regex : "Positivo Ypy (AB7F|AB10H|L1050E)(?:[);/ ]|$)" , model : "Ypy $1" , } , Model { regex : "Twist Tab(?:[);/ ]|$)" , model : "Twist Tab" , } ,]) , }) , ("Haier" , Brand { regex : "Haier|I6_Infinity|Titan[ _]T[135]|(?:HW-)?W(?:71[67]|757|860|970)(?:[);/ ]|$)|S5 Silk|(?:HM-)?(N505|N700|G(?:152|303|353|552|70[01])?-FL|HM-N501-FL|G(?:303)?-W|I(?:557)?-FL)|(?:PAD[ _](?:D71|G781|d85))|A2_Lite_NFC" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "A2_Lite_NFC" , model : "Alpha A2 Lite NFC" , } , Model { regex : "HM-N505-FL" , model : "I8" , } , Model { regex : "S5 Silk" , model : "S5 Silk" , } , Model { regex : "HM-N700-FL" , model : "L7" , } , Model { regex : "HM-N501-FL" , model : "L56" , } , Model { regex : "(?:HM-)?(G(?:152|353|552|70[01])|G(?:303)|I(?:557))" , model : "$1" , } , Model { regex : "(Titan[_ ]T[135]|I6_Infinity)" , model : "$1" , } , Model { regex : "(?:HW-)?W(71[67]|757|860|970)(?:[);/ ]|$)" , model : "W$1" , } , Model { regex : "PAD[ -_](D71|G781|d85)" , model : "$1" , } , Model { regex : "Haier[ _\\-](H[WT]-[^/;]+) Build" , model : "$1" , } , Model { regex : "Haier[ _\\-](H[WT]-[a-z0-9_\\-]+)" , model : "$1" , } , Model { regex : "Haier[ _\\-](sy[0-9]+)" , model : "$1" , } , Model { regex : "Haier[ _\\-]([a-z0-9\\-]+)" , model : "$1" , } ,]) , }) , ("STK" , Brand { regex : "STK[_ ]" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "STK[_ ]([^/;]+) Build" , model : "$1" , } , Model { regex : "STK[_ ]([a-z0-9]+)" , model : "$1" , } ,]) , }) , ("Fengxiang" , Brand { regex : "(vKB011B|vKB004L)" , device : Some ("tablet") , model : Some ("$1") , models : None , }) , ("Maze Speed" , Brand { regex : "(SSB-(?:500|508)|SSB408D|SSB504R)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "SSB-?(500|508|408D|504R)(?:[);/ ]|$)" , model : "SSB-$1" , } ,]) , }) , ("Huadoo" , Brand { regex : "Huadoo[ _](HG0[46]|HG11|V[34])(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Axioo" , Brand { regex : "PICOp(?:hone|ad)_" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "PICOphone_(L1|M4N|M4P_M3|M4U_M2_M)" , model : "PicoPhone $1" , } , Model { regex : "PICOphone_M2" , model : "PicoPhone M2 M" , } , Model { regex : "PICOpad_(7H_7)_3G" , model : "PicoPad $1 3G" , } ,]) , }) , ("CUBOT" , Brand { regex : "CUBOT|(?<!QUMO )QUEST(?!(?:[0-9]|\\s[0-9]))(?: LITE)?|(?:NOTE 20 PRO|RAINBOW 2|KING_KONG_3|ZORRO 001|KINGKONG[_ ]MINI2?|KING KONG CS|R15_PRO)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "CHEETAH 2" , model : "Cheetah 2" , } , Model { regex : "RAINBOW 2" , model : "Rainbow 2" , } , Model { regex : "RAINBOW" , model : "Rainbow" , } , Model { regex : "DINOSAUR" , model : "Dinosaur" , } , Model { regex : "KINGKONG MINI2" , model : "King Kong Mini 2" , } , Model { regex : "KINGKONG_MINI" , model : "King Kong Mini" , } , Model { regex : "KING_KONG_3" , model : "King Kong 3" , } , Model { regex : "KING KONG CS" , model : "King Kong CS" , } , Model { regex : "KING KONG" , model : "King Kong" , } , Model { regex : "QUEST LITE" , model : "Quest Lite" , } , Model { regex : "QUEST" , model : "Quest" , } , Model { regex : "ZORRO 001" , model : "Zorro 001" , } , Model { regex : "CUBOT[ _]Echo" , model : "Echo" , } , Model { regex : "CUBOT[ _]MANITO" , model : "Manito" , } , Model { regex : "CUBOT[ _]MAGIC" , model : "Magic" , } , Model { regex : "CUBOT[ _]MAX" , model : "Max" , } , Model { regex : "NOTE Plus" , model : "Note Plus" , } , Model { regex : "NOTE 20 PRO" , model : "Note 20 Pro" , } , Model { regex : "R15_PRO" , model : "R15 Pro" , } , Model { regex : "CUBOT[_ ]NOTE[_ ]S" , model : "Note S" , } , Model { regex : "CUBOT_NOVA" , model : "Nova" , } , Model { regex : "CUBOT_POWER" , model : "Power" , } , Model { regex : "CUBOT_X18_Plus" , model : "X18 Plus" , } , Model { regex : "CUBOT[ _](A5|C6W|H3|J3|P7|P20|[RXJ]9|R11|X18)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "CUBOT ([^;/]+) Build" , model : "$1" , } , Model { regex : "([^;/]+) Build/CUBOT" , model : "$1" , } ,]) , }) , ("2E" , Brand { regex : "(?:E500A_2019|2E E450 2018)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "E500A_2019(?:[);/ ]|$)" , model : "E500A (2019)" , } , Model { regex : "2E E450 2018(?:[);/ ]|$)" , model : "E450 (2018)" , } ,]) , }) , ("Mann" , Brand { regex : "(ZUG 3|ZUG 5S(?: Q)?)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("CAGI" , Brand { regex : "CAGI-" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "CAGI-OMEGA" , model : "Omega" , } , Model { regex : "CAGI-([a-z0-9_\\-]+)" , model : "$1" , } ,]) , }) , ("Astro" , Brand { regex : "Astro[- ](S451|S501)(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Black Fox" , Brand { regex : "BMM[ _-]?(?:44[123]D|441[WB]|44[12]S|431D|533D|54[12]S|541[ABW]|54[123]D|543S|531[ABD]|532 S)(?:[);/ ]|$)" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "BMM443D" , model : "B7 Fox+" , } , Model { regex : "BMM441S" , model : "B8 Fox" , } , Model { regex : "BMM442S|BMM441B" , model : "B8 Fox+" , } , Model { regex : "BMM441W" , model : "B8M" , } , Model { regex : "BMM442D" , model : "B7" , } , Model { regex : "BMM531D" , model : "B6" , } , Model { regex : "BMM531A" , model : "B5" , } , Model { regex : "BMM541A" , model : "B5+" , } , Model { regex : "BMM543[DS]" , model : "B4" , } , Model { regex : "BMM441D" , model : "B4 Mini" , } , Model { regex : "BMM541B" , model : "B4 Mini NFC" , } , Model { regex : "BMM531B" , model : "B4 Mini (2019)" , } , Model { regex : "BMM542D" , model : "B3+" , } , Model { regex : "BMM541D" , model : "B3" , } , Model { regex : "BMM541W" , model : "B7R Fox" , } , Model { regex : "BMM 532 S" , model : "BMM 532S" , } , Model { regex : "BMM[ _-]?(533D|431D|54[12]S)(?:[);/ ]|$)" , model : "BMM $1" , } ,]) , }) , ("iTruck" , Brand { regex : "iTRUCK 7 3G(?:[);/ ]|$)" , device : Some ("smartphone") , model : Some ("7.0\" 3G") , models : None , }) , ("Ouki" , Brand { regex : "OUKI|OK[AU][0-9]+[a-z]* Build" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "OUKI[ _-]?([^;/]+) Build" , model : "$1" , } , Model { regex : "([^;/)]+) Build/OUKI" , model : "$1" , } , Model { regex : "OUKI[ _-]?([^;/)]+)(?:[;/)]|$)" , model : "$1" , } , Model { regex : "(OK[AU][0-9]+[a-z]*) Build" , model : "$1" , } ,]) , }) , ("Tooky" , Brand { regex : "TOOKY" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "TOOKY (A19|W1|T8[368]|T1982)(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "TOOKY A9PLUS(?:[);/ ]|$)" , model : "A9 Plus" , } ,]) , }) , ("Cloudpad" , Brand { regex : "\\+VT(?:107C|Q007C)(?:[);/ ]|$)" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "\\+VT(107C)" , model : "+VT$1" , } , Model { regex : "\\+VTQ(007C)" , model : "+VTQ$1" , } ,]) , }) , ("PocketBook" , Brand { regex : "PocketBook[ _/]" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "PocketBook SURFpad 3 \\(([\\d]+).([\\d]+)[\"]?\\)(?:[);/ ]|$)" , model : "Surfpad 3 $1.$2\"" , } , Model { regex : "PocketBook/(62[67]|63[12]|740|840)(?:[);/ ]|$)" , model : "$1" , } ,]) , }) , ("Winnovo" , Brand { regex : "Winnovo[ _]" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "Winnovo[ _](M866|M798|VTab|750[PK])(?:[);/ ]|$)" , model : "$1" , } , Model { regex : "Winnovo[ _](K5[46]|K43)[a-z]{2}" , model : "$1" , } ,]) , }) , ("Memup" , Brand { regex : "SlidePad ?([^;/]*) Build|SPNG?[0-9]{2,4}[a-z]{0,2}(?:[);/ ]|$)|SP704CE?|SP-NG708-3G" , device : Some ("tablet") , model : None , models : Some (& [Model { regex : "SlidePad ?([^;/]*) Build" , model : "SlidePad $1" , } , Model { regex : "SPNG([0-9]{2,4}[a-z]{0,2})(?:[);/ ]|$)" , model : "SlidePad NG$1" , } , Model { regex : "SP-NG(708)-3G(?:[);/ ]|$)" , model : "SlidePad NG$1 3G" , } , Model { regex : "SP704(CE?)" , model : "SlidePad 704$1" , } ,]) , }) , ("MEU" , Brand { regex : "MEU ([a-z0-9]+) Build" , device : Some ("smartphone") , model : Some ("$1") , models : None , }) , ("Stonex" , Brand { regex : "STX[ -]([^;/]+)|STONE EVO" , device : Some ("smartphone") , model : None , models : Some (& [Model { regex : "STX[ -]([^;/]+) Build" , model : "$1" , } , Model { regex : "STX[ -]([a-z0-9_-]+)" , model : "$1" , } ,]) , }) ,] ;
pub static NOTEBOOKS : [(& str , Brand) ; 8usize] = [("HP" , Brand { regex : "FBMD/((?:Compaq|HP) |23-f364)" , device : Some ("desktop") , model : None , models : Some (& [Model { regex : "Compaq Presario CQ61 Notebook PC" , model : "Compaq Presario CQ61" , } , Model { regex : "HP Pavilion x2 Detachable" , model : "Pavilion x2" , } , Model { regex : "HP Laptop 15-bs0xx" , model : "15 Laptop PC" , } , Model { regex : "HP ENVY x360 Convertible 15-bp0xx" , model : "ENVY x360 Convertible PC" , } , Model { regex : "HP EliteBook (25[67]0p)" , model : "EliteBook $1" , } , Model { regex : "HP ProBook (440 G5|6[35]60b)" , model : "ProBook $1" , } , Model { regex : "HP Pavilion dv6 Notebook PC" , model : "Pavilion dv6" , } , Model { regex : "HP Pavilion Notebook" , model : "Pavilion" , } , Model { regex : "HP Spectre x360 Convertible" , model : "Spectre x360" , } , Model { regex : "HP Pavilion All-in-One 24-r0xx" , model : "Pavilion 24-r0xx All-in-One Desktop PC" , } , Model { regex : "23-f364" , model : "Pavilion TouchSmart 23-f364 All-in-One Desktop PC" , } ,]) , }) , ("Asus" , Brand { regex : "FBMD/(?:K50IN|K54L|T100HAN|T103HAF|UX360CAK|X550LB|X553MA|X555LN|X556UQK);" , device : Some ("desktop") , model : None , models : Some (& [Model { regex : "FBMD/K50IN;" , model : "K50IN" , } , Model { regex : "FBMD/K54L;" , model : "K54L" , } , Model { regex : "FBMD/T100HAN;" , model : "Transformer Book" , } , Model { regex : "FBMD/T103HAF;" , model : "Transformer Mini" , } , Model { regex : "FBMD/UX360CAK;" , model : "ZenBook Flip" , } , Model { regex : "FBMD/X550LB;" , model : "X550LB" , } , Model { regex : "FBMD/X553MA;" , model : "X553MA" , } , Model { regex : "FBMD/X555LN;" , model : "X555LN" , } , Model { regex : "FBMD/X556UQK;" , model : "X556UQK" , } ,]) , }) , ("Toshiba" , Brand { regex : "FBMD/Satellite " , device : Some ("desktop") , model : None , models : Some (& [Model { regex : "Satellite (A[25]00|C650|C855|L650|S855)" , model : "Satellite $1" , } , Model { regex : "Satellite ([^;\\)]+);" , model : "Satellite $1" , } ,]) , }) , ("Thomson" , Brand { regex : "FBMD/TH360R12.32CTW;" , device : Some ("desktop") , model : Some ("Prestige TH-360R12.32CTW") , models : None , }) , ("Acer" , Brand { regex : "FBMD/(?:Aspire E5-421G|Z5WAL|One S1003);" , device : Some ("desktop") , model : None , models : Some (& [Model { regex : "FBMD/Aspire E5-421G;" , model : "Aspire E5-421G" , } , Model { regex : "FBMD/Z5WAL;" , model : "Aspire E5-511" , } , Model { regex : "FBMD/One S1003;" , model : "One 10" , } ,]) , }) , ("Schneider" , Brand { regex : "FBMD/SCL141CTP;" , device : Some ("desktop") , model : Some ("Notebook 14\" Cherry Trail") , models : None , }) , ("Dell" , Brand { regex : "FBMD/(?:Latitude E4300|Inspiron 3541|XPS 15 95[35]0);" , device : Some ("desktop") , model : None , models : Some (& [Model { regex : "Latitude E4300" , model : "Latitude E4300" , } , Model { regex : "Inspiron 3541" , model : "Inspiron 3541" , } , Model { regex : "XPS 15 9530" , model : "XPS 15 9530" , } , Model { regex : "XPS 15 9550" , model : "XPS 15 9550" , } ,]) , }) , ("Lenovo" , Brand { regex : "FBMD/(?:37021C5|80E5|80SM|80VR);" , device : Some ("desktop") , model : None , models : Some (& [Model { regex : "FBMD/37021C5;" , model : "ThinkPad Helix 3702" , } , Model { regex : "FBMD/80E5;" , model : "G50-80" , } , Model { regex : "FBMD/80SM;" , model : "Ideapad 310-15ISK" , } , Model { regex : "FBMD/80VR;" , model : "Legion Y720" , } ,]) , }) ,] ;
pub static PORTABLE_MEDIA_PLAYER : [(& str , Brand) ; 7usize] = [("SONOS" , Brand { regex : "Sonos/.+\\((?:ZP.+)\\)|Sonos;" , device : Some ("portable media player") , model : None , models : Some (& [Model { regex : "\\((ZPS(?:[13569]|1[1-578]|2[03])|ZP90)\\)" , model : "$1" , } , Model { regex : "Sonos;Play5;" , model : "Play:5" , } , Model { regex : "Sonos;One;" , model : "One" , } ,]) , }) , ("Cowon" , Brand { regex : "COWON ([^;/]+) Build" , device : Some ("portable media player") , model : Some ("$1") , models : None , }) , ("Samsung" , Brand { regex : "YP-(G[SIPB]?1|G[57]0|GB70D)" , device : Some ("portable media player") , model : None , models : Some (& [Model { regex : "YP-G[B]?1" , model : "Galaxy Player 4.0" , } , Model { regex : "YP-G70" , model : "Galaxy Player 5.0" , } , Model { regex : "YP-GS1" , model : "Galaxy Player 3.6" , } , Model { regex : "YP-GI1" , model : "Galaxy Player 4.2" , } , Model { regex : "YP-GP1" , model : "Galaxy Player 5.8" , } , Model { regex : "YP-G50" , model : "Galaxy Player 50" , } , Model { regex : "YP-GB70D" , model : "Galaxy Player 70 Plus" , } ,]) , }) , ("Apple" , Brand { regex : "(?:Apple-)?iPod" , device : Some ("portable media player") , model : None , models : Some (& [Model { regex : "(?:Apple-)?iPod1[C,]1" , model : "iPod Touch 1G" , } , Model { regex : "(?:Apple-)?iPod2[C,]1" , model : "iPod Touch 2G" , } , Model { regex : "(?:Apple-)?iPod3[C,]1" , model : "iPod Touch 3" , } , Model { regex : "(?:Apple-)?iPod4[C,]1" , model : "iPod Touch 4" , } , Model { regex : "(?:Apple-)?iPod5[C,]1" , model : "iPod Touch 5" , } , Model { regex : "(?:Apple-)?iPod7[C,]1" , model : "iPod Touch 6" , } , Model { regex : "(?:Apple-)?iPod" , model : "iPod Touch" , } ,]) , }) , ("Panasonic" , Brand { regex : "(SV-MV100)" , device : Some ("portable media player") , model : Some ("$1") , models : None , }) , ("Wizz" , Brand { regex : "(DV-PTB1080)(?:[);/ ]|$)" , device : Some ("portable media player") , model : Some ("$1") , models : None , }) , ("Microsoft" , Brand { regex : "Microsoft ZuneHD" , device : Some ("portable media player") , model : Some ("Zune HD") , models : None , }) ,] ;
pub static TELEVISIONS : [(& str , Brand) ; 85usize] = [("TCL" , Brand { regex : "TCL" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "(32D1820|(?:39|55)D2900|32D2930|(?:32|43)S4900)" , model : "$1" , } ,]) , }) , ("Intek" , Brand { regex : "Intek" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "(Vantage|VT-100|VT-1)" , model : "$1" , } ,]) , }) , ("DMM" , Brand { regex : "DMM" , device : Some ("tv") , model : Some ("Dreambox") , models : None , }) , ("Sony" , Brand { regex : "Sony" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "KDL-GR1" , model : "KDL-GR1" , } , Model { regex : "KDL-GN([56])" , model : "KDL-GN$1" , } , Model { regex : "BRAVIA (VH1|4K VH2)" , model : "BRAVIA $1" , } , Model { regex : "(KDL?-?[0-9]{2}[A-Z]{1}[0-9]{4}[A-Z]{1})" , model : "$1" , } , Model { regex : "(KDL?-?[0-9]{2}[A-Z]{1}[0-9]{3}[A-Z]{1})" , model : "$1" , } , Model { regex : "(KDL?-?[0-9]{2}[A-Z]{1,2}[0-9]{1,5})" , model : "$1" , } ,]) , }) , ("Salora" , Brand { regex : "Salora[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("REGAL" , Brand { regex : "REGAL[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("Ikea" , Brand { regex : "Ikea" , device : Some ("tv") , model : Some ("") , models : None , }) , ("Laurus" , Brand { regex : "LAURUS[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("GoGEN" , Brand { regex : "GOGEN[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("Lifemaxx" , Brand { regex : "Lifemaxx[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("AOC" , Brand { regex : "AOC" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "(LE43S5970-20|S50856)" , model : "$1" , } ,]) , }) , ("TOKYO" , Brand { regex : "TOKYO[;,]" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "TOKTCLED32S" , model : "TOKTCLED32S" , } ,]) , }) , ("Altech UEC" , Brand { regex : "Altech UEC" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "Altech UEC; ?([^);/]+)" , model : "$1" , } ,]) , }) , ("X.Vision" , Brand { regex : "X-VISION[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("Polaroid" , Brand { regex : "POLAROID[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("Techwood" , Brand { regex : "Techwood[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("Ok" , Brand { regex : "OK[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("PEAQ" , Brand { regex : "PEAQ" , device : Some ("tv") , model : Some ("") , models : None , }) , ("Sharp" , Brand { regex : "(?:UMC-)?Sharp" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "Sharp[,;] ?((?! |HbbTV)[^),;/]+)" , model : "$1" , } , Model { regex : "(LE[0-9]{3}[A-Z]{0,3})" , model : "$1" , } , Model { regex : "LC-([^);/]+)" , model : "LC-$1" , } , Model { regex : "BLA-43" , model : "BLA-43" , } ,]) , }) , ("Thomson" , Brand { regex : "THOMSON[,]?|THOM" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "(TB28D19DHS-01|T28D18SFS-01B)" , model : "$1 28.0\"" , } , Model { regex : "(T32RTM5040|T32D18SFS-01B)" , model : "$1 32.0\"" , } , Model { regex : "(T43FSL5031|T43D18SFS-01B)" , model : "$1 43.0\"" , } , Model { regex : "(T40D18SFS-01B)" , model : "$1 40.0\"" , } , Model { regex : "(T49D18SFS-01B)" , model : "$1 49.0\"" , } , Model { regex : "(T55D18[SD]FS-01B)" , model : "$1 55.0\"" , } , Model { regex : "40FB5426" , model : "40FB5426" , } ,]) , }) , ("Hitachi" , Brand { regex : "Hitachi[;,]" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "49D2900" , model : "49D2900" , } ,]) , }) , ("Humax" , Brand { regex : "Humax" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "(HD-FOX C|HD (FOX\\+|NANO)|iCord (HD\\+|MINI|Cable)|(CX|IR)HD-5100(C|S)|HM9503HD)" , model : "$1" , } , Model { regex : "HMS1000S" , model : "HMS-1000S" , } , Model { regex : "Humax; ([^);/]+)" , model : "$1" , } ,]) , }) , ("Atvio" , Brand { regex : "ATVIO" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "55D1620" , model : "55D1620" , } ,]) , }) , ("Hyundai" , Brand { regex : "HYUNDAI[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("Manhattan" , Brand { regex : "Manhattan" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "T3" , model : "T3" , } ,]) , }) , ("Essentielb" , Brand { regex : "ESSENTIELB[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("Toshiba" , Brand { regex : "Toshiba" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "40L2600" , model : "40L2600" , } , Model { regex : "(([0-9]{2}|DTV_)[A-Z]{2}[0-9]{1,3})" , model : "$1" , } ,]) , }) , ("Fuego" , Brand { regex : "FUEGO[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("TD Systems" , Brand { regex : "TDSystems[;,]" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "SmartTV(2019|2020)" , model : "Smart TV ($1)" , } ,]) , }) , ("Vestel" , Brand { regex : "(?:Vestel.+VESTEL|VESTEL;)" , device : Some ("tv") , model : Some ("") , models : None , }) , ("Panasonic" , Brand { regex : "Panasonic" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "VIERA (201[1-9])" , model : "VIERA ($1)" , } , Model { regex : "(DIGA [A-Z]{1}[0-9]{4})" , model : "$1" , } , Model { regex : "DIGA Webkit ([A-Z]{1}[0-9]{4})" , model : "DIGA $1" , } , Model { regex : "SmartTV(201[89]|202[0-1])" , model : "Smart TV ($1)" , } ,]) , }) , ("TechniSat" , Brand { regex : "TechniSat" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "((DigiCorder|MultyVision|Digit) (ISIO S|ISIO C|ISIO))" , model : "$1" , } ,]) , }) , ("Technika" , Brand { regex : "TECHNIKA[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("Selevision" , Brand { regex : "Selevision" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "Selevision; (?:Selevision )?([^);/]+)" , model : "$1" , } , Model { regex : "(EMC1000i)" , model : "$1" , } ,]) , }) , ("Haier" , Brand { regex : "(?:HHW_)?HAIER" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "LE55X7000U" , model : "LE55X7000U" , } ,]) , }) , ("Celcus" , Brand { regex : "CELCUS[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("Grundig" , Brand { regex : "(OWB|Grundig|Arcelik)" , device : Some ("tv") , model : Some ("") , models : None , }) , ("Hi-Level" , Brand { regex : "HI-LEVEL[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("MStar" , Brand { regex : "MStar[;,]" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "([24])KTV18" , model : "$1KTV18" , } ,]) , }) , ("Metz" , Brand { regex : "Metz" , device : Some ("tv") , model : Some ("") , models : None , }) , ("SCBC" , Brand { regex : "SCBC[;,]" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "SCBC586" , model : "SCBC586" , } , Model { regex : "43D1850" , model : "43D1850" , } ,]) , }) , ("LG" , Brand { regex : "LGE" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "XU43WT180N" , model : "XU43WT180N" , } , Model { regex : "43LJ614V-ZA" , model : "43LJ614V-ZA" , } , Model { regex : "55SK850V-ZA" , model : "55SK850V-ZA" , } , Model { regex : "KEY0000213F1z" , model : "KEY0000213F1z" , } , Model { regex : "KEY0000213F" , model : "KEY0000213F" , } , Model { regex : "KEY000000(2E|2F|3B|3F)" , model : "KEY000000$1" , } , Model { regex : "(NetCast [0-9]{1}.[0-9]{1}|GLOBAL_PLAT3)" , model : "$1" , } , Model { regex : "(OLED[0-9]{2}[A-Z0-9]{3}[A-Z]{2})" , model : "$1" , } , Model { regex : "(OLED[0-9]{2}[A-Z][0-9][A-Z])" , model : "$1" , } , Model { regex : "(OLED[0-9]{2}[A-Z0-9]{2})" , model : "$1" , } , Model { regex : "([0-9]{2}[A-Z]{2}[0-9]{4}[A-Z0-9]{1}[A-Z]{2})" , model : "$1" , } , Model { regex : "([0-9]{2}NANO[0-9]{3}[A-Z]{2})" , model : "$1" , } , Model { regex : "([0-9]{2}NANO[0-9]{2})" , model : "$1" , } , Model { regex : "LGE;? ?([0-9]{2}[A-Z]{2}[0-9]{2,4}[A-Z]?)" , model : "$1" , } , Model { regex : "LM21U" , model : "LM21U" , } , Model { regex : "32LM" , model : "32LM" , } ,]) , }) , ("Nordmende" , Brand { regex : "NORDMENDE[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("TechnoTrend" , Brand { regex : "TechnoTrend" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "([A-Z]{1}-[0-9]{3})" , model : "$1" , } ,]) , }) , ("Horizon" , Brand { regex : "HORIZON[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("Philips" , Brand { regex : "Philips|NETTV/" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "Philips[,;] ?((?! )[^),;/]+)" , model : "$1" , } , Model { regex : "NETTV/[0-9\\.]{5}" , model : "NetTV Series" , } ,]) , }) , ("SEG" , Brand { regex : "SEG[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("Telefunken" , Brand { regex : "Telefunken" , device : Some ("tv") , model : Some ("") , models : None , }) , ("Linsar" , Brand { regex : "LINSAR[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("Skyworth" , Brand { regex : "Sky_worth" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "Sky_worth;([^);/]+)" , model : "$1" , } ,]) , }) , ("BangOlufsen" , Brand { regex : "Bangolufsen" , device : Some ("tv") , model : Some ("BeoVision") , models : None , }) , ("Luxor" , Brand { regex : "LUXOR[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("KUBO" , Brand { regex : "KUBO[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("Qilive" , Brand { regex : "QILIVE[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("Medion" , Brand { regex : "Medion" , device : Some ("tv") , model : Some ("") , models : None , }) , ("Airties" , Brand { regex : "Airties" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "Airties; ?([^);/]+)" , model : "$1" , } ,]) , }) , ("CreNova" , Brand { regex : "CreNova" , device : Some ("tv") , model : Some ("CNV001") , models : None , }) , ("Videoweb" , Brand { regex : "videoweb|tv2n" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "(tv2n)" , model : "$1" , } , Model { regex : "(videowebtv)" , model : "VideoWeb TV" , } ,]) , }) , ("Finlux" , Brand { regex : "FINLUX[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("ARRIS" , Brand { regex : "ARRIS[;,]" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "FS-ARS-01B" , model : "FS-ARS-01B" , } ,]) , }) , ("SWTV" , Brand { regex : "SWTV[;,]" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "SKWE20E21" , model : "SKWE20E21" , } ,]) , }) , ("PROFiLO" , Brand { regex : "PROFILO[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("Hotel" , Brand { regex : "HOTEL[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("Blaupunkt" , Brand { regex : "Blaupunkt_UMC[;,]" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "LC-65CUG8052E" , model : "LC-65CUG8052E" , } ,]) , }) , ("MediaTek" , Brand { regex : "MTK|MediaTek;" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "(MT[0-9]{4})" , model : "$1" , } ,]) , }) , ("WELLINGTON" , Brand { regex : "WELLINGTON[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("ALDI SÜD" , Brand { regex : "ALDISUED[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("F&U" , Brand { regex : "FU[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("Inverto" , Brand { regex : "Inverto" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "inverto; ([^);/]+)" , model : "$1" , } , Model { regex : "(Volksbox Web Edition|Volksbox Essential|Volksbox II|Volksbox)" , model : "$1" , } ,]) , }) , ("Smart" , Brand { regex : "Smart[;,]" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "Smart; ([^);/]+)" , model : "$1" , } , Model { regex : "([A-Z]{2}[0-9]{2}|ZAPPIX)" , model : "$1" , } ,]) , }) , ("Miray" , Brand { regex : "MIRAY" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "LEDM-322NIP" , model : "LEDM-322NIP" , } ,]) , }) , ("Changhong" , Brand { regex : "Changhong" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "Changhong; ?([^);/]+)" , model : "$1" , } ,]) , }) , ("Digihome" , Brand { regex : "DIGIHOME[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("ELECTRONIA" , Brand { regex : "ELECTRONIA[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("Kalley" , Brand { regex : "KALLEY[;,]" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "32D1620" , model : "32D1620" , } ,]) , }) , ("MTC" , Brand { regex : "MTC[;,]" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "([24])K_Android_TV_V01" , model : "$1K Android TV" , } ,]) , }) , ("Technicolor" , Brand { regex : "Technicolor" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "uzw4054ttg" , model : "UZW4054TTG" , } ,]) , }) , ("VOX" , Brand { regex : "VOX[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("ALDI NORD" , Brand { regex : "ALDINORD[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("Samsung" , Brand { regex : "Samsung|Maple_2011" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "SmartTV(201[2-9]|202[0-1]):([^);/]+)" , model : "$2" , } , Model { regex : "SmartTV(201[2-9]|202[0-1])" , model : "Smart TV ($1)" , } , Model { regex : "Maple_2011" , model : "Smart TV (2011)" , } ,]) , }) , ("Loewe" , Brand { regex : "Loewe" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "([A-Z]{2}[0-9]{3})" , model : "$1" , } ,]) , }) , ("Bush" , Brand { regex : "BUSH[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) , ("Hisense" , Brand { regex : "Hisense|Eurofins_Digital_Testing" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "50ADEVTOOL" , model : "50ADEVTOOL" , } , Model { regex : "50A683FEVS" , model : "50A683FEVS" , } , Model { regex : "55A6100EE" , model : "55A6100EE" , } , Model { regex : "55U62QGAVT" , model : "55U62QGAVT" , } , Model { regex : "50A6502EA" , model : "50A6502EA" , } , Model { regex : "MICALIDVB6886" , model : "MICALIDVB6886" , } , Model { regex : "(L[A-Z]{2,3}[0-9]{2}[A-Z][0-9]{3,4}[A-Z]{0,6}[0-9]?[A-Z]?)" , model : "$1" , } , Model { regex : "(H[A-Z]?[0-9]{2}[A-Z][0-9]{3,4}[A-Z]{0,4})" , model : "$1" , } ,]) , }) , ("JVC" , Brand { regex : "AFTSO001|JVC[;,]" , device : Some ("tv") , model : None , models : Some (& [Model { regex : "AFTSO001" , model : "4K (2019)" , } ,]) , }) , ("Saba" , Brand { regex : "Saba[;,]" , device : Some ("tv") , model : Some ("") , models : None , }) ,] ;
